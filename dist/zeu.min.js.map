{"version":3,"sources":["webpack://zeu/webpack/universalModuleDefinition","webpack://zeu/webpack/bootstrap","webpack://zeu/./src/utility.js","webpack://zeu/./src/color.js","webpack://zeu/./src/base-component.js","webpack://zeu/./src/base-canvas.js","webpack://zeu/./src/global.js","webpack://zeu/./src/settings.js","webpack://zeu/./src/animation-timer.js","webpack://zeu/./src/div/scroll-panel.js","webpack://zeu/./src/div/blink-text.js","webpack://zeu/./src/div/warning-dialog.js","webpack://zeu/./src/text-box.js","webpack://zeu/./src/speed-circle.js","webpack://zeu/./src/text-meter.js","webpack://zeu/./src/digital-number.js","webpack://zeu/./src/stop-watch.js","webpack://zeu/./src/round-gauge.js","webpack://zeu/./src/round-radar.js","webpack://zeu/./src/message-queue.js","webpack://zeu/./src/heartbeat.js","webpack://zeu/./src/volume-meter.js","webpack://zeu/./src/round-fan.js","webpack://zeu/./src/digital-clock.js","webpack://zeu/./src/bar-meter.js","webpack://zeu/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utility","_classCallCheck","this","min","max","Math","floor","random","toString","h","now","Date","setHours","getHours","speed","date","PI","getSeconds","getMilliseconds","degree","hex","opacity","replace","parseInt","substring","color","isNaN","round","charAt","rgb","colorStart","colorEnd","colorCount","start","hexToRgb","end","len","alpha","rt","push","convertToHex","undefined","curr","dest","a","j","temp","length","lightGreen","lightGrey","lighBlack","black","white","red","blue","yellow","cyan","grey","green","_global","_utility","_interopRequireDefault","BaseComponent","canvas","options","viewX","viewY","viewWidth","viewHeight","_canvas","_ctx","getContext","_scaleX","_scaleY","_x","_y","_viewWidth","_viewHeight","_width","_height","_display","_eventQueue","drawFrame","setOptions","postConstructor","addToAnimationQueue","event","type","destX","destY","shift","default","getNextPos","speedX","speedY","isDisplay","drawObject","clearRect","scale","getAnimationFrameArrayPos","GLOBAL","requestAnimationFrameArray","drawFrameObj","index","splice","func","self","id","removeFromAnimationQueue","duration","srcX","srcY","sX","abs","sY","x","y","height","_color","BaseCanvas","baseDiv","width","_div","_defaultWidth","_defaultHeight","document","createElement","setAttribute","clientWidth","clientHeight","appendChild","_fontColor","COLOR","_lineColor","_fillColor","_heightScale","_scaledWidth","stopAnimation","removeChild","startAnimation","_animationTimer","Settings","_fps","fps","_settings","AnimationTimer","render","_fpsInterval","_lastFrame","requestAnimationFrame","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","elapsed","ScrollPanel","defaultCss","_defaultCss","has","_isUp","isUp","_maxQueueCapacity","maxQueueCapacity","_queue","boxDiv","pop","insertBefore","firstChild","scrollBottom","scrollHeight","scrollTop","toBeRemoved","text","css","innerHTML","style","cssText","capacity","BlinkText","_blinkTimer","_interval","interval","_blinkCss","blinkCss","message","_this","setInterval","currCss","clearInterval","unblink","blink","WarningDialog","_reasonText","reason","dailog","panel","innerPanel","warning","_reason","_dialog","body","getElementsByTagName","zeuPole","head","styleSheet","createTextNode","display","_baseComponent","TextBox","arguments","_possibleConstructorReturn","__proto__","getPrototypeOf","_borderWidth","_borderHeight","_space","_waveY","_waveSpeed","_isWaveOn","_textValue","_textColor","fontColor","_textBgColor","bgColor","_bgColor","_borderColor","borderColor","_waveColor","waveColor","textAlign","fillStyle","fillRect","save","beginPath","closePath","font","fillText","restore","SpeedCircle","_font","_degree1","_degree2","_degree3","_degree4","c1","circle1","c2","circle2","c3","circle3","c4","circle4","_speed1","_color1","_speed2","_color2","_speed3","_color3","_speed4","_color4","getNextAngleByDegree","a1","getAngleByDegree","a2","a3","a4","clear","translate","rotate","strokeStyle","lineWidth","arc","stroke","cos","sin","fill","x1","y1","x2","y2","moveTo","lineTo","_speed","TextMeter","_lineWidth","_arrowWidth","_pctHeight","_actualPctHeight","_meterWidth","_meterHeight","_middleBarHeight","_barX","_percentageValue","_nextBarX","_arrow","_arrowSpeed","_leftArrowX","_rightArrowX","bar","marker","_displayValue","displayValue","_percentageBgColor","_markerFontColor","fillColor","_arrowColor","arrowColor","globalCompositeOperation","rect","clip","drawLeftArrow","drawRightArrow","DigitalNumber","canvasCtx","barWidth","numberWidth","numberHeight","dashColor","numberColor","_barWidth","_verBarHeight","_horBarHeight","_dashColor","_numberColor","topLeft","bottomLeft","topRight","bottomRight","top","middle","bottom","number","drawEmpty","_baseCanvas","_digitalNumber","StopWatch","_millisNumber","_lastTime","_elapsedTime","_state","second","millis","sec","hour","slice","clearAll","drawTwoDigits","digitalNumber","time","space","drawNumber","left","right","RoundGauge","_startValue","startValue","_endValue","endValue","_startDegree","startDegree","_endDegree","endDegree","_isHandArrow","isHandArrow","_isPercentage","isPercentage","_value","lineColor","_handColor","handColor","balck","_valueFont","valueFont","_scaleFont","_startAngle","_endAngle","_currDegree","_targetDegree","valueToDegree","angle","scaleValue","valueToPct","degreeToValue","RoundRadar","_gridColor","gridColor","_targetColor","targetColor","_hasGrid","_targets","radius","isDefined","getRandomInt","getAngleByDate","getTime","MessageQueue","_arcWidth","_barHeight","barHeight","bars","drawQueueSize","q","currY","quadraticCurveTo","param","barColor","barSpace","Heartbeat","_lastSec","_timer","_get","drawSeconds","params","beatColor","beatSpace","_this2","currSec","leftPadZero","getMinutes","VolumeMeter","_numberHeight","_minMax","_numberStart","_actualValue","_barY","_minValue","_maxValue","_nextBarY","_lastBlink","drawMarker","drawMin","drawMax","markder","_minFontColor","_minBgColor","_maxFontColor","_maxBgColor","_barBorderColor","_barFillColor","_isGraident","graident","_markerBgColor","createLinearGradient","addColorStop","blinkFunc","lastBlink","RoundFan","_degree","center","_fanColor","fanColor","_centerColor","_centerBgColor","DigitalClock","_bw","_bh","_hourOffset","hourOffset","tick","stopTick","addHour","drawTime","drawInterpoint","vTopLeft","vBottomLeft","vBottomRight","vTopRight","hTop","hMiddle","hBottom","BarMeter","_currBar","_numberOfBars","_min","_max","_barMax","_barColor","_isGradient","gradient","colors","generateGradientColor","_barMeter","_digitalClock","_roundFan","_volumeMeter","_heartbeat","_messageQueue","_roundRadar","_roundGauge","_stopWatch","_textMeter","_speedCircle","_textBox","_warningDialog","_blinkText","_scrollPanel"],"mappings":"CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,OAAA,SAAAH,GACA,iBAAAC,QACAA,QAAA,IAAAD,IAEAD,EAAA,IAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,+QCjFqBC,aAEnB,SAAAA,iGAAcC,CAAAC,KAAAF,oGAEMG,EAAKC,GACvB,OAAOC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,IAAMA,2CAIrD,MAAO,MAAQ,GAAK,IAAME,KAAKE,SAAW,GAAGC,SAAS,gCAG7Cd,EAAQH,GACjB,QAAOG,GAASG,eAAe1B,KAAKuB,EAAQH,mCAG/BkB,GACb,IAAIC,EAAM,IAAIC,KAGd,OADAD,EAAIE,SAASF,EAAIG,WAAaJ,GACvBC,yCAGaI,EAAOC,GAC3B,OAASD,EAAQT,KAAKW,GAAM,EAAKD,EAAKE,aAAiBH,EAAQT,KAAKW,GAAM,IAAQD,EAAKG,+DAG7DC,EAAQL,GAClC,OAAIK,GAAU,IACL,EAEFA,EAASL,2CAGMK,GACtB,OAAOA,EAASd,KAAKW,GAAK,sCAGXI,EAAKC,GACpB,IAAIZ,EAAIW,EAAIE,QAAQ,IAAK,IAKzB,MAAO,QAJCC,SAASd,EAAEe,UAAU,EAAG,GAAI,IAIf,IAHbD,SAASd,EAAEe,UAAU,EAAG,GAAI,IAGL,IAFvBD,SAASd,EAAEe,UAAU,EAAG,GAAI,IAEK,IAAMH,EAAU,IAAM,qCAGjDD,GACd,IAAIX,EAAIW,EAAIE,QAAQ,IAAK,IACrBG,KAKJ,OAHAA,EAAM,GAAKF,SAASd,EAAEe,UAAU,EAAG,GAAI,IACvCC,EAAM,GAAKF,SAASd,EAAEe,UAAU,EAAG,GAAI,IACvCC,EAAM,GAAKF,SAASd,EAAEe,UAAU,EAAG,GAAI,IAChCC,8BAGEpD,GACT,IAAI0B,EAAI,mBACJ/B,EAAIuD,SAASlD,EAAG,IAEpB,OAAU,IAANL,GAAW0D,MAAMrD,GACZ,MAETL,EAAIqC,KAAKsB,MAAMtB,KAAKF,IAAIE,KAAKD,IAAI,EAAGpC,GAAI,MACjC+B,EAAE6B,QAAQ5D,EAAIA,EAAI,IAAM,IAAM+B,EAAE6B,OAAO5D,EAAI,0CAGhC6D,GAClB,OAAO3B,KAAKkB,IAAIS,EAAI,IAAM3B,KAAKkB,IAAIS,EAAI,IAAM3B,KAAKkB,IAAIS,EAAI,kDAG/BC,EAAYC,EAAUC,GAOjD,IANA,IAAMC,EAAQ/B,KAAKgC,SAASJ,GACtBK,EAAMjC,KAAKgC,SAASH,GACpBK,EAAMJ,EACRK,EAAQ,EACRC,KAEKtE,EAAI,EAAGA,EAAIoE,EAAKpE,IAAK,CAC5B,IAAMK,KAENgE,GAAU,EAAMD,EAChB/D,EAAE,GAAK4D,EAAM,GAAKI,GAAS,EAAIA,GAASF,EAAI,GAC5C9D,EAAE,GAAK4D,EAAM,GAAKI,GAAS,EAAIA,GAASF,EAAI,GAC5C9D,EAAE,GAAK4D,EAAM,GAAKI,GAAS,EAAIA,GAASF,EAAI,GAC5CG,EAAGC,KAAKrC,KAAKsC,aAAanE,IAE5B,OAAOiE,oCAGQ7D,GACf,YAAagE,IAANhE,GAAyB,OAANA,sCAGTgB,GACjB,OAAIA,EAAI,GACC,IAAMA,EAERA,qCAGSiD,EAAMC,EAAM7B,GAC5B,OAAKA,EAAQ,GAAK4B,EAAOC,GAAU7B,EAAQ,GAAK4B,EAAOC,EAC9CD,EAAO5B,EAET6B,uCAGWC,GAIlB,IAHA,IAAIC,EAAI,EACJC,EAAO,EAEF9E,EAAI4E,EAAEG,OAAS,EAAG/E,EAAI,EAAGA,IAChC6E,EAAIxC,KAAKC,MAAMD,KAAKE,UAAYvC,EAAI,IACpC8E,EAAOF,EAAE5E,GACT4E,EAAE5E,GAAK4E,EAAEC,GACTD,EAAEC,GAAKC,EAET,OAAOF,kJCtHTI,WAAY,UACZC,UAAW,UACXC,UAAW,SACXC,MAAO,UACPC,MAAO,UACPC,IAAK,UACLC,KAAM,UACNC,OAAQ,UACRC,KAAM,UACNC,KAAM,UACNC,MAAO,2GCZT,IAAAC,EAAA7F,EAAA,GACA8F,mDAAAC,CAAA/F,EAAA,8KAEqBgG,aAEnB,SAAAA,EAAYC,EAAQC,EAASC,EAAOC,EAAOC,EAAWC,gGAAYnE,CAAAC,KAAA4D,GAEhE5D,KAAKmE,QAAUN,EAGf7D,KAAKoE,KAAOpE,KAAKmE,QAAQE,WAAW,MAGpCrE,KAAKsE,QAAU,EACftE,KAAKuE,QAAU,EAGfvE,KAAKwE,GAAKT,EAGV/D,KAAKyE,GAAKT,EAGVhE,KAAK0E,WAAaT,EAClBjE,KAAK2E,YAAcT,EAEnBlE,KAAK4E,OAAS5E,KAAKsE,QAAUtE,KAAK0E,WAClC1E,KAAK6E,QAAU7E,KAAKuE,QAAUvE,KAAK2E,YAEnC3E,KAAK8E,UAAW,EAGhB9E,KAAK+E,eAGL/E,KAAKgF,UAAYhF,KAAKgF,UAAU1F,KAAKU,MAGrCA,KAAKiF,WAAWnB,GAGhB9D,KAAKkF,4GAIIpB,8CAGT9D,KAAKmF,0DAKL,GAAInF,KAAK+E,YAAYlC,OAAS,EAAG,CAC/B,IAAMuC,EAAQpF,KAAK+E,YAAY,GAEZ,SAAfK,EAAMC,OACJrF,KAAKwE,KAAOY,EAAME,OAAStF,KAAKyE,KAAOW,EAAMG,MAC/CvF,KAAK+E,YAAYS,SAEjBxF,KAAKwE,GAAKd,EAAA+B,QAAQC,WAAW1F,KAAKwE,GAAIY,EAAME,MAAOF,EAAMO,QACzD3F,KAAKyE,GAAKf,EAAA+B,QAAQC,WAAW1F,KAAKyE,GAAIW,EAAMG,MAAOH,EAAMQ,UAM1D5F,KAAK6F,aAQV7F,KAAK8F,mFAOL9F,KAAKoE,KAAK2B,UAAU/F,KAAKwE,GAAIxE,KAAKyE,GAAIzE,KAAK4E,OAAQ5E,KAAK6E,yCAIxD7E,KAAKoE,KAAK4B,MAAMhG,KAAKsE,QAAStE,KAAKuE,wDAMpB,IAFHvE,KAAKiG,6BAGfxC,EAAAyC,OAAOC,2BAA2B9D,KAAKrC,KAAKoG,mEAK9C,IAAIC,EAAQrG,KAAKiG,6BAEF,IAAXI,GACF5C,EAAAyC,OAAOC,2BAA2BG,OAAOD,EAAO,0CAKlD,OACEE,KAAMvG,KAAKgF,UACXwB,KAAMxG,0DAOR,IAFA,IAAIqG,GAAS,EAEJvI,EAAI,EAAGA,EAAI2F,EAAAyC,OAAOC,2BAA2BtD,OAAQ/E,IAAK,CAGjE,GAFmB2F,EAAAyC,OAAOC,2BAA2BrI,GAEpC0I,KAAKrC,QAAQsC,KAAOzG,KAAKmE,QAAQsC,GAAI,CACpDJ,EAAQvI,EACR,OAGJ,OAAOuI,2CASPrG,KAAKmF,8DAILnF,KAAK0G,0DAGApB,EAAOC,EAAOoB,GAKnB,IAJA,IAAIC,EAAO5G,KAAKwE,GACZqC,EAAO7G,KAAKyE,GAGP3G,EAAIkC,KAAK+E,YAAYlC,OAAQ/E,GAAK,EAAGA,IAAK,CACjD,IAAMsH,EAAQpF,KAAK+E,YAAYjH,GAE/B,GAAmB,SAAfsH,EAAMC,KAAiB,CACzBuB,EAAOxB,EAAME,MACbuB,EAAOzB,EAAMG,MACb,OAMJ,IAAM3E,EAAQ+F,EAAW,GACnBG,EAAK3G,KAAK4G,IAAIzB,EAAQsB,GAAQhG,EAC9BoG,EAAK7G,KAAK4G,IAAIxB,EAAQsB,GAAQjG,EAC9B+E,EAASL,EAAQsB,EAAOE,GAAMA,EAC9BlB,EAASL,EAAQsB,EAAOG,GAAMA,EAWpC,OARAhH,KAAK+E,YAAY1C,MACfgD,KAAM,OACNC,MAAOA,EACPC,MAAOA,EACPI,OAAQA,EACRC,OAAQA,IAGH5F,qCAGDiH,EAAGC,GAKT,OAJAlH,KAAKsE,QAAU2C,EACfjH,KAAKuE,QAAU2C,EACflH,KAAK4E,OAAS5E,KAAKsE,QAAUtE,KAAK0E,WAClC1E,KAAK6E,QAAU7E,KAAKuE,QAAUvE,KAAK2E,YAC5B3E,2CAGKmH,GAKZ,OAJAnH,KAAKuE,QAAU4C,EAASnH,KAAK2E,YAC7B3E,KAAKsE,QAAUtE,KAAKuE,QACpBvE,KAAK4E,OAAS5E,KAAKsE,QAAUtE,KAAK0E,WAClC1E,KAAK6E,QAAU7E,KAAKuE,QAAUvE,KAAK2E,YAC5B3E,oCAIPA,KAAK8E,UAAW,iCAIhB9E,KAAK8E,UAAW,sCAIhB,OAAO9E,KAAK8E,+CAxEZ,OAA6C,IAAtC9E,KAAKiG,2DA4EZ,OAAOjG,KAAKmE,wCAIZ,OAAOnE,KAAKoE,wCAIZ,OAAOpE,KAAK+E,8CAIZ,OAAO/E,KAAK0E,8CAIZ,OAAO1E,KAAK2E,qJC3NhB,IAAAlB,EAAA7F,EAAA,GACAwJ,EAAAxJ,EAAA,6KAEqByJ,aAEnB,SAAAA,EAAYC,EAASC,EAAOJ,gGAAQpH,CAAAC,KAAAqH,GAClCrH,KAAKwH,KAAOF,EACZtH,KAAKyH,cAAgBF,EACrBvH,KAAK0H,eAAiBP,EACtBnH,KAAKmE,QAAUwD,SAASC,cAAc,UACtC5H,KAAKmE,QAAQ0D,aAAa,QAASP,EAAQQ,aAC3C9H,KAAKmE,QAAQ0D,aAAa,SAAUP,EAAQS,cAC5C/H,KAAKwH,KAAKQ,YAAYhI,KAAKmE,SAC3BnE,KAAKoE,KAAOpE,KAAKmE,QAAQE,WAAW,MAQpCrE,KAAKgF,UAAYhF,KAAKgF,UAAU1F,KAAKU,MAGrCA,KAAKiI,WAAab,EAAAc,MAAMjF,MACxBjD,KAAKmI,WAAaf,EAAAc,MAAM3E,KACxBvD,KAAKoI,WAAahB,EAAAc,MAAM1E,MAGxBxD,KAAKqI,aAAerI,KAAKwH,KAAKO,aAAe/H,KAAK0H,eAGlD1H,KAAKsI,aAAetI,KAAKyH,cAAgBzH,KAAKqI,aAE9CrI,KAAKkF,2GAILlF,KAAKuI,gBACLvI,KAAKwH,KAAKgB,YAAYxI,KAAKmE,mDAI3BnE,KAAKyI,iDAILzI,KAAKoE,KAAK4B,MAAMhG,KAAKqI,aAAcrI,KAAKqI,iDAIxCrI,KAAKoE,KAAK2B,UAAU,EAAG,EAAG/F,KAAKmE,QAAQoD,MAAOvH,KAAKmE,QAAQgD,kDAM5C,IAFHnH,KAAKiG,6BAGfxC,EAAAyC,OAAOC,2BAA2B9D,KAAKrC,KAAKoG,wDAK9C,IAAIC,EAAQrG,KAAKiG,6BAEF,IAAXI,GACF5C,EAAAyC,OAAOC,2BAA2BG,OAAOD,EAAO,0CAKlD,OACEE,KAAMvG,KAAKgF,UACXwB,KAAMxG,0DAWR,IAFA,IAAIqG,GAAS,EAEJvI,EAAI,EAAGA,EAAI2F,EAAAyC,OAAOC,2BAA2BtD,OAAQ/E,IAAK,CAGjE,GAFmB2F,EAAAyC,OAAOC,2BAA2BrI,GAEpC0I,KAAKgB,KAAKf,KAAOzG,KAAKwH,KAAKf,GAAI,CAC9CJ,EAAQvI,EACR,OAGJ,OAAOuI,6EAdP,OAA6C,IAAtCrG,KAAKiG,8KC5EdE,+HCFF,IAAAuC,mDAAA/E,CAAA/F,EAAA,gLAae,eAVb,SAAA+K,iGAAc5I,CAAAC,KAAA2I,GACZ3I,KAAK4I,KAAO,oFAGNC,GACN7I,KAAK4I,KAAOC,EACZH,EAAAjD,QAAemD,KAAOC,4ICT1B,IAAApF,EAAA7F,EAAA,GACAkL,mDAAAnF,CAAA/F,EAAA,gLAmDe,eA/Cb,SAAAmL,iGAAchJ,CAAAC,KAAA+I,GAEZ/I,KAAKgJ,OAAShJ,KAAKgJ,OAAO1J,KAAKU,MAG/BA,KAAK4I,KAAOE,EAAArD,QAASmD,KACrB5I,KAAKiJ,aAAe,IAAOjJ,KAAK4I,KAChC5I,KAAKkJ,WAAazI,KAAKD,MAGlB9C,OAAOyL,wBACVzL,OAAO0L,iBAAmB,WACxB,OAAO1L,OAAO2L,6BACN3L,OAAO4L,0BACP5L,OAAO6L,wBACP7L,OAAO8L,kHAMnB9L,OAAOyL,sBAAsBnJ,KAAKgJ,QAGlC,IAAIxI,EAAMC,KAAKD,MACXiJ,EAAUjJ,EAAMR,KAAKkJ,WAEzB,GAAIO,EAAUzJ,KAAKiJ,aAAc,CAC/BjJ,KAAKkJ,WAAa1I,EAAOiJ,EAAUzJ,KAAKiJ,aAGxC,IAAK,IAAInL,EAAI,EAAGA,EAAI2F,EAAAyC,OAAOC,2BAA2BtD,OAAQ/E,IAAK,CAC9C2F,EAAAyC,OAAOC,2BAA2BrI,GASxCyI,KAAKtI,mJC9C1B,IAAAyF,mDAAAC,CAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,6KAKqB8L,aAEnB,SAAAA,EAAYpC,EAASxD,gGAAS/D,CAAAC,KAAA0J,GAC5B1J,KAAKwH,KAAOF,EAEZ,IAAIqC,EAAa,8DAAgEvC,EAAAc,MAAM1E,MAAQ,IAG/FxD,KAAK4J,YAAclG,EAAA+B,QAAQoE,IAAI/F,EAAS,cAAgBA,EAAQ6F,WAAaA,EAC7E3J,KAAK8J,OAAQpG,EAAA+B,QAAQoE,IAAI/F,EAAS,SAAUA,EAAQiG,KACpD/J,KAAKgK,kBAAoBtG,EAAA+B,QAAQoE,IAAI/F,EAAS,oBAAsBA,EAAQmG,iBAAmB,GAE/FjK,KAAKkK,8FAGFC,GACCnK,KAAKkK,OAAOrH,OAAS7C,KAAKgK,mBAC5BhK,KAAKoK,MAGPpK,KAAKkK,OAAO7H,KAAK8H,GAEbnK,KAAK8J,OACP9J,KAAKwH,KAAK6C,aAAaF,EAAQnK,KAAKwH,KAAK8C,YACzCtK,KAAKwH,KAAK+C,aAAevK,KAAKwH,KAAKgD,eAEnCxK,KAAKwH,KAAKQ,YAAYmC,GACtBnK,KAAKwH,KAAKiD,UAAYzK,KAAKwH,KAAKgD,4CAKlC,GAAIxK,KAAKkK,OAAOrH,OAAS,EAAG,CAC1B,IAAI6H,EAAc1K,KAAKkK,OAAO1E,QAE9BxF,KAAKwH,KAAKgB,YAAYkC,qCAIjBC,EAAMC,GACb,IAAIT,EAASxC,SAASC,cAAc,OAEpCuC,EAAOU,UAAYF,EACnBR,EAAOW,MAAMC,QAAiB,MAAPH,EAAcA,EAAM5K,KAAK4J,YAChD5J,KAAKqC,KAAK8H,8BAGHJ,GACP/J,KAAK8J,MAAQC,kBAIb,OAAO/J,KAAK8J,6CAGOkB,GACnBhL,KAAKgK,kBAAoBgB,kBAIzB,OAAOhL,KAAKgK,2JClEhB,IAAAtG,mDAAAC,CAAA/F,EAAA,8KAKqBqN,aAEnB,SAAAA,EAAY3D,EAASxD,gGAAS/D,CAAAC,KAAAiL,GAC5BjL,KAAKwH,KAAOF,EACZtH,KAAK4J,YAActC,EAAQwD,MAAMC,QACjC/K,KAAKkL,YAAc,KAGnBlL,KAAKmL,UAAYzH,EAAA+B,QAAQoE,IAAI/F,EAAS,YAAcA,EAAQsH,SAAW,IACvEpL,KAAKqL,UAAY3H,EAAA+B,QAAQoE,IAAI/F,EAAS,YAAcA,EAAQwH,SAAW,4HAGnEC,GAAS,IAAAC,EAAAxL,KACE,MAAXuL,IACFvL,KAAKwH,KAAKqD,UAAYU,GAGA,MAApBvL,KAAKkL,cACPlL,KAAKkL,YAAcO,YAAY,WAC7B,IAAIC,EAAUF,EAAKhE,KAAKsD,MAAMC,UAAYS,EAAK5B,YAAc4B,EAAK5B,YAAc4B,EAAKH,UAErFG,EAAKhE,KAAKsD,MAAMC,QAAUW,GACzB1L,KAAKmL,8CAKc,MAApBnL,KAAKkL,cACPS,cAAc3L,KAAKkL,aACnBlL,KAAKkL,YAAc,KACnBlL,KAAKwH,KAAKsD,MAAMC,QAAU/K,KAAK4J,4CAItBwB,GACXpL,KAAKmL,UAAYC,EACO,MAApBpL,KAAKkL,cACPlL,KAAK4L,UACL5L,KAAK6L,yBAKP,OAAO7L,KAAKmL,yCAGDG,GACXtL,KAAKqL,UAAYC,kBAIjB,OAAOtL,KAAKqL,mJCxDhB,IAAA3H,mDAAAC,CAAA/F,EAAA,8KAKqBkO,aAEnB,SAAAA,EAAYhI,gGAAS/D,CAAAC,KAAA8L,GACnB9L,KAAK+L,YAAcrI,EAAA+B,QAAQoE,IAAI/F,EAAS,UAAYA,EAAQkI,OAAS,GACrEhM,KAAKmL,UAAYzH,EAAA+B,QAAQoE,IAAI/F,EAAS,YAAcA,EAAQsH,SAAW,IAGvE,IAAIa,EAAStE,SAASC,cAAc,OAEpCqE,EAAOnB,MAAMC,QAAb,yOAaA,IAAImB,EAAQvE,SAASC,cAAc,OAEnCsE,EAAMpB,MAAMC,QAAZ,ukBAyBA,IAAIoB,EAAaxE,SAASC,cAAc,OAExCuE,EAAWrB,MAAMC,QAAjB,gCAGA,IAAIqB,EAAUzE,SAASC,cAAc,OAErCwE,EAAQvB,UAAY,UACpBuB,EAAQtB,MAAMC,QAAd,mKASA/K,KAAKqM,QAAU1E,SAASC,cAAc,OACtC5H,KAAKqM,QAAQxB,UAAY7K,KAAK+L,YAC9B/L,KAAKqM,QAAQvB,MAAMC,QAAnB,4QAWAoB,EAAWnE,YAAYoE,GACvBD,EAAWnE,YAAYhI,KAAKqM,SAE5BH,EAAMlE,YAAYmE,GAElBF,EAAOjE,YAAYkE,GAEnBlM,KAAKsM,QAAUL,GAGJtE,SAAS4E,MAAQ5E,SAAS6E,qBAAqB,QAAQ,IAE7DxE,YAAYhI,KAAKsM,SAGtB,IAAIG,sIAOAC,EAAO/E,SAAS+E,MAAQ/E,SAAS6E,qBAAqB,QAAQ,GAE9D1B,EAAQnD,SAASC,cAAc,SAEnCkD,EAAMzF,KAAO,WACTyF,EAAM6B,WACR7B,EAAM6B,WAAW5B,QAAU0B,EAE3B3B,EAAM9C,YAAYL,SAASiF,eAAeH,IAG5CC,EAAK1E,YAAY8C,GAEjB9K,KAAKkL,YAAc,4FAGb,IAAAM,EAAAxL,KACNA,KAAKsM,QAAQxB,MAAM+B,QAAU,QAEL,MAApB7M,KAAKkL,cACPlL,KAAKkL,YAAcO,YAAY,WACM,UAA/BD,EAAKc,QAAQxB,MAAM+B,QACrBrB,EAAKc,QAAQxB,MAAM+B,QAAU,QAE7BrB,EAAKc,QAAQxB,MAAM+B,QAAU,QAE9B7M,KAAKmL,8CAKVnL,KAAKsM,QAAQxB,MAAM+B,QAAU,OACL,MAApB7M,KAAKkL,cACPS,cAAc3L,KAAKkL,aACnBlL,KAAKkL,YAAc,mCAIZc,GACThM,KAAK+L,YAAcC,EACnBhM,KAAKqM,QAAQxB,UAAY7K,KAAK+L,4BAI9B,OAAO/L,KAAKqM,uCAGDjB,GACXpL,KAAKmL,UAAYC,EACO,MAApBpL,KAAKkL,cACPlL,KAAK4L,UACL5L,KAAK6L,yBAKP,OAAO7L,KAAKmL,mJCjKhB,IAAAzH,EAAAC,EAAA/F,EAAA,IACAkP,EAAAnJ,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,guBAMqBmP,cAEnB,SAAAA,EAAYlJ,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAA+M,GAChC,IAAM9I,EAAYH,EAAQG,WAAa,IADP,OAGhCuH,EAAAyB,EAAAjN,MAAA+M,EAAAG,WAAA1O,OAAA2O,eAAAJ,IAAA9O,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAGG,EAAW,OAEnCmJ,aAAe,EACpB5B,EAAK6B,cAAgB,GACrB7B,EAAK8B,OAAS,GACd9B,EAAK+B,OAAS,EACd/B,EAAKgC,WAAa,EAClBhC,EAAKiC,WAAY,EAVejC,8UAaT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACjBrC,EAAO7G,EAAQ6G,SAErB3K,KAAK0N,WAAa/C,EAAK5L,OAAS,GAChCiB,KAAK2N,WAAahD,EAAKiD,WAAaxG,EAAAc,MAAMhF,MAC1ClD,KAAK6N,aAAelD,EAAKmD,SAAW1G,EAAAc,MAAM9E,KAE1CpD,KAAK+N,SAAWjK,EAAQgK,SAAW,sBACnC9N,KAAKgO,aAAelK,EAAQmK,aAAe7G,EAAAc,MAAM9E,KACjDpD,KAAKkO,WAAapK,EAAQqK,WAAa/G,EAAAc,MAAM9E,0CAY7C,GARApD,KAAKoE,KAAKgK,UAAY,SAEtBpO,KAAKoE,KAAKiK,UAAYrO,KAAK+N,SAC3B/N,KAAKoE,KAAKkK,SAAS,EAAG,EAAGtO,KAAK4E,OAAQ5E,KAAK6E,SAC3C7E,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAGDhG,KAAKyN,UAAW,CAGdzN,KAAKuN,QAAYvN,KAAK2E,YAAc,EAFtB,GAGhB3E,KAAKuN,OAAS,EACdvN,KAAKyN,WAAY,IAEjBzN,KAAKoE,KAAKiK,UAAYrO,KAAKkO,WAC3BlO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAKuN,OAAQvN,KAAK0E,WARxB,KAShB1E,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAK2E,YAAc3E,KAAKuN,OAZ9B,EAYkDvN,KAAK0E,WAZvD,GAahB1E,KAAKoE,KAAKqK,YACVzO,KAAKuN,OAAS7J,EAAA+B,QAAQC,WAAW1F,KAAKuN,OAAQvN,KAAK2E,YAAc,EAdjD,EAcgE3E,KAAKwN,aAMzFxN,KAAKoE,KAAKiK,UAAYrO,KAAKgO,aAC3BhO,KAAKoE,KAAKkK,SAAS,EAAG,EAAGtO,KAAKqN,cAAerN,KAAKoN,cAClDpN,KAAKoE,KAAKkK,SAAS,EAAG,EAAGtO,KAAKoN,aAAcpN,KAAKqN,eAEjDrN,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAK2E,YAAc3E,KAAKqN,cAAerN,KAAKoN,aAAcpN,KAAKqN,eACrFrN,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAK2E,YAAc3E,KAAKoN,aAAcpN,KAAKqN,cAAerN,KAAKoN,cAErFpN,KAAKoE,KAAKkK,SAAStO,KAAK0E,WAAa1E,KAAKqN,cAAe,EAAGrN,KAAKqN,cAAerN,KAAKoN,cACrFpN,KAAKoE,KAAKkK,SAAStO,KAAK0E,WAAa1E,KAAKoN,aAAc,EAAGpN,KAAKoN,aAAcpN,KAAKqN,eAGnFrN,KAAKoE,KAAKkK,SAAStO,KAAK0E,WAAa1E,KAAKqN,cAAerN,KAAK2E,YAAc3E,KAAKoN,aAC/EpN,KAAKqN,cAAerN,KAAKoN,cAC3BpN,KAAKoE,KAAKkK,SAAStO,KAAK0E,WAAa1E,KAAKoN,aAAcpN,KAAK2E,YAAc3E,KAAKqN,cAC9ErN,KAAKoN,aAAcpN,KAAKqN,eAG1BrN,KAAKoE,KAAKiK,UAAYrO,KAAK6N,aAC3B7N,KAAKoE,KAAKkK,SAAStO,KAAKoN,aAAepN,KAAKsN,OAAQtN,KAAKoN,aAAepN,KAAKsN,OAC3EtN,KAAK0E,WAAa,GAAK1E,KAAKoN,aAAepN,KAAKsN,QAChDtN,KAAK2E,YAAc,GAAK3E,KAAKoN,aAAepN,KAAKsN,SAGnDtN,KAAKoE,KAAKiK,UAAYrO,KAAK2N,WAC3B3N,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKgK,UAAY,SACtBpO,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKuK,SAAS3O,KAAK0N,WAAY1N,KAAK0E,WAAa,EAAG1E,KAAK2E,YAAc,IAC5E3E,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKwK,0CAGE/O,GACZG,KAAK0N,WAAa7N,EAClBG,KAAKyN,WAAY,kCAGL5N,GACZG,KAAK2N,WAAa9N,oCAGJA,GACdG,KAAK6N,aAAehO,gCAGVA,GACVG,KAAK+N,SAAWlO,oCAGFA,GACdG,KAAKgO,aAAenO,kCAGRA,GACZG,KAAKkO,WAAarO,2ICxHtB,IAAA6D,EAAAC,EAAA/F,EAAA,IACAkP,EAAAnJ,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,guBAEqBiR,cAEnB,SAAAA,EAAYhL,EAAQC,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAA6O,IAC3BrD,EAAAyB,EAAAjN,MAAA6O,EAAA3B,WAAA1O,OAAA2O,eAAA0B,IAAA5Q,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAG,IAAK,OAE7BgL,MAAQ,aACbtD,EAAKuD,SAAW,EAChBvD,EAAKwD,SAAW,EAChBxD,EAAKyD,SAAW,EAChBzD,EAAK0D,SAAW,EAPW1D,8UAUJ,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACjBmC,EAAKrL,EAAQsL,YACbC,EAAKvL,EAAQwL,YACbC,EAAKzL,EAAQ0L,YACbC,EAAK3L,EAAQ4L,YACb/E,EAAO7G,EAAQ6G,SAErB3K,KAAK2P,QAAUR,EAAGvO,OAAS,GAC3BZ,KAAK4P,QAAUT,EAAG5N,OAAS6F,EAAAc,MAAM/E,IAEjCnD,KAAK6P,QAAUR,EAAGzO,QAAU,GAC5BZ,KAAK8P,QAAUT,EAAG9N,OAAS6F,EAAAc,MAAM7E,OAEjCrD,KAAK+P,QAAUR,EAAG3O,OAAS,GAC3BZ,KAAKgQ,QAAUT,EAAGhO,OAAS6F,EAAAc,MAAM9E,KAEjCpD,KAAKiQ,QAAUR,EAAG7O,QAAU,GAC5BZ,KAAKkQ,QAAUT,EAAGlO,OAAS6F,EAAAc,MAAM3E,KAEjCvD,KAAK2N,WAAahD,EAAKpJ,OAAS6F,EAAAc,MAAM1E,MACtCxD,KAAK0N,WAAa/C,EAAK5L,OAAS,wCAIhCiB,KAAK+O,SAAWrL,EAAA+B,QAAQ0K,qBAAqBnQ,KAAK+O,SAAU/O,KAAK2P,SACjE3P,KAAKgP,SAAWtL,EAAA+B,QAAQ0K,qBAAqBnQ,KAAKgP,SAAUhP,KAAK6P,SACjE7P,KAAKiP,SAAWvL,EAAA+B,QAAQ0K,qBAAqBnQ,KAAKiP,SAAUjP,KAAK+P,SACjE/P,KAAKkP,SAAWxL,EAAA+B,QAAQ0K,qBAAqBnQ,KAAKkP,SAAUlP,KAAKiQ,SAEjE,IAAMG,EAAK1M,EAAA+B,QAAQ4K,iBAAiBrQ,KAAK+O,UACnCuB,EAAK5M,EAAA+B,QAAQ4K,iBAAiBrQ,KAAKgP,UACnCuB,EAAK7M,EAAA+B,QAAQ4K,iBAAiBrQ,KAAKiP,UACnCuB,EAAK9M,EAAA+B,QAAQ4K,iBAAiBrQ,KAAKkP,UAEzClP,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAKsM,UAAU,IAAK,KACzB1Q,KAAKoE,KAAKuM,OAAOP,GAEjBpQ,KAAKoE,KAAKwM,YAAc5Q,KAAK4P,QAC7B5P,KAAKoE,KAAKyM,UAAY,EAMtB,IALA,IACI3O,EAAM,GACNH,EAAQ,EACRE,EAAMC,EAEDpE,EAAI,EAAGA,EAAI,EAAGA,IACrBkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI3Q,KAAKW,GAAKiB,EAAO5B,KAAKW,GAAKmB,GACnDjC,KAAKoE,KAAK2M,SACV/Q,KAAKoE,KAAKqK,YAIVxM,GAFAF,EAAQE,EAXE,MAYVC,GAAO,KAITlC,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAKsM,UAAU,IAAK,KACzB1Q,KAAKoE,KAAKuM,OAAOJ,GAGjBvQ,KAAKoE,KAAKiK,UAAYrO,KAAKgQ,QAC3B,IAAK,IAAIlS,EAAI,EAAGA,EAAI,IAAKA,GAAQ,EAAG,CAClC,IAAI4E,EAAIgB,EAAA+B,QAAQ4K,iBAAiBvS,GAE7BmJ,EAAI,GAAK9G,KAAK6Q,IAAItO,GAClBwE,EAAI,GAAK/G,KAAK8Q,IAAIvO,GAEtB1C,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI7J,EAAGC,EAAG,EAAG,EAAa,EAAV/G,KAAKW,IAC/Bd,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK8M,OAGZlR,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAKsM,UAAU,IAAK,KACzB1Q,KAAKoE,KAAKuM,OAAOL,GAGjBtQ,KAAKoE,KAAKyM,UAAY,EACtB7Q,KAAKoE,KAAKwM,YAAc5Q,KAAK8P,QAC7B,IAAK,IAAIhS,EAAI,EAAGA,EAAI,IAAKA,GAAQ,EAAG,CAClC,IAAI4E,EAAIgB,EAAA+B,QAAQ4K,iBAAiBvS,GAE3BqT,EAAK,GAAKhR,KAAK6Q,IAAItO,GACnB0O,EAAK,GAAKjR,KAAK8Q,IAAIvO,GAErB2O,EAAK,GAAKlR,KAAK6Q,IAAItO,GACnB4O,EAAK,GAAKnR,KAAK8Q,IAAIvO,GAEvB1C,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOJ,EAAIC,GACrBpR,KAAKoE,KAAKoN,OAAOH,EAAIC,GACrBtR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAGZ/Q,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAKsM,UAAU,IAAK,KACzB1Q,KAAKoE,KAAKuM,OAAOH,GAGjBxQ,KAAKoE,KAAKyM,UAAY,EACtB7Q,KAAKoE,KAAKwM,YAAc5Q,KAAKkQ,QAE7BnO,EAAQ,EACRE,EAFAC,EAAM,KAAqB,GAG3B,IAAK,IAAIpE,EAAI,EAAGA,EAAI,GAAIA,IACtBkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI3Q,KAAKW,GAAKiB,EAAO5B,KAAKW,GAAKmB,GACnDjC,KAAKoE,KAAK2M,SACV/Q,KAAKoE,KAAKqK,YAEVxM,GADAF,EAAQE,EA9EE,KA+EIC,EAGhBlC,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAELhG,KAAKoE,KAAKsK,KAAO1O,KAAK8O,MACtB9O,KAAKoE,KAAKgK,UAAY,SACtBpO,KAAKoE,KAAKiK,UAAYrO,KAAK2N,WAC3B3N,KAAKoE,KAAKuK,SAAS3O,KAAK0N,WAAY,IAAK,KACzC1N,KAAKoE,KAAKwK,sCAGFrP,GACRS,KAAKyR,OAASlS,+BAGLM,GACTG,KAAK4P,QAAU/P,+BAGNA,GACTG,KAAK8P,QAAUjQ,+BAGNA,GACTG,KAAKgQ,QAAUnQ,+BAGNA,GACTG,KAAKkQ,QAAUrQ,kCAGHA,GACZG,KAAK2N,WAAa9N,kCAGNA,GACZG,KAAK0N,WAAa7N,2IChLtB,IAAAuH,EAAAxJ,EAAA,GACA8F,EAAAC,EAAA/F,EAAA,IACAkP,EAAAnJ,EAAA/F,EAAA,iuBAMqB8T,cAEnB,SAAAA,EAAY7N,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAA0R,GAChC,IAAMzN,EAAYH,EAAQG,WAAa,IADP,OAGhCuH,EAAAyB,EAAAjN,MAAA0R,EAAAxE,WAAA1O,OAAA2O,eAAAuE,IAAAzT,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAGG,EAAW,OAEnC0N,WAAa,EAClBnG,EAAKoG,YAAc,GACnBpG,EAAKqG,WAAa,GAClBrG,EAAKsG,iBAAmBtG,EAAKqG,WAAarG,EAAKmG,WAAa,EAC5DnG,EAAKuG,YAAcvG,EAAK9G,WAAa,EAAI8G,EAAKoG,YAC9CpG,EAAKwG,aAAe,IAAMxG,EAAKqG,WAAarG,EAAKmG,WAAa,EAC9DnG,EAAKyG,iBAAmBzG,EAAKwG,aAAe,EAAIxG,EAAKqG,WAErDrG,EAAK0G,MAAS1G,EAAK2G,iBAAmB,IAAO3G,EAAKuG,YAAcvG,EAAKoG,YACrEpG,EAAK4G,UAAY5G,EAAK0G,MAEtB1G,EAAK6G,OAAS,KACd7G,EAAK8G,YAAc,GACnB9G,EAAK+G,aAAe,EACpB/G,EAAKgH,aAAehH,EAAK9G,WAAa,EAnBN8G,8UAsBT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACjByF,EAAM3O,EAAQ2O,QACdC,EAAS5O,EAAQ4O,WAEvB1S,KAAKmS,iBAAmBO,EAAO3T,OAAS,EACxCiB,KAAK2S,cAAgBD,EAAOE,cAAgB,GAC5C5S,KAAK6S,mBAAqBH,EAAO5E,SAAW1G,EAAAc,MAAMjF,MAClDjD,KAAK8S,iBAAmBJ,EAAO9E,WAAaxG,EAAAc,MAAMhF,MAElDlD,KAAKyR,OAASgB,EAAI7R,OAAS,EAC3BZ,KAAKoI,WAAaqK,EAAIM,WAAa3L,EAAAc,MAAM/E,IACzCnD,KAAK+N,SAAW0E,EAAI3E,SAAW1G,EAAAc,MAAMnF,UACrC/C,KAAKmI,WAAasK,EAAIxE,aAAe7G,EAAAc,MAAMpF,WAE3C9C,KAAKgT,YAAclP,EAAQmP,YAAc7L,EAAAc,MAAM9E,0CAI/CpD,KAAKoE,KAAKgK,UAAY,SAEtBpO,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAK8O,yBAA2B,mBAGrClT,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK+O,KAAKnT,KAAK4R,YAAa5R,KAAK6R,WAAY7R,KAAKkS,MAAQlS,KAAK4R,YAAa5R,KAAKgS,cACtFhS,KAAKoE,KAAKgP,OAEVpT,KAAKoE,KAAKiK,UAAYrO,KAAK+N,SAC3B/N,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKuK,SAAS3O,KAAK2S,cAAe3S,KAAK0E,WAAa,EAAG,IAE5D1E,KAAKoE,KAAKiK,UAAYrO,KAAKoI,WAC3BpI,KAAKoE,KAAKkK,SAAStO,KAAK4R,YAAa5R,KAAK6R,WAAY7R,KAAKkS,MAAQlS,KAAK4R,YAAa5R,KAAKgS,cAE1FhS,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAK8O,yBAA2B,mBAGrClT,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK+O,KAAKnT,KAAKkS,MAAOlS,KAAK6R,WAAY7R,KAAK0E,WAAa1E,KAAKkS,MAAQlS,KAAK4R,YAAa5R,KAAKgS,cAClGhS,KAAKoE,KAAKgP,OAEVpT,KAAKoE,KAAKiK,UAAYrO,KAAKoI,WAC3BpI,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKuK,SAAS3O,KAAK2S,cAAe3S,KAAK0E,WAAa,EAAG,IAE5D1E,KAAKoE,KAAKiK,UAAYrO,KAAK+N,SAC3B/N,KAAKoE,KAAKkK,SAAStO,KAAKkS,MAAOlS,KAAK6R,WAAY7R,KAAK0E,WAAa1E,KAAKkS,MAAQlS,KAAK4R,YAAa5R,KAAKgS,cAEtGhS,KAAKoE,KAAKwK,UACV5O,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAK8O,yBAA2B,cAGrClT,KAAKoE,KAAKyM,UAAY7Q,KAAK2R,WAC3B3R,KAAKoE,KAAKwM,YAAc5Q,KAAKmI,WAC7BnI,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK+O,KAAKnT,KAAK4R,YAAa5R,KAAK6R,WAAY7R,KAAK+R,YAAa/R,KAAKgS,cACzEhS,KAAKoE,KAAK2M,SACV/Q,KAAKoE,KAAKqK,YAGVzO,KAAKoE,KAAKiK,UAAYrO,KAAK6S,mBAE3B7S,KAAKoE,KAAKkK,SAAStO,KAAKkS,MAAQ,GAAI,EAAG,GAAIlS,KAAK8R,kBAChD9R,KAAKoE,KAAKiK,UAAYrO,KAAK8S,iBAC3B9S,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKuK,SAAS3O,KAAKmS,iBAAmB,IAAKnS,KAAKkS,MAAO,IAE5DlS,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAK6S,mBAC3B7S,KAAKoE,KAAKmN,OAAOvR,KAAKkS,MAAQ,EAAGlS,KAAK8R,iBAAmB9R,KAAK2R,WAAa,GAC3E3R,KAAKoE,KAAKoN,OAAOxR,KAAKkS,MAAOlS,KAAK6R,WAAa7R,KAAK2R,WAAa,GACjE3R,KAAKoE,KAAKoN,OAAOxR,KAAKkS,MAAQ,EAAGlS,KAAK8R,iBAAmB9R,KAAK2R,WAAa,GAC3E3R,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAGU,OAAhBzO,KAAKqS,QACPrS,KAAKqT,gBACLrT,KAAKsT,kBACoB,SAAhBtT,KAAKqS,OACdrS,KAAKqT,gBAGLrT,KAAKsT,iBAGPtT,KAAKoE,KAAKwK,UAGV5O,KAAKkS,MAAQxO,EAAA+B,QAAQC,WAAW1F,KAAKkS,MAAOlS,KAAKoS,UAAWpS,KAAKyR,gDAI7DzR,KAAKuS,aAAe,EACtBvS,KAAKuS,YAAcvS,KAAK4R,YAAc,EAEtC5R,KAAKuS,YAAc7O,EAAA+B,QAAQC,WAAW1F,KAAKuS,YAAa,GAAIvS,KAAKsS,aAGnEtS,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKgT,YAC3BhT,KAAKoE,KAAKmN,OAAOvR,KAAKuS,YAAavS,KAAK8R,iBAAmB,IAC3D9R,KAAKoE,KAAKoN,OAAOxR,KAAKuS,YAAc,GAAIvS,KAAKiS,kBAC7CjS,KAAKoE,KAAKoN,OAAOxR,KAAKuS,YAAa,IACnCvS,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,qDAINzO,KAAKwS,cAAgBxS,KAAK0E,WAC5B1E,KAAKwS,aAAexS,KAAK4R,YAAc,EAAI5R,KAAK+R,YAEhD/R,KAAKwS,aAAe9O,EAAA+B,QAAQC,WAAW1F,KAAKwS,aAAcxS,KAAK0E,WAAY1E,KAAKsS,aAElFtS,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKgT,YAC3BhT,KAAKoE,KAAKmN,OAAOvR,KAAKwS,aAAcxS,KAAK8R,iBAAmB,IAC5D9R,KAAKoE,KAAKoN,OAAOxR,KAAKwS,aAAe,GAAIxS,KAAKiS,kBAC9CjS,KAAKoE,KAAKoN,OAAOxR,KAAKwS,aAAc,IACpCxS,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,kDAGQ1P,IACdA,GAAS,GAAKA,GAAS,OACrBA,EAAQiB,KAAKmS,kBACfnS,KAAKyR,QAAUtR,KAAK4G,IAAI/G,KAAKyR,QAC7BzR,KAAKqS,OAAS,QACLtT,EAAQiB,KAAKmS,kBACtBnS,KAAKyR,OAAStR,KAAK4G,IAAI/G,KAAKyR,QAC5BzR,KAAKqS,OAAS,SAEdrS,KAAKqS,OAAS,KAEhBrS,KAAKmS,iBAAmBhS,KAAKC,MAAMrB,GACnCiB,KAAKoS,UAAapS,KAAKmS,iBAAmB,IAAOnS,KAAK+R,YAAc/R,KAAK4R,gDAI5D/R,GACfG,KAAK2S,cAAgB9S,8BAGbN,GACRS,KAAKyR,OAASlS,kCAGFM,GACZG,KAAKoI,WAAavI,gCAGRA,GACVG,KAAK+N,SAAWlO,kCAGJA,GACZG,KAAKmI,WAAatI,mCAGLA,GACbG,KAAKgT,YAAcnT,0CAGCA,GACpBG,KAAK6S,mBAAqBhT,qTC5MT0T,aAEnB,SAAAA,EAAYC,EAAWC,EAAUC,EAAaC,EAAcC,EAAWC,gGAAa9T,CAAAC,KAAAuT,GAClFvT,KAAKoE,KAAOoP,EACZxT,KAAK8T,UAAYL,EACjBzT,KAAK+T,eAAiBJ,EAAe,EAAIF,GAAY,EACrDzT,KAAKgU,cAAgBN,EAAc,EAAID,EACvCzT,KAAKiU,WAAaL,EAClB5T,KAAKkU,aAAeL,6FAIpB7T,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKiU,WAC3BjU,KAAKoE,KAAKmN,OAAO,EAAG,GACpBvR,KAAKmU,UACLnU,KAAKoU,aACLpU,KAAKqU,WACLrU,KAAKsU,cACLtU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKyU,SACLzU,KAAKoE,KAAKqK,8CAKVzO,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAK8T,UAAW9T,KAAK8T,UAAW9T,KAAK+T,oDAK3D/T,KAAKoE,KAAKkK,SAAS,EAAoB,EAAjBtO,KAAK8T,UAAgB9T,KAAK+T,cAAe/T,KAAK8T,UAAW9T,KAAK+T,kDAKpF/T,KAAKoE,KAAKkK,SAAStO,KAAK8T,UAAY9T,KAAKgU,cAAehU,KAAK8T,UAAW9T,KAAK8T,UAAW9T,KAAK+T,qDAK7F/T,KAAKoE,KAAKkK,SAAStO,KAAK8T,UAAY9T,KAAKgU,cAAgC,EAAjBhU,KAAK8T,UAAgB9T,KAAK+T,cAChF/T,KAAK8T,UAAW9T,KAAK+T,6CAKvB/T,KAAKoE,KAAKkK,SAAStO,KAAK8T,UAAW,EAAG9T,KAAKgU,cAAehU,KAAK8T,4CAI/D9T,KAAKoE,KAAKkK,SAAStO,KAAK8T,UAAW9T,KAAK8T,UAAY9T,KAAK+T,cAAe/T,KAAKgU,cAAehU,KAAK8T,4CAKjG9T,KAAKoE,KAAKkK,SAAStO,KAAK8T,UAA4B,EAAjB9T,KAAK8T,UAAqC,EAArB9T,KAAK+T,cAAmB/T,KAAKgU,cAAehU,KAAK8T,8CAGhGY,GAKT,OAJA1U,KAAK2U,YACL3U,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKkU,aAEnBQ,GACN,KAAK,EACH1U,KAAKuU,MACLvU,KAAKyU,SACLzU,KAAKmU,UACLnU,KAAKqU,WACLrU,KAAKoU,aACLpU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKqU,WACLrU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKuU,MACLvU,KAAKqU,WACLrU,KAAKwU,SACLxU,KAAKoU,aACLpU,KAAKyU,SACL,MACF,KAAK,EACHzU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKyU,SACLzU,KAAKqU,WACLrU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKwU,SACLxU,KAAKmU,UACLnU,KAAKqU,WACLrU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKyU,SACLzU,KAAKmU,UACLnU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKyU,SACLzU,KAAKmU,UACLnU,KAAKoU,aACLpU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKuU,MACLvU,KAAKqU,WACLrU,KAAKsU,cACL,MACF,KAAK,EACHtU,KAAKmU,UACLnU,KAAKoU,aACLpU,KAAKqU,WACLrU,KAAKsU,cACLtU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKyU,SACL,MACF,KAAK,EACHzU,KAAKuU,MACLvU,KAAKwU,SACLxU,KAAKmU,UACLnU,KAAKqU,WACLrU,KAAKsU,cAGTtU,KAAKoE,KAAKqK,qJCxId,IAAAmG,EAAAjR,EAAA/F,EAAA,IACAiX,EAAAlR,EAAA/F,EAAA,kuBAEqBkX,cAEnB,SAAAA,EAAYxN,EAASxD,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAA8U,IAC5BtJ,EAAAyB,EAAAjN,MAAA8U,EAAA5H,WAAA1O,OAAA2O,eAAA2H,IAAA7W,KAAA+B,KAAMsH,EAAS,IAAK,OAEfuN,eAAiB,IAAAA,EAAApP,QAAkB+F,EAAKpH,KAAM,EAAG,GAAI,IAAK,QAAS,SACxEoH,EAAKuJ,cAAgB,IAAAF,EAAApP,QAAkB+F,EAAKpH,KAAM,EAAG,GAAI,GAAI,QAAS,OAEtEoH,EAAKwJ,UAAYvU,KAAKD,MACtBgL,EAAKyJ,aAAe,EAPQzJ,oXAc5BxL,KAAKgV,UAAYvU,KAAKD,MACtBR,KAAKiV,aAAe,EACpBjV,KAAKkV,OAAS,QACdlV,KAAKyI,gDAILzI,KAAKkV,OAAS,OACdlV,KAAKuI,iDAILvI,KAAKkV,OAAS,SACdlV,KAAKyI,iDAILzI,KAAKkV,OAAS,QACdlV,KAAKuI,gBAELvI,KAAKgF,YACLhF,KAAKgV,UAAYvU,KAAKD,MACtBR,KAAKiV,aAAe,sCAIpB,IAAIzU,EAAMC,KAAKD,MAEK,WAAhBR,KAAKkV,OACPlV,KAAKkV,OAAS,QAEdlV,KAAKiV,cAAiBxU,KAAKD,MAAQR,KAAKgV,UAE1ChV,KAAKgV,UAAYxU,EAEjB,IAAI2U,EAAS,EACTC,EAAS,EACTC,EAAM,EACNpV,EAAM,EACNqV,EAAO,EAES,UAAhBtV,KAAKkV,SACPC,EAAShV,KAAKC,MAAMJ,KAAKiV,aAAe,KACxCG,EAAS/T,SAASrB,KAAKiV,aAAa3U,WAAWiV,OAAO,GAAI,IAC1DF,EAAMlV,KAAKC,MAAM+U,EAAS,IAC1BlV,EAAME,KAAKC,MAAO+U,EAAS,KAAQ,IACnCG,EAAOnV,KAAKC,MAAM+U,EAAS,OAG7BnV,KAAKwV,WACLxV,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAELhG,KAAKyV,cAAczV,KAAK6U,eAAgBS,EAAM,IAC9CtV,KAAKyV,cAAczV,KAAK6U,eAAgB5U,EAAK,IAC7CD,KAAKyV,cAAczV,KAAK6U,eAAgBQ,EAAK,IAE7CrV,KAAKoE,KAAKsM,UAAU,EAAG,IACvB1Q,KAAKyV,cAAczV,KAAK+U,cAAeK,EAAQ,IAE/CpV,KAAKoE,KAAKwK,gDAGE8G,EAAeC,EAAMC,GACjC,GAAID,EAAO,GACTD,EAAcG,WAAW,GACzB7V,KAAKoE,KAAKsM,UAAUkF,EAAO,GAC3BF,EAAcG,WAAWF,GACzB3V,KAAKoE,KAAKsM,UAAUkF,EAAO,OACtB,CACL,IAAIE,EAAO3V,KAAKC,MAAMuV,EAAO,IACzBI,EAAQJ,EAAO,GAEnBD,EAAcG,WAAWC,GACzB9V,KAAKoE,KAAKsM,UAAUkF,EAAO,GAC3BF,EAAcG,WAAWE,GACzB/V,KAAKoE,KAAKsM,UAAUkF,EAAO,6IC/FjC,IAAAhB,EAAAjR,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,GACA8F,EAAAC,EAAA/F,EAAA,iuBAEqBoY,cAEnB,SAAAA,EAAY1O,EAASxD,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAAgW,IAC5BxK,EAAAyB,EAAAjN,MAAAgW,EAAA9I,WAAA1O,OAAA2O,eAAA6I,IAAA/X,KAAA+B,KAAMsH,EAAS,IAAK,OAEf2O,YAAcvS,EAAA+B,QAAQoE,IAAI/F,EAAS,cAAgBA,EAAQoS,WAAa,EAC7E1K,EAAK2K,UAAYzS,EAAA+B,QAAQoE,IAAI/F,EAAS,YAAcA,EAAQsS,SAAW,IACvE5K,EAAK6K,aAAe3S,EAAA+B,QAAQoE,IAAI/F,EAAS,eAAiBA,EAAQwS,YAAc,IAChF9K,EAAK+K,WAAa7S,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQ0S,UAAY,IAC1EhL,EAAKiL,eAAe/S,EAAA+B,QAAQoE,IAAI/F,EAAS,gBAAiBA,EAAQ4S,YAClElL,EAAKmL,gBAAgBjT,EAAA+B,QAAQoE,IAAI/F,EAAS,iBAAkBA,EAAQ8S,aACpEpL,EAAKqL,OAASnT,EAAA+B,QAAQoE,IAAI/F,EAAS,SAAWA,EAAQ/E,MAAQ,EAC9DyM,EAAKrD,WAAazE,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQgT,UAAY1P,EAAAc,MAAM1E,MAChFgI,EAAKuL,WAAarT,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQkT,UAAY5P,EAAAc,MAAM/E,IAChFqI,EAAKvD,WAAavE,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQ8J,UAAYxG,EAAAc,MAAM+O,MAChFzL,EAAK0L,WAAaxT,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQqT,UAAY,aAE1E3L,EAAKqL,OAASrL,EAAKmL,cAAgBxW,KAAKC,MAAMoL,EAAKqL,QAAUrL,EAAK2K,UAAY3K,EAAKyK,cACjF,IAAMzK,EAAKqL,OACbrL,EAAK4L,WAAa,aAClB5L,EAAK6L,YAAc3T,EAAA+B,QAAQ4K,iBAAiB7E,EAAK6K,cACjD7K,EAAK8L,UAAY5T,EAAA+B,QAAQ4K,iBAAiB7E,EAAK+K,YAC/C/K,EAAKiG,OAAS,EACdjG,EAAK+L,YAAc,EACnB/L,EAAKgM,cAAgBhM,EAAKiM,cAAcjM,EAAKqL,QAtBjBrL,4UAiCnBzM,GACT,OAAOoB,KAAKC,MAAMrB,GAASiB,KAAKmW,UAAYnW,KAAKiW,aAAe,2CAGpDlX,GACZ,OAAQA,GAASiB,KAAKmW,UAAYnW,KAAKiW,cAAgBjW,KAAKuW,WAAavW,KAAKqW,cAAiBrW,KAAKqW,mDAGxFpV,GACZ,OAAOd,KAAKC,OAAOa,EAASjB,KAAKqW,eAAiBrW,KAAKuW,WAAavW,KAAKqW,eACtErW,KAAKmW,UAAYnW,KAAKiW,kDAIzBjW,KAAKoE,KAAKgK,UAAY,SAEjBpO,KAAKyR,OAAS,GAAKzR,KAAKuX,YAAcvX,KAAKwX,eAC3CxX,KAAKyR,OAAS,GAAKzR,KAAKuX,YAAcvX,KAAKwX,cAC9CxX,KAAKuX,aAAevX,KAAKyR,QACfzR,KAAKyR,OAAS,GAAKzR,KAAKuX,aAAevX,KAAKwX,eACnDxX,KAAKyR,OAAS,GAAKzR,KAAKuX,aAAevX,KAAKwX,iBAC/CxX,KAAKuX,YAAcvX,KAAKwX,eAG1B,IAAIE,EAAQhU,EAAA+B,QAAQ4K,iBAAiBrQ,KAAKuX,aAE1CvX,KAAKwV,WACLxV,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAELhG,KAAKoE,KAAKiK,UAAYrO,KAAKiI,WAC3BjI,KAAKoE,KAAKsK,KAAO1O,KAAKkX,WACtBlX,KAAKoE,KAAKuK,SAAS3O,KAAK6W,OAAQ,IAAK,KAErC7W,KAAKoE,KAAKsM,UAAU,IAAK,KAGzB1Q,KAAKoE,KAAKwM,YAAc5Q,KAAKmI,WAC7BnI,KAAKoE,KAAKyM,UAAY,EACtB,IAAK,IAAI/S,EAAIkC,KAAKqW,aAAcvY,GAAKkC,KAAKuW,WAAYzY,GAAQ,EAAG,CAC/D,IAAI4E,EAAIgB,EAAA+B,QAAQ4K,iBAAiBvS,GAE7Bc,EAAI,GAER,GAAId,EAAI,IAAO,EAAG,CAChBc,EAAI,GACJ,IAAIqI,EAAI,GAAK9G,KAAK6Q,IAAItO,GAClBwE,EAAI,GAAK/G,KAAK8Q,IAAIvO,GAAK,EACvBiV,EAAa3X,KAAK2W,cAAgB3W,KAAK4X,WAAW5X,KAAK6X,cAAc/Z,IAAMkC,KAAK6X,cAAc/Z,GAElGkC,KAAKoE,KAAKiK,UAAYrO,KAAKmI,WAC3BnI,KAAKoE,KAAKsK,KAAO1O,KAAKoX,WACtBpX,KAAKoE,KAAKuK,SAASgJ,EAAY1Q,EAAGC,GAGpC,IAAIiK,EAAKvS,EAAIuB,KAAK6Q,IAAItO,GAClB0O,EAAKxS,EAAIuB,KAAK8Q,IAAIvO,GAElB2O,EAAK,GAAKlR,KAAK6Q,IAAItO,GACnB4O,EAAK,GAAKnR,KAAK8Q,IAAIvO,GAEvB1C,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOJ,EAAIC,GACrBpR,KAAKoE,KAAKoN,OAAOH,EAAIC,GACrBtR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAIZ/Q,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKyM,UAAY,EACtB7Q,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI9Q,KAAKqX,YAAarX,KAAKsX,WAC/CtX,KAAKoE,KAAK2M,SAGV/Q,KAAKoE,KAAKuM,OAAO+G,GAEjB1X,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAK+W,WACvB/W,KAAKyW,cACPzW,KAAKoE,KAAKmN,OAAO,IAAK,IACtBvR,KAAKoE,KAAKoN,OAAO,GAAI,GACrBxR,KAAKoE,KAAKoN,OAAO,GAAI,IACrBxR,KAAKoE,KAAK8M,QAEVlR,KAAKoE,KAAKkK,SAAS,IAAK,EAAG,GAAI,GAGjCtO,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKwK,sCAlGF7P,GACRiB,KAAKwX,cAAgBxX,KAAKyX,cAAc1Y,GACxC,IAAI6B,EAAQT,KAAK4G,IAAI/G,KAAKyR,QAE1BzR,KAAKyR,OAASzR,KAAKwX,cAAgBxX,KAAKuX,YAAc3W,GAASA,EAC/DZ,KAAK6W,OAAS7W,KAAK2W,cAAgB3W,KAAK4X,WAAW7Y,GAAS,IAAMA,2ICpCtE,IAAA6V,EAAAjR,EAAA/F,EAAA,IACA8F,EAAAC,EAAA/F,EAAA,iuBAEqBka,cAEnB,SAAAA,EAAYxQ,EAASxD,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAA8X,IAC5BtM,EAAAyB,EAAAjN,MAAA8X,EAAA5K,WAAA1O,OAAA2O,eAAA2K,IAAA7Z,KAAA+B,KAAMsH,EAAS,IAAK,OAEfmK,OAAS/N,EAAA+B,QAAQoE,IAAI/F,EAAS,SAAWA,EAAQlD,MAAQ,EAC9D4K,EAAKuC,SAAWrK,EAAA+B,QAAQoE,IAAI/F,EAAS,WAAaA,EAAQgK,QAAU,sBACpEtC,EAAKuM,WAAarU,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQkU,UAAY,wBAC1ExM,EAAKrD,WAAazE,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQgT,UAAY,qBAC1EtL,EAAKyM,aAAevU,EAAA+B,QAAQoE,IAAI/F,EAAS,eAAiBA,EAAQoU,YAAc,uBAEhF1M,EAAK2M,UAAW,EAChB3M,EAAKwJ,UAAY,EACjBxJ,EAAK4M,YAXuB5M,2UAcpB/E,EAAIQ,EAAGC,EAAGmR,GAClB,IAAIrZ,GACFyH,GAAIA,EACJQ,EAAGvD,EAAA+B,QAAQ6S,UAAUrR,GAAKA,EAAIvD,EAAA+B,QAAQ8S,aAAa,EAAG,IACtDrR,EAAGxD,EAAA+B,QAAQ6S,UAAUpR,GAAKA,EAAIxD,EAAA+B,QAAQ8S,aAAa,EAAG,IACtDF,OAAQ3U,EAAA+B,QAAQ6S,UAAUD,GAAUA,EAAS,GAG/CrY,KAAKoY,SAAS/V,KAAKrD,wCAGRyH,GAGX,IAFA,IAAIJ,GAAS,EAEJvI,EAAI,EAAGA,EAAIkC,KAAKoY,SAASvV,OAAQ/E,IAAK,CAG7C,GAFQkC,KAAKoY,SAASta,GAEhB2I,KAAOA,EAAI,CACfJ,EAAQvI,EACR,QAIW,IAAXuI,GACFrG,KAAKoY,SAAS9R,OAAOD,EAAO,6CAK9BrG,KAAKoY,gDAIL,IAAI5X,EAAM,IAAIC,KACViX,EAAQhU,EAAA+B,QAAQ+S,eAAexY,KAAKyR,OAAQjR,GAQhD,GANAR,KAAKoE,KAAKiK,UAAYrO,KAAK+N,SAC3B/N,KAAKoE,KAAKkK,SAAS,EAAG,EAAGtO,KAAKmE,QAAQoD,MAAOvH,KAAKmE,QAAQgD,QAC1DnH,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAGDhG,KAAKmY,SAAU,CACjBnY,KAAKoE,KAAKwM,YAAc5Q,KAAK+X,WAC7B/X,KAAKoE,KAAKyM,UAAY,EACtB,IAAK,IAAI/S,EAAI,EAAGA,GAAK,GAAIA,IACvBkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAW,GAAJzT,EAAQ,GACzBkC,KAAKoE,KAAKoN,OAAW,GAAJ1T,EAAQ,KACzBkC,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAGZ,IAAK,IAAIjT,EAAI,EAAGA,GAAK,GAAIA,IACvBkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAO,EAAO,GAAJzT,GACpBkC,KAAKoE,KAAKoN,OAAO,IAAS,GAAJ1T,GACtBkC,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAId/Q,KAAKoE,KAAKsM,UAAU,IAAK,KAGzB1Q,KAAKoE,KAAKyM,UAAY,EACtB7Q,KAAKoE,KAAKwM,YAAc5Q,KAAKmI,WAC7B,IAAK,IAAIrK,EAAI,EAAGA,GAAK,EAAGA,IACZ,IAANA,IACFkC,KAAKoE,KAAKyM,UAAY,GAExB7Q,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAO,GAAJhT,EAAQ,EAAa,EAAVqC,KAAKW,IACpCd,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAIZ/Q,KAAKoE,KAAKyM,UAAY,EACtB7Q,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,QAAQ,GAAI,GACtBvR,KAAKoE,KAAKoN,OAAO,GAAI,GACrBxR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAEV/Q,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAO,GAAI,IACrBvR,KAAKoE,KAAKoN,OAAO,EAAG,IACpBxR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAGV/Q,KAAKoE,KAAKyM,UAAY,EACtB,IAAK,IAAI/S,EAAI,EAAGA,EAAI,IAAKA,GAAQ,EAAG,CAClC,IAAI4E,EAAIgB,EAAA+B,QAAQ4K,iBAAiBvS,GAE7Bc,EAAI,GAEJd,EAAI,IAAO,IACbc,EAAI,IAGN,IAAIuS,EAAKvS,EAAIuB,KAAK6Q,IAAItO,GAClB0O,EAAKxS,EAAIuB,KAAK8Q,IAAIvO,GAElB2O,EAAK,GAAKlR,KAAK6Q,IAAItO,GACnB4O,EAAK,GAAKnR,KAAK8Q,IAAIvO,GAEvB1C,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOJ,EAAIC,GACrBpR,KAAKoE,KAAKoN,OAAOH,EAAIC,GACrBtR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK2M,SAIZ,GAAIvQ,EAAIiY,UAAYzY,KAAKgV,UAAY,IAAK,CACxChV,KAAKoE,KAAKiK,UAAYrO,KAAKiY,aAC3B,IAAK,IAAIna,EAAI,EAAGA,EAAIkC,KAAKoY,SAASvV,OAAQ/E,IAAK,CAC7C,IAAIkB,EAAIgB,KAAKoY,SAASta,GAEtBkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI9R,EAAEiI,EAAGjI,EAAEkI,EAAGlI,EAAEqZ,OAAQ,EAAa,EAAVlY,KAAKW,IAC1Cd,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK8M,aAEH1Q,EAAIiY,UAAYzY,KAAKgV,UAAY,MAG1ChV,KAAKgV,UAAYxU,EAAIiY,WAIvBzY,KAAKoE,KAAKuM,OAAO+G,GACjB1X,KAAKoE,KAAKiK,UAAYrO,KAAKmI,WAE3BnI,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,SAAS,GAAI,EAAG,GAAI,GAC9BtO,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKwK,mJC/Jd,IAAAxH,EAAAxJ,EAAA,GACAkP,mDAAAnJ,CAAA/F,EAAA,8qBAKqB8a,cAEnB,SAAAA,EAAY7U,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAA0Y,GAChC,IAAMzU,EAAYH,EAAQG,WAAa,IACjCC,EAAaJ,EAAQI,YAAc,IAFT,OAIhCsH,EAAAyB,EAAAjN,MAAA0Y,EAAAxL,WAAA1O,OAAA2O,eAAAuL,IAAAza,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAGG,EAAWC,KAEnCgG,UACLsB,EAAKmN,UAAY,GAPenN,8UAUT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACvBhN,KAAK4Y,WAAa9U,EAAQ+U,WAAa,GACvC7Y,KAAKyR,OAAS3N,EAAQlD,OAAS,EAC/BZ,KAAKsN,OAASxJ,EAAQ8R,OAAS,EAC/B5V,KAAKgK,kBAAoBlG,EAAQmG,kBAAoB,wCAIrDjK,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAML,IAHA,IAAM8S,EAAO3Y,KAAKC,MAAMJ,KAAK2E,aAAe3E,KAAK4Y,WAAa5Y,KAAKsN,SAC7DyL,EAAgB5Y,KAAKF,IAAID,KAAKkK,OAAOrH,OAAQiW,GAE1Chb,EAAI,EAAGA,EAAIib,EAAejb,IAAK,CACtC,IAAIkb,EAAIhZ,KAAKkK,OAAOpM,GAEhBmb,GAASjZ,KAAK4Y,WAAa5Y,KAAKsN,QAAUxP,EAAIkC,KAAKsN,OAGnD2L,EAAQD,EAAE9R,EACZ8R,EAAE9R,GAAKlH,KAAKyR,OAEZuH,EAAE9R,EAAI+R,EAGRjZ,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAY2K,EAAEzX,MACxBvB,KAAKoE,KAAKkK,SAAS0K,EAAE/R,EAAG+R,EAAE9R,EAAGlH,KAAK0E,WAAa,GAAK1E,KAAK2Y,UAAYK,EAAEpD,OAAQ5V,KAAK4Y,YACpF5Y,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOyH,EAAE/R,EAAG+R,EAAE9R,GACxBlH,KAAKoE,KAAK8U,iBAAiBF,EAAE/R,EAAIjH,KAAK2Y,UAAWK,EAAE9R,EAAIlH,KAAK4Y,WAAa,EAAGI,EAAE/R,EAAG+R,EAAE9R,EAAIlH,KAAK4Y,YAC5F5Y,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOvR,KAAK0E,WAAa1E,KAAK2Y,UAAYK,EAAEpD,MAAOoD,EAAE9R,GAC/DlH,KAAKoE,KAAK8U,iBAAiBlZ,KAAK0E,WAAasU,EAAEpD,MAAOoD,EAAE9R,EAAIlH,KAAK4Y,WAAa,EAC5E5Y,KAAK0E,WAAa1E,KAAK2Y,UAAYK,EAAEpD,MAAOoD,EAAE9R,EAAIlH,KAAK4Y,YACzD5Y,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAGZzO,KAAKoE,KAAKwK,yCAGK,IAAZuK,EAAYnM,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACToM,EAAWD,EAAM5X,OAAS6F,EAAAc,MAAM9E,KAChCiW,EAAWF,EAAMvD,OAAS,EAE5B5V,KAAKkK,OAAOrH,QAAU7C,KAAKgK,mBAC7BhK,KAAKoK,MAGPpK,KAAKkK,OAAO7H,MACV4E,EAAGjH,KAAK2Y,UAAYU,EACpBnS,EAAGlH,KAAK2E,YAAc3E,KAAK4Y,WAC3BrX,MAAO6X,EACPxD,MAAOyD,kCAKLrZ,KAAKkK,OAAOrH,OAAS,GACvB7C,KAAKkK,OAAO1E,0CAKd,OAAOxF,KAAKkK,OAAOrH,gJCzFvB,IAAAa,EAAAC,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,GACAkP,EAAAnJ,EAAA/F,EAAA,yoCAMqB0b,cAEnB,SAAAA,EAAYzV,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAAsZ,GAChC,IAAMrV,EAAYH,EAAQG,WAAa,IADP,OAGhCuH,EAAAyB,EAAAjN,MAAAsZ,EAAApM,WAAA1O,OAAA2O,eAAAmM,IAAArb,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAGG,EAAW,OAEnCiG,UACLsB,EAAK+N,SAAW,EAChB/N,EAAKgO,OAAS,KAPkBhO,8UAUT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACvBhN,KAAKyR,OAAS3N,EAAQlD,OAAS,EAC/BZ,KAAKiI,WAAanE,EAAQ8J,WAAaxG,EAAAc,MAAMjF,MAC7CjD,KAAKgK,kBAAoBlG,EAAQmG,kBAAoB,6CAIrDwP,EAAAH,EAAA5Z,UAAAwN,WAAA1O,OAAA2O,eAAAmM,EAAA5Z,WAAA,kBAAAM,MAAA/B,KAAA+B,MAEAA,KAAK0Z,gDAIc,MAAf1Z,KAAKwZ,QACP7N,cAAc3L,KAAKwZ,QAErBC,EAAAH,EAAA5Z,UAAAwN,WAAA1O,OAAA2O,eAAAmM,EAAA5Z,WAAA,UAAAM,MAAA/B,KAAA+B,qCAGgB,IAAb2Z,EAAa3M,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACV4M,EAAYD,EAAOpY,OAAS6F,EAAAc,MAAM1E,MAClCqW,EAAYF,EAAO/D,OAAS,EAE9B5V,KAAKkK,OAAOrH,QAAU7C,KAAKgK,mBAC7BhK,KAAKkK,OAAO1E,QAEdxF,KAAKkK,OAAO7H,MACVsT,KAAM,KACN1O,GAAI,GACJ1F,MAAOqY,EACPhE,MAAOiE,0CAIG,IAAAC,EAAA9Z,KACZA,KAAKwZ,OAAS/N,YAAY,WACpBqO,EAAK5P,OAAOrH,QAAUiX,EAAK9P,mBAC7B8P,EAAK5P,OAAO1E,QAGd,IAAIhF,EAAM,IAAIC,KACVsZ,EAAUrW,EAAA+B,QAAQuU,YAAYxZ,EAAIyZ,cAAgB,IAAMvW,EAAA+B,QAAQuU,YAAYxZ,EAAIO,cAEhFgZ,IAAYD,EAAKP,WACnBO,EAAK5P,OAAO7H,MAAOsT,KAAMoE,EAAS9S,GAAI,KACtC6S,EAAKP,SAAWQ,IAEjB,0CAIH/Z,KAAKoE,KAAKgK,UAAY,SACtBpO,KAAKoE,KAAKsK,KAAO,aAEjB1O,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAGLhG,KAAKoE,KAAKiK,UAAYrO,KAAKiI,WAC3BjI,KAAKoE,KAAKkK,SAAS,EAAG,GAAItO,KAAK0E,WAAY,GAG3C,IAAK,IAAI5G,EAAI,EAAGA,EAAIkC,KAAKkK,OAAOrH,OAAQ/E,IAAK,CAC3C,IAAIkb,EAAIhZ,KAAKkK,OAAOpM,GAEN,MAAVkb,EAAErD,MACJ3V,KAAKoE,KAAKiK,UAAYrO,KAAKiI,WAC3BjI,KAAKoE,KAAKuK,SAASqK,EAAErD,KAAMqD,EAAE/R,EAAG,IAChCjH,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKiI,WAC3BjI,KAAKoE,KAAKkK,SAAS0K,EAAE/R,EAAI,EAAG,GAAI,EAAG,IACnCjH,KAAKoE,KAAKqK,cAEVzO,KAAKoE,KAAKiK,UAAY2K,EAAEzX,MACxBvB,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAOyH,EAAE/R,EAAI,GAAI,IAC3BjH,KAAKoE,KAAK8U,iBAAiBF,EAAE/R,EAAI,EAAmB,EAAV+R,EAAEpD,MAAP,GAAkBoD,EAAE/R,EAAG,IAC5DjH,KAAKoE,KAAK8U,iBAAiBF,EAAE/R,EAAI,EAAG,IAAgB,EAAV+R,EAAEpD,MAAWoD,EAAE/R,EAAI,GAAI,IACjEjH,KAAKoE,KAAKqK,YACVzO,KAAKoE,KAAK8M,QAEZ8H,EAAE/R,GAAKjH,KAAKyR,OAGdzR,KAAKoE,KAAKwK,0CAGE/O,GACZG,KAAKiI,WAAapI,yCAGCN,GACnBS,KAAKgK,kBAAoBzK,kBAIzB,OAAOS,KAAKgK,2JCpHhB,IAAA8C,EAAAnJ,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,GACA8F,EAAAC,EAAA/F,EAAA,iuBAEqBsc,cAEnB,SAAAA,EAAYrW,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAAka,GAChC,IAAMhW,EAAaJ,EAAQG,WAAa,IADR,OAGhCuH,EAAAyB,EAAAjN,MAAAka,EAAAhN,WAAA1O,OAAA2O,eAAA+M,IAAAjc,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAG,IAAKI,KAE7ByN,WAAa,EAClBnG,EAAK2O,cAAgB,GACrB3O,EAAK4O,QAAU,MACf5O,EAAKuG,YAAcvG,EAAK9G,WAAa,EACrC8G,EAAKwG,aAAexG,EAAK7G,YAAc,EAAI6G,EAAK2O,cAChD3O,EAAK6O,cAAgB7O,EAAK9G,WAAa8G,EAAKuG,YAAcvG,EAAKmG,YAAc,EAE7EnG,EAAK8O,aAAe,EAEpB9O,EAAK+O,MAAQ/O,EAAK7G,aAAiB6G,EAAKqL,OAASrL,EAAKgP,YACnDhP,EAAKiP,UAAYjP,EAAKgP,WAAchP,EAAKwG,aAAgBxG,EAAK2O,cACjE3O,EAAKkP,UAAYlP,EAAK+O,MAGtB/O,EAAKmP,WAAa,EAClBnP,EAAKoP,WAAapP,EAAKoP,WAAWtb,KAAhBkM,GAClBA,EAAKqP,QAAUrP,EAAKqP,QAAQvb,KAAbkM,GACfA,EAAKsP,QAAUtP,EAAKsP,QAAQxb,KAAbkM,GAtBiBA,8UA4BT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACjB/M,EAAM6D,EAAQ7D,QACdC,EAAM4D,EAAQ5D,QACduS,EAAM3O,EAAQ2O,QACdC,EAAS5O,EAAQiX,YAEvB/a,KAAKgb,cAAgB/a,EAAI2N,WAAaxG,EAAAc,MAAMhF,MAC5ClD,KAAKwa,UAAYva,EAAIlB,OAAS,EAC9BiB,KAAKib,YAAchb,EAAI6N,SAAW1G,EAAAc,MAAM/E,IAExCnD,KAAKkb,cAAgBhb,EAAI0N,WAAaxG,EAAAc,MAAMhF,MAC5ClD,KAAKya,UAAYva,EAAInB,OAAS,IAC9BiB,KAAKmb,YAAcjb,EAAI4N,SAAW1G,EAAAc,MAAM9E,KAExCpD,KAAKob,gBAAkB3I,EAAIxE,aAAe7G,EAAAc,MAAMjF,MAChDjD,KAAKqb,cAAgB5I,EAAIM,WAAa3L,EAAAc,MAAM1E,MAC5CxD,KAAKsb,YAAc7I,EAAI8I,WAAY,EACnCvb,KAAKyR,OAASgB,EAAI7R,OAAS,EAE3BZ,KAAKwb,eAAiB9I,EAAO5E,SAAW1G,EAAAc,MAAM7E,OAC9CrD,KAAK8S,iBAAmBJ,EAAO9E,WAAaxG,EAAAc,MAAMhF,MAElDlD,KAAK6W,OAAS/S,EAAQ/E,OAAS,uCAS/B,GALAiB,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAGDhG,KAAKsb,YAAa,CACpB,IAAMC,EAAWvb,KAAKoE,KAAKqX,qBAAqBzb,KAAK0E,WAAa,EAAG1E,KAAKua,MACxEva,KAAK0E,WAAa,EAAG1E,KAAKgS,aAAehS,KAAKma,eAEhDoB,EAASG,aAAa,EAAG1b,KAAKqb,eAC9BE,EAASG,aAAa,EAAG,SACzB1b,KAAKoE,KAAKiK,UAAYkN,OAEtBvb,KAAKoE,KAAKiK,UAAYrO,KAAKqb,cAI7Brb,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,UAAUtO,KAAK0E,WAAa1E,KAAK+R,aAAe,EAAG/R,KAAKua,MAAOva,KAAK+R,YAC5E/R,KAAK2E,YAAc3E,KAAKua,MAAQva,KAAKma,eAEvCna,KAAKoE,KAAKqK,YAGVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKyM,UAAY7Q,KAAK2R,WAC3B3R,KAAKoE,KAAKwM,YAAc5Q,KAAKob,gBAC7Bpb,KAAKoE,KAAK+O,MAAMnT,KAAK0E,WAAa1E,KAAK+R,aAAe,EAAG/R,KAAKma,cAAena,KAAK+R,YAAa/R,KAAKgS,cACpGhS,KAAKoE,KAAK2M,SACV/Q,KAAKoE,KAAKqK,YAGW,QAAjBzO,KAAKoa,SACPpa,KAAK6a,UACL7a,KAAK4a,aACL5a,KAAK2a,WAAa3a,KAAK6L,MAAM7L,KAAK8a,QAAS9a,KAAK2a,WAAY,MAClC,QAAjB3a,KAAKoa,SACdpa,KAAK8a,UACL9a,KAAK4a,aACL5a,KAAK2a,WAAa3a,KAAK6L,MAAM7L,KAAK6a,QAAS7a,KAAK2a,WAAY,MAClC,SAAjB3a,KAAKoa,SAAuC,SAAjBpa,KAAKoa,SACzCpa,KAAK6a,UACL7a,KAAK8a,UACL9a,KAAK2a,WAAa3a,KAAK6L,MAAM7L,KAAK4a,WAAY5a,KAAK2a,WAAY,OAE/D3a,KAAK6a,UACL7a,KAAK8a,UACL9a,KAAK4a,cAGP5a,KAAKoE,KAAKwK,UAEV5O,KAAKua,MAAQ7W,EAAA+B,QAAQC,WAAW1F,KAAKua,MAAOva,KAAK0a,UAAW1a,KAAKyR,sCAG7DkK,EAAWC,EAAWjV,GAC1B,IAAMnG,EAAMC,KAAKD,MAEjB,OAAIA,EAAMob,EAAYjV,GACpBgV,EAAU1d,OACH2d,GACEpb,EAAMob,EAAwB,EAAXjV,EACrBiV,EAEFpb,oCAIPR,KAAKoE,KAAKgK,UAAY,SACtBpO,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKib,YAC3Bjb,KAAKoE,KAAKkK,SAAStO,KAAKqa,aAAcra,KAAK2E,YAAc3E,KAAKma,cAAgBna,KAAK2R,WAAa,EAC9F3R,KAAK+R,YAAc/R,KAAK2R,WAAY3R,KAAKma,cAAgBna,KAAK2R,WAAa,GAC7E3R,KAAKoE,KAAKiK,UAAYrO,KAAKgb,cAC3Bhb,KAAKoE,KAAKuK,SAAS3O,KAAKwa,UAAWxa,KAAK+R,YACtC/R,KAAKgS,aAAehS,KAAKma,cAAgB,IAC3Cna,KAAKoE,KAAKqK,8CAIVzO,KAAKoE,KAAKgK,UAAY,SACtBpO,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKmb,YAC3Bnb,KAAKoE,KAAKkK,SAAStO,KAAKqa,aAAc,EAAGra,KAAK+R,YAAc/R,KAAK2R,WAC/D3R,KAAKma,cAAgBna,KAAK2R,WAAa,GACzC3R,KAAKoE,KAAKiK,UAAYrO,KAAKkb,cAC3Blb,KAAKoE,KAAKuK,SAAS3O,KAAKya,UAAWza,KAAK+R,YAAa/R,KAAKma,cAAgB,GAC1Ena,KAAKoE,KAAKqK,iDAIVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKsK,KAAO,aACjB1O,KAAKoE,KAAKiK,UAAYrO,KAAKwb,eAE3Bxb,KAAKoE,KAAKkK,SAAStO,KAAKqa,aAAera,KAAK+R,YAAc/R,KAAK2R,WAC7D3R,KAAKua,MAAQ,EAAIva,KAAK0E,YAAc1E,KAAKqa,aAAera,KAAK+R,YAAc/R,KAAK2R,YAAc,IAEhG3R,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAKua,MAAQva,KAAK2R,WAAa,EACnD3R,KAAKqa,aAAera,KAAK+R,YAAc/R,KAAK2R,WAAY3R,KAAK2R,YAC/D3R,KAAKoE,KAAKiK,UAAYrO,KAAK8S,iBAC3B,IAAMnI,EAAyB,SAAjB3K,KAAKoa,SAAuC,SAAjBpa,KAAKoa,QAAsBpa,KAAKsa,aAAeta,KAAK6W,OAE7F7W,KAAKoE,KAAKuK,SAAShE,GAAO3K,KAAK0E,WAAa1E,KAAK+R,aAAe,EAAI,EAAI/R,KAAK+R,YAAa/R,KAAKua,MAAQ,GACvGva,KAAKoE,KAAK2M,SACV/Q,KAAKoE,KAAKqK,wCAGF1P,GACR,IAAIQ,EAAIR,EAERiB,KAAKsa,aAAe/a,EAEhBA,EAAIS,KAAKya,WACXza,KAAKoa,QAAU,OACf7a,EAAIS,KAAKya,WACAlb,EAAIS,KAAKwa,WAClBxa,KAAKoa,QAAU,OACf7a,EAAIS,KAAKwa,WAELjb,IAAMS,KAAKwa,UACbxa,KAAKoa,QAAU,MACN7a,IAAMS,KAAKya,UACpBza,KAAKoa,QAAU,MAEfpa,KAAKoa,QAAU,SAInBpa,KAAKyR,OAASlS,EAAIS,KAAK6W,OAAS1W,KAAK4G,IAAI/G,KAAKyR,SAAWtR,KAAK4G,IAAI/G,KAAKyR,QACvEzR,KAAK0a,UAAY1a,KAAK2E,aAAiBpF,EAAIS,KAAKwa,YAC7Cxa,KAAKya,UAAYza,KAAKwa,WAAcxa,KAAKgS,aAC1ChS,KAAKma,cACPna,KAAK6W,OAAStX,2ICpMlB,IAAA6H,EAAAxJ,EAAA,GACA8F,EAAAC,EAAA/F,EAAA,IACAkP,EAAAnJ,EAAA/F,EAAA,iuBAEqBie,cAEnB,SAAAA,EAAYhY,EAAQC,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAA6b,IAC3BrQ,EAAAyB,EAAAjN,MAAA6b,EAAA3O,WAAA1O,OAAA2O,eAAA0O,IAAA5d,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAG,IAAK,OAE7BgY,QAAU,EAHYtQ,8UAMJ,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACjB+O,EAASjY,EAAQiY,WAEvB/b,KAAKgc,UAAYlY,EAAQmY,UAAY7U,EAAAc,MAAM1E,MAE3CxD,KAAKkc,aAAeH,EAAOxa,OAAS6F,EAAAc,MAAM9E,KAC1CpD,KAAKmc,eAAiBJ,EAAOjO,SAAW1G,EAAAc,MAAMhF,MAE9ClD,KAAKyR,OAAS3N,EAAQlD,OAAS,uCAI/BZ,KAAK8b,QAAUpY,EAAA+B,QAAQ0K,qBAAqBnQ,KAAK8b,QAAS9b,KAAKyR,QAC/D,IAAMiG,EAAQhU,EAAA+B,QAAQ4K,iBAAiBrQ,KAAK8b,SAE5C9b,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QACLhG,KAAKoE,KAAKsM,UAAU,IAAK,KACzB1Q,KAAKoE,KAAKuM,OAAO+G,GAEjB1X,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKmN,OAAO,EAAG,GAGpBvR,KAAKoE,KAAK8U,kBAAkB,IAAK,GAAI,GAAI,IACzClZ,KAAKoE,KAAK8U,iBAAiB,IAAK,IAAK,EAAG,GAGxClZ,KAAKoE,KAAK8U,iBAAiB,IAAK,GAAI,GAAI,GACxClZ,KAAKoE,KAAK8U,iBAAiB,IAAK,GAAI,EAAG,GAGvClZ,KAAKoE,KAAK8U,iBAAiB,GAAI,GAAI,EAAG,IACtClZ,KAAKoE,KAAK8U,kBAAkB,GAAI,IAAK,EAAG,GAGxClZ,KAAKoE,KAAK8U,kBAAkB,GAAI,IAAK,GAAI,GACzClZ,KAAKoE,KAAK8U,kBAAkB,KAAM,GAAI,EAAG,GAEzClZ,KAAKoE,KAAKiK,UAAYrO,KAAKgc,UAC3Bhc,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI,EAAG,EAAI3Q,KAAKW,IACpCd,KAAKoE,KAAKiK,UAAYrO,KAAKmc,eAC3Bnc,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI,EAAG,EAAI3Q,KAAKW,IACpCd,KAAKoE,KAAKiK,UAAYrO,KAAKkc,aAC3Blc,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKwM,YAAc5Q,KAAKkc,aAC7Blc,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAK0M,IAAI,EAAG,EAAG,GAAI,EAAG,EAAI3Q,KAAKW,IACpCd,KAAKoE,KAAKiK,UAAYrO,KAAKmc,eAC3Bnc,KAAKoE,KAAK8M,OACVlR,KAAKoE,KAAKqK,YAEVzO,KAAKoE,KAAKwK,yCAGC/O,GACXG,KAAKgc,UAAYnc,oCAGHA,GACdG,KAAKkc,aAAerc,8BAGZN,GACRS,KAAKyR,OAASlS,2ICvFlB,IAAAqV,EAAAjR,EAAA/F,EAAA,IACA8F,EAAAC,EAAA/F,EAAA,IACAwJ,EAAAxJ,EAAA,woCAEqBwe,cAEnB,SAAAA,EAAY9U,EAASxD,GAAS,IAAA0H,EAAA,mGAAAzL,CAAAC,KAAAoc,IAC5B5Q,EAAAyB,EAAAjN,MAAAoc,EAAAlP,WAAA1O,OAAA2O,eAAAiP,IAAAne,KAAA+B,KAAMsH,EAAS,IAAK,OAIf+U,IAAM3Y,EAAA+B,QAAQoE,IAAI/F,EAAS,YAAcA,EAAQ2P,SAAW,EAGjEjI,EAAK8Q,IAAM5Y,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQ+U,UAAY,GAGnErN,EAAK8B,OAAS5J,EAAA+B,QAAQoE,IAAI/F,EAAS,SAAWA,EAAQ8R,MAAQ,GAC9DpK,EAAK0I,aAAexQ,EAAA+B,QAAQoE,IAAI/F,EAAS,eAAiBA,EAAQ+P,YAAczM,EAAAc,MAAM1E,MACtFgI,EAAKyI,WAAavQ,EAAA+B,QAAQoE,IAAI/F,EAAS,aAAeA,EAAQ8P,UAAYxM,EAAAc,MAAM3E,KAChFiI,EAAK+Q,YAAc7Y,EAAA+B,QAAQoE,IAAI/F,EAAS,cAAgBA,EAAQ0Y,WAAa,EAE7EhR,EAAKgO,OAAS,KAhBchO,mVAoB5BxL,KAAKyc,yCAILzc,KAAK0c,WACLjD,EAAA2C,EAAA1c,UAAAwN,WAAA1O,OAAA2O,eAAAiP,EAAA1c,WAAA,UAAAM,MAAA/B,KAAA+B,qCAGK,IAAA8Z,EAAA9Z,KACc,MAAfA,KAAKwZ,SACPxZ,KAAKwZ,OAAS/N,YAAY,WACxB,IAAIjL,EAAMkD,EAAA+B,QAAQkX,QAAQ7C,EAAKyC,aAE/BzC,EAAKtE,WACLsE,EAAK1V,KAAKmK,OACVuL,EAAK9T,QAEL8T,EAAK1V,KAAKsM,UAAUoJ,EAAKxM,OAAQwM,EAAKxM,QAGtCwM,EAAK8C,SAASpc,EAAIG,YAClBmZ,EAAK+C,iBAGL/C,EAAK8C,SAASpc,EAAIyZ,cAClBH,EAAK+C,iBAGL/C,EAAK8C,SAASpc,EAAIO,cAElB+Y,EAAK1V,KAAKwK,WACT,yCAKc,MAAf5O,KAAKwZ,SACP7N,cAAc3L,KAAKwZ,QACnBxZ,KAAKwZ,OAAS,+CAKhBxZ,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKkU,aAC3BlU,KAAKoE,KAAKkK,SAAS,GAAe,EAAXtO,KAAKsc,IAAUtc,KAAKqc,KAAO,EAAGrc,KAAKqc,IAAKrc,KAAKqc,KACpErc,KAAKoE,KAAKkK,SAAS,GAAe,EAAXtO,KAAKsc,IAAUtc,KAAKqc,KAAO,EAAI,EAAIrc,KAAKqc,IAAKrc,KAAKqc,IAAKrc,KAAKqc,KACnFrc,KAAKoE,KAAKsM,UAAU1Q,KAAKqc,IAAMrc,KAAKsN,OAAQ,GAC5CtN,KAAKoE,KAAKqK,6CAGHzP,GACP,GAAIA,EAAI,GACNgB,KAAK6V,WAAW,GAChB7V,KAAKoE,KAAKsM,UAAqB,EAAX1Q,KAAKqc,IAAUrc,KAAKsc,IAAMtc,KAAKsN,OAAQ,GAC3DtN,KAAK6V,WAAW7W,GAChBgB,KAAKoE,KAAKsM,UAAqB,EAAX1Q,KAAKqc,IAAUrc,KAAKsc,IAAMtc,KAAKsN,OAAQ,OACtD,CACL,IAAIlP,EAAI+B,KAAKC,MAAMpB,EAAI,IACnBJ,EAAII,EAAI,GAEZgB,KAAK6V,WAAWzX,GAChB4B,KAAKoE,KAAKsM,UAAqB,EAAX1Q,KAAKqc,IAAUrc,KAAKsc,IAAMtc,KAAKsN,OAAQ,GAC3DtN,KAAK6V,WAAWjX,GAChBoB,KAAKoE,KAAKsM,UAAqB,EAAX1Q,KAAKqc,IAAUrc,KAAKsc,IAAMtc,KAAKsN,OAAQ,wCAK7DtN,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKiU,WAC3BjU,KAAKoE,KAAKmN,OAAO,EAAG,GACpBvR,KAAK8c,WACL9c,KAAK+c,cACL/c,KAAKgd,eACLhd,KAAKid,YACLjd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAKod,UACLpd,KAAKoE,KAAKqK,+CAKVzO,KAAKoE,KAAKkK,SAAS,EAAGtO,KAAKqc,IAAKrc,KAAKqc,IAAKrc,KAAKsc,2CAK/Ctc,KAAKoE,KAAKkK,SAAS,EAAc,EAAXtO,KAAKqc,IAAUrc,KAAKsc,IAAKtc,KAAKqc,IAAKrc,KAAKsc,yCAK9Dtc,KAAKoE,KAAKkK,SAAStO,KAAKqc,IAAMrc,KAAKsc,IAAKtc,KAAKqc,IAAKrc,KAAKqc,IAAKrc,KAAKsc,4CAKjEtc,KAAKoE,KAAKkK,SAAStO,KAAKqc,IAAMrc,KAAKsc,IAAgB,EAAXtc,KAAKqc,IAAUrc,KAAKsc,IAAKtc,KAAKqc,IAAKrc,KAAKsc,oCAKhFtc,KAAKoE,KAAKkK,SAAStO,KAAKqc,IAAK,EAAGrc,KAAKsc,IAAKtc,KAAKqc,uCAI/Crc,KAAKoE,KAAKkK,SAAStO,KAAKqc,IAAKrc,KAAKqc,IAAMrc,KAAKsc,IAAKtc,KAAKsc,IAAKtc,KAAKqc,uCAKjErc,KAAKoE,KAAKkK,SAAStO,KAAKqc,IAAgB,EAAXrc,KAAKqc,IAAqB,EAAXrc,KAAKsc,IAAStc,KAAKsc,IAAKtc,KAAKqc,wCAGhE9c,GAKT,OAJAS,KAAK2U,YACL3U,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKiK,UAAYrO,KAAKkU,aAEnB3U,GACN,KAAK,EACHS,KAAKkd,OACLld,KAAKod,UACLpd,KAAK8c,WACL9c,KAAKid,YACLjd,KAAK+c,cACL/c,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKid,YACLjd,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKkd,OACLld,KAAKid,YACLjd,KAAKmd,UACLnd,KAAK+c,cACL/c,KAAKod,UACL,MACF,KAAK,EACHpd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAKod,UACLpd,KAAKid,YACLjd,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKmd,UACLnd,KAAK8c,WACL9c,KAAKid,YACLjd,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAKod,UACLpd,KAAK8c,WACL9c,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAKod,UACLpd,KAAK8c,WACL9c,KAAK+c,cACL/c,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAKkd,OACLld,KAAKid,YACLjd,KAAKgd,eACL,MACF,KAAK,EACHhd,KAAK8c,WACL9c,KAAK+c,cACL/c,KAAKid,YACLjd,KAAKgd,eACLhd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAKod,UACL,MACF,KAAK,EACHpd,KAAKkd,OACLld,KAAKmd,UACLnd,KAAK8c,WACL9c,KAAKid,YACLjd,KAAKgd,eAGThd,KAAKoE,KAAKqK,8CAGIoF,GACd7T,KAAKkU,aAAeL,kBAIpB,OAAO7T,KAAKkU,6CAGAN,GACZ5T,KAAKiU,WAAaL,kBAIlB,OAAO5T,KAAKiU,oJCzOhB,IAAA7M,EAAAxJ,EAAA,GACA8F,EAAAC,EAAA/F,EAAA,IACAkP,EAAAnJ,EAAA/F,EAAA,iuBAEqByf,cAEnB,SAAAA,EAAYxZ,GAAsB,IAAA2H,EAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,mGAAAjN,CAAAC,KAAAqd,GAChC,IAAMpZ,EAAYH,EAAQG,WAAa,IADP,OAGhCuH,EAAAyB,EAAAjN,MAAAqd,EAAAnQ,WAAA1O,OAAA2O,eAAAkQ,IAAApf,KAAA+B,KAAM6D,EAAQC,EAAS,EAAG,EAAGG,EAAW,OAEnCqJ,OAAS,GACd9B,EAAKsI,UAAYtI,EAAK9G,WAAa,EAAI8G,EAAK8B,OAC5C9B,EAAKoN,WAAa,GAClBpN,EAAK8R,SAAW,EAChB9R,EAAK+R,cAAgBpd,KAAKC,OAAOoL,EAAKqL,OAASrL,EAAKgS,OAAShS,EAAKiS,KAAOjS,EAAKgS,MAAQ,IACtFhS,EAAKkS,QAA+B,IAArBlS,EAAK+R,cAVY/R,8UAaT,IAAd1H,EAAckJ,UAAAnK,OAAA,QAAAN,IAAAyK,UAAA,GAAAA,UAAA,MACvBhN,KAAKwd,KAAO1Z,EAAQ7D,KAAO,EAC3BD,KAAKyd,KAAO3Z,EAAQ5D,KAAO,IAC3BF,KAAK6W,OAAS/S,EAAQ/E,OAAS,EAC/BiB,KAAKiU,WAAanQ,EAAQ8P,WAAaxM,EAAAc,MAAM3E,KAC7CvD,KAAK2d,UAAY7Z,EAAQsV,UAAYhS,EAAAc,MAAM1E,MAC3CxD,KAAKyR,OAAS3N,EAAQlD,OAAS,EAC/BZ,KAAK4d,YAAc9Z,EAAQ+Z,WAAY,uCAIvC7d,KAAKyQ,QACLzQ,KAAKoE,KAAKmK,OACVvO,KAAKgG,QAGLhG,KAAKoE,KAAKiK,UAAYrO,KAAKiU,WAC3B,IAAK,IAAInW,EAAI,EAAGA,EAAI,GAAIA,IAAK,CAC3B,IAAIoJ,EAAI,EAAQ,GAAJpJ,EAEZkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,SAAStO,KAAKsN,OAAQpG,EAAGlH,KAAK8T,UAAW9T,KAAK4Y,YACxD5Y,KAAKoE,KAAKqK,YAIZ,GAAIzO,KAAKsd,UAAYtd,KAAK0d,QACxB1d,KAAKsd,UAAY,QACZ,CACL,IAAI7K,EAAMzS,KAAKsd,SAAW,IAEtBQ,KAEA9d,KAAK4d,YACPE,EAASpa,EAAA+B,QAAQsY,sBAAsB3W,EAAAc,MAAMhF,MAAOlD,KAAK2d,UAAWlL,GAEpEzS,KAAKoE,KAAKiK,UAAYrO,KAAK2d,UAG7B,IAAK,IAAI7f,EAAI,EAAGA,EAAI2U,EAAK3U,IAAK,CAC5B,IAAIoJ,EAAIlH,KAAK2E,aAAe,GAAS,GAAJ7G,GAE7BkC,KAAK4d,cACP5d,KAAKoE,KAAKiK,UAAY,IAAMyP,EAAOhgB,IAGrCkC,KAAKoE,KAAKoK,YACVxO,KAAKoE,KAAKkK,SAAStO,KAAKsN,OAAQpG,EAAGlH,KAAK8T,UAAW9T,KAAK4Y,YACxD5Y,KAAKoE,KAAKqK,YAGZzO,KAAKsd,UAAYtd,KAAKyR,OAGxBzR,KAAKoE,KAAKwK,sCAGF7P,GACRiB,KAAK6W,OAAS9X,EACdiB,KAAKud,cAAgBpd,KAAKC,OAAOJ,KAAK6W,OAAS7W,KAAKwd,OAASxd,KAAKyd,KAAOzd,KAAKwd,MAAQ,IACtFxd,KAAK0d,QAA+B,IAArB1d,KAAKud,+CAIpB,OAAOpd,KAAKC,OAAOJ,KAAK6W,OAAS7W,KAAKwd,OAASxd,KAAKyd,KAAOzd,KAAKwd,MAAQ,qCAG5D5J,GACZ5T,KAAKiU,WAAaL,iCAGPwF,GACXpZ,KAAK2d,UAAYvE,u+CC3FrB,IAAA4E,EAAAra,EAAA/F,EAAA,KACAqgB,EAAAta,EAAA/F,EAAA,KACAsgB,EAAAva,EAAA/F,EAAA,KACAugB,EAAAxa,EAAA/F,EAAA,KACAwgB,EAAAza,EAAA/F,EAAA,KACAygB,EAAA1a,EAAA/F,EAAA,KACA0gB,EAAA3a,EAAA/F,EAAA,KACA2gB,EAAA5a,EAAA/F,EAAA,KACA4gB,EAAA7a,EAAA/F,EAAA,KACA6gB,EAAA9a,EAAA/F,EAAA,KACA8K,EAAA/E,EAAA/F,EAAA,IACAkL,EAAAnF,EAAA/F,EAAA,IACA8gB,EAAA/a,EAAA/F,EAAA,KACA+gB,EAAAhb,EAAA/F,EAAA,KAEAghB,EAAAjb,EAAA/F,EAAA,IACAihB,EAAAlb,EAAA/F,EAAA,IACAkhB,EAAAnb,EAAA/F,EAAA,uDAuBA8K,EAAAjD,QAAeuD","file":"zeu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zeu\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zeu\"] = factory();\n\telse\n\t\troot[\"zeu\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 23);\n","\nexport default class Utility {\n\n  constructor() {}\n\n  static getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n  }\n\n  static getRandomColor() {\n    return '#' + ((1 << 24) * Math.random() | 0).toString(16);\n  }\n\n  static has(object, key) {\n    return object ? hasOwnProperty.call(object, key) : false;\n  }\n\n  static addHour(h) {\n    let now = new Date();\n\n    now.setHours(now.getHours() + h);\n    return now;\n  }\n\n  static getAngleByDate(speed, date) {\n    return ((speed * Math.PI) / 6) * date.getSeconds() + ((speed * Math.PI) / 6000) * date.getMilliseconds();\n  }\n\n  static getNextAngleByDegree(degree, speed) {\n    if (degree >= 360) {\n      return 0;\n    }\n    return degree + speed;\n  }\n\n  static getAngleByDegree(degree) {\n    return degree * Math.PI / 180;\n  }\n\n  static hexToRgba(hex, opacity) {\n    let h = hex.replace('#', '');\n    let r = parseInt(h.substring(0, 2), 16);\n    let g = parseInt(h.substring(2, 4), 16);\n    let b = parseInt(h.substring(4, 6), 16);\n\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\n  }\n\n  static hexToRgb(hex) {\n    let h = hex.replace('#', '');\n    let color = [];\n\n    color[0] = parseInt(h.substring(0, 2), 16);\n    color[1] = parseInt(h.substring(2, 4), 16);\n    color[2] = parseInt(h.substring(4, 6), 16);\n    return color;\n  }\n\n  static hex(c) {\n    let s = '0123456789abcdef';\n    let i = parseInt(c, 10);\n\n    if (i === 0 || isNaN(c)) {\n      return '00';\n    }\n    i = Math.round(Math.min(Math.max(0, i), 255));\n    return s.charAt((i - i % 16) / 16) + s.charAt(i % 16);\n  }\n\n  static convertToHex(rgb) {\n    return this.hex(rgb[0]) + this.hex(rgb[1]) + this.hex(rgb[2]);\n  }\n\n  static generateGradientColor(colorStart, colorEnd, colorCount) {\n    const start = this.hexToRgb(colorStart);\n    const end = this.hexToRgb(colorEnd);\n    const len = colorCount;\n    let alpha = 0.0;\n    let rt = [];\n\n    for (let i = 0; i < len; i++) {\n      const c = [];\n\n      alpha += (1.0 / len);\n      c[0] = start[0] * alpha + (1 - alpha) * end[0];\n      c[1] = start[1] * alpha + (1 - alpha) * end[1];\n      c[2] = start[2] * alpha + (1 - alpha) * end[2];\n      rt.push(this.convertToHex(c));\n    }\n    return rt;\n  }\n\n  static isDefined(o) {\n    return o !== undefined && o !== null;\n  }\n\n  static leftPadZero(n) {\n    if (n < 10) {\n      return '0' + n;\n    }\n    return n;\n  }\n\n  static getNextPos(curr, dest, speed) {\n    if ((speed > 0 && curr < dest) || (speed < 0 && curr > dest)) {\n      return curr + speed;\n    }\n    return dest;\n  }\n\n  static shuffleArray(a) {\n    let j = 0;\n    let temp = 0;\n\n    for (let i = a.length - 1; i > 0; i--) {\n      j = Math.floor(Math.random() * (i + 1));\n      temp = a[i];\n      a[i] = a[j];\n      a[j] = temp;\n    }\n    return a;\n  }\n}\n\n","\r\nlet COLOR = {\r\n  lightGreen: '#00d7af',\r\n  lightGrey: '#F8F8FF',\r\n  lighBlack: '343a42',\r\n  black: '#000000',\r\n  white: '#ffffff',\r\n  red: '#dc3547',\r\n  blue: '#007bfb',\r\n  yellow: '#ffc108',\r\n  cyan: '#17a2b9',\r\n  grey: '#6c757e',\r\n  green: '#28a748'\r\n};\r\n\r\nexport { COLOR };\r\n","import { GLOBAL } from './global';\nimport Utility from './utility';\n\nexport default class BaseComponent {\n\n  constructor(canvas, options, viewX, viewY, viewWidth, viewHeight) {\n    // Canvas\n    this._canvas = canvas;\n\n    // Canvas 2d context\n    this._ctx = this._canvas.getContext('2d');\n\n    // Scale parameters used in scale()\n    this._scaleX = 1;\n    this._scaleY = 1;\n\n    // Current X value (Left 0 to right)\n    this._x = viewX;\n\n    // Current Y value (Top 0 to bottom)\n    this._y = viewY;\n\n    // The width and height used to draw the component.\n    this._viewWidth = viewWidth;\n    this._viewHeight = viewHeight;\n    // Acutal width and height of the component based on scales.\n    this._width = this._scaleX * this._viewWidth;\n    this._height = this._scaleY * this._viewHeight;\n\n    this._display = true;\n\n    // Event queue that stores animation movements like 'move', 'scale', 'display' and etc.\n    this._eventQueue = [];\n\n    // Bind the drawFrame function.\n    this.drawFrame = this.drawFrame.bind(this);\n\n    // Set options\n    this.setOptions(options);\n\n    // Post constructor.\n    this.postConstructor();\n  }\n\n  // ********** INTERNAL API **********\n  setOptions(options) {}\n\n  postConstructor() {\n    this.addToAnimationQueue();\n  }\n\n  drawFrame() {\n    // Check movement\n    if (this._eventQueue.length > 0) {\n      const event = this._eventQueue[0];\n\n      if (event.type === 'move') {\n        if (this._x === event.destX && this._y === event.destY) {\n          this._eventQueue.shift();\n        } else {\n          this._x = Utility.getNextPos(this._x, event.destX, event.speedX);\n          this._y = Utility.getNextPos(this._y, event.destY, event.speedY);\n        }\n      }\n    }\n\n    // Check display or not.\n    if (!this.isDisplay()) {\n      return;\n    }\n\n    // Draw the component\n    // this._ctx.save();\n    // Scale the object.\n    // this._ctx.scale(this._scaleX, this._scaleY);\n    this.drawObject();\n    // this._ctx.restore();\n  }\n\n  drawObject() {}\n\n  clear() {\n    this._ctx.clearRect(this._x, this._y, this._width, this._height);\n  }\n\n  scale() {\n    this._ctx.scale(this._scaleX, this._scaleY);\n  }\n\n  addToAnimationQueue() {\n    let index = this.getAnimationFrameArrayPos();\n\n    if (index === -1) {\n      GLOBAL.requestAnimationFrameArray.push(this.drawFrameObj());\n    }\n  }\n\n  removeFromAnimationQueue() {\n    let index = this.getAnimationFrameArrayPos();\n\n    if (index !== -1) {\n      GLOBAL.requestAnimationFrameArray.splice(index, 1);\n    }\n  }\n\n  drawFrameObj() {\n    return {\n      func: this.drawFrame,\n      self: this\n    };\n  }\n\n  getAnimationFrameArrayPos() {\n    let index = -1;\n\n    for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\n      let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\n\n      if (drawFrameObj.self._canvas.id === this._canvas.id) {\n        index = i;\n        break;\n      }\n    }\n    return index;\n  }\n\n  get isAnimationOn() {\n    return this.getAnimationFrameArrayPos() !== -1;\n  }\n\n  // ********** EXTERNAL API **********\n  startAnimation() {\n    this.addToAnimationQueue();\n  }\n\n  stopAnimation() {\n    this.removeFromAnimationQueue();\n  }\n\n  moveTo(destX, destY, duration) {\n    let srcX = this._x;\n    let srcY = this._y;\n\n    // Find last move event.\n    for (let i = this._eventQueue.length; i >= 0; i--) {\n      const event = this._eventQueue[i];\n\n      if (event.type === 'move') {\n        srcX = event.destX;\n        srcY = event.destY;\n        break;\n      }\n    }\n\n    // Calculate the speed.\n    // TODO: use the fps intead of 60\n    const speed = duration / 60;\n    const sX = Math.abs(destX - srcX) / speed;\n    const sY = Math.abs(destY - srcY) / speed;\n    const speedX = destX > srcX ? sX : -sX;\n    const speedY = destY > srcY ? sY : -sY;\n\n    // Push the movement to the queue.\n    this._eventQueue.push({\n      type: 'move',\n      destX: destX,\n      destY: destY,\n      speedX: speedX,\n      speedY: speedY\n    });\n\n    return this;\n  }\n\n  scaleTo(x, y) {\n    this._scaleX = x;\n    this._scaleY = y;\n    this._width = this._scaleX * this._viewWidth;\n    this._height = this._scaleY * this._viewHeight;\n    return this;\n  }\n\n  scaleByHeight(height) {\n    this._scaleY = height / this._viewHeight;\n    this._scaleX = this._scaleY;\n    this._width = this._scaleX * this._viewWidth;\n    this._height = this._scaleY * this._viewHeight;\n    return this;\n  }\n\n  show() {\n    this._display = true;\n  }\n\n  hide() {\n    this._display = false;\n  }\n\n  isDisplay() {\n    return this._display;\n  }\n\n  get canvas() {\n    return this._canvas;\n  }\n\n  get context() {\n    return this._ctx;\n  }\n\n  get eventQueue() {\n    return this._eventQueue;\n  }\n\n  get viewWidth() {\n    return this._viewWidth;\n  }\n\n  get viewHeight() {\n    return this._viewHeight;\n  }\n}\n","import { GLOBAL } from './global';\r\nimport { COLOR } from './color';\r\n\r\nexport default class BaseCanvas {\r\n\r\n  constructor(baseDiv, width, height) {\r\n    this._div = baseDiv;\r\n    this._defaultWidth = width;\r\n    this._defaultHeight = height;\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.setAttribute('width', baseDiv.clientWidth);\r\n    this._canvas.setAttribute('height', baseDiv.clientHeight);\r\n    this._div.appendChild(this._canvas);\r\n    this._ctx = this._canvas.getContext('2d');\r\n\r\n    // Base scale on the height. Use CSS transform instead of scale()\r\n    // let heightScale = baseDiv.clientHeight / height;\r\n    // this._canvas.style.transformOrigin = '0 0'; // scale from top left\r\n    // this._canvas.style.transform = 'scale(' + heightScale + ')';\r\n\r\n    // Bind the drawFrame function.\r\n    this.drawFrame = this.drawFrame.bind(this);\r\n\r\n    // Default color\r\n    this._fontColor = COLOR.black;\r\n    this._lineColor = COLOR.grey;\r\n    this._fillColor = COLOR.green;\r\n\r\n    // Base scale on the height.\r\n    this._heightScale = this._div.clientHeight / this._defaultHeight;\r\n\r\n    // Width after being scaled.\r\n    this._scaledWidth = this._defaultWidth / this._heightScale;\r\n\r\n    this.postConstructor();\r\n  }\r\n\r\n  destroy() {\r\n    this.stopAnimation();\r\n    this._div.removeChild(this._canvas);\r\n  }\r\n\r\n  postConstructor() {\r\n    this.startAnimation();\r\n  }\r\n\r\n  scale() {\r\n    this._ctx.scale(this._heightScale, this._heightScale);\r\n  }\r\n\r\n  clearAll() {\r\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n  }\r\n\r\n  startAnimation() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index === -1) {\r\n      GLOBAL.requestAnimationFrameArray.push(this.drawFrameObj());\r\n    }\r\n  }\r\n\r\n  stopAnimation() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index !== -1) {\r\n      GLOBAL.requestAnimationFrameArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  drawFrameObj() {\r\n    return {\r\n      func: this.drawFrame,\r\n      self: this\r\n    };\r\n  }\r\n\r\n  get isAnimationOn() {\r\n    return this.getAnimationFrameArrayPos() !== -1;\r\n  }\r\n\r\n  getAnimationFrameArrayPos() {\r\n    let index = -1;\r\n\r\n    for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\r\n      let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\r\n\r\n      if (drawFrameObj.self._div.id === this._div.id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  drawFrame() {}\r\n\r\n}\r\n\r\n","\nlet GLOBAL = {\n  requestAnimationFrameArray: []\n};\n\nexport { GLOBAL };\n","import AnimationTimer from './animation-timer';\n\nclass Settings {\n  constructor() {\n    this._fps = 60;\n  }\n\n  set fps(fps) {\n    this._fps = fps;\n    AnimationTimer._fps = fps;\n  }\n}\n\nexport default new Settings();\n","import { GLOBAL } from './global';\nimport Settings from './settings';\n\nclass AnimationTimer {\n\n  constructor() {\n    // Bind the render function.\n    this.render = this.render.bind(this);\n\n    // Animation parameters.\n    this._fps = Settings._fps;\n    this._fpsInterval = 1000 / this._fps;\n    this._lastFrame = Date.now();\n\n    // Cross browser.\n    if (!window.requestAnimationFrame) {\n      window.requestAnimFrame = () => {\n        return window.webkitRequestAnimationFrame ||\n                window.mozRequestAnimationFrame ||\n                window.oRequestAnimationFrame ||\n                window.msRequestAnimationFrame;\n      };\n    }\n  }\n\n  render() {\n    window.requestAnimationFrame(this.render);\n\n    // FPS control\n    let now = Date.now();\n    let elapsed = now - this._lastFrame;\n\n    if (elapsed > this._fpsInterval) {\n      this._lastFrame = now - (elapsed % this._fpsInterval);\n\n      // Draw\n      for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\n        let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\n\n        // Buy me some time.\n        /*\n        setTimeout(() => {\n          drawFrameObj.func.call(drawFrameObj.self);\n        }, 0);\n        */\n\n        drawFrameObj.func.call();\n      }\n    }\n  }\n}\n\nexport default new AnimationTimer();\n\n","import Utility from './../utility';\nimport { COLOR } from './../color';\n\n/**\n * Div based\n */\nexport default class ScrollPanel {\n\n  constructor(baseDiv, options) {\n    this._div = baseDiv;\n\n    let defaultCss = 'margin: 3px; padding: 3px; color: white; background-color: ' + COLOR.green + ';';\n\n    // Options\n    this._defaultCss = Utility.has(options, 'defaultCss') ? options.defaultCss : defaultCss;\n    this._isUp = Utility.has(options, 'isUp') ? options.isUp : true;;\n    this._maxQueueCapacity = Utility.has(options, 'maxQueueCapacity') ? options.maxQueueCapacity : 20;\n\n    this._queue = [];\n  }\n\n  push(boxDiv) {\n    if (this._queue.length > this._maxQueueCapacity) {\n      this.pop();\n    }\n\n    this._queue.push(boxDiv);\n\n    if (this._isUp) {\n      this._div.insertBefore(boxDiv, this._div.firstChild);\n      this._div.scrollBottom = this._div.scrollHeight;\n    } else {\n      this._div.appendChild(boxDiv);\n      this._div.scrollTop = this._div.scrollHeight;\n    }\n  }\n\n  pop() {\n    if (this._queue.length > 0) {\n      let toBeRemoved = this._queue.shift();\n\n      this._div.removeChild(toBeRemoved);\n    }\n  }\n\n  pushText(text, css) {\n    let boxDiv = document.createElement('div');\n\n    boxDiv.innerHTML = text;\n    boxDiv.style.cssText = css != null ? css : this._defaultCss;\n    this.push(boxDiv);\n  }\n\n  set isUp(isUp) {\n    this._isUp = isUp;\n  }\n\n  get isUp() {\n    return this._isUp;\n  }\n\n  set maxQueueCapacity(capacity) {\n    this._maxQueueCapacity = capacity;\n  }\n\n  get maxQueueCapacity() {\n    return this._maxQueueCapacity;\n  }\n}\n","import Utility from './../utility';\r\n\r\n/**\r\n * Div based\r\n */\r\nexport default class BlinkText {\r\n\r\n  constructor(baseDiv, options) {\r\n    this._div = baseDiv;\r\n    this._defaultCss = baseDiv.style.cssText;\r\n    this._blinkTimer = null;\r\n\r\n    // Options\r\n    this._interval = Utility.has(options, 'interval') ? options.interval : 500;\r\n    this._blinkCss = Utility.has(options, 'blinkCss') ? options.blinkCss : 'color: white; background-color: red;';\r\n  }\r\n\r\n  blink(message) {\r\n    if (message != null) {\r\n      this._div.innerHTML = message;\r\n    }\r\n\r\n    if (this._blinkTimer == null) {\r\n      this._blinkTimer = setInterval(() => {\r\n        let currCss = this._div.style.cssText !== this._defaultCss ? this._defaultCss : this._blinkCss;\r\n\r\n        this._div.style.cssText = currCss;\r\n      }, this._interval);\r\n    }\r\n  }\r\n\r\n  unblink() {\r\n    if (this._blinkTimer != null) {\r\n      clearInterval(this._blinkTimer);\r\n      this._blinkTimer = null;\r\n      this._div.style.cssText = this._defaultCss;\r\n    }\r\n  }\r\n\r\n  set interval(interval) {\r\n    this._interval = interval;\r\n    if (this._blinkTimer != null) {\r\n      this.unblink();\r\n      this.blink();\r\n    }\r\n  }\r\n\r\n  get interval() {\r\n    return this._interval;\r\n  }\r\n\r\n  set blinkCss(blinkCss) {\r\n    this._blinkCss = blinkCss;\r\n  }\r\n\r\n  get blinkCss() {\r\n    return this._blinkCss;\r\n  }\r\n}\r\n","import Utility from './../utility';\r\n\r\n/**\r\n * Div based\r\n */\r\nexport default class WarningDialog {\r\n\r\n  constructor(options) {\r\n    this._reasonText = Utility.has(options, 'reason') ? options.reason : '';\r\n    this._interval = Utility.has(options, 'interval') ? options.interval : 1000;\r\n\r\n    // Dialog\r\n    let dailog = document.createElement('div');\r\n\r\n    dailog.style.cssText = `\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      margin: 0;\r\n      padding: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      z-index: 100;\r\n      display: none;\r\n      background-color: rgb(220, 53, 69, 0.8);\r\n    `;\r\n\r\n    let panel = document.createElement('div');\r\n\r\n    panel.style.cssText = `\r\n      width: 600px;\r\n      height: 400px;\r\n      position: relative;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-top: -200px; \r\n      margin-left: -300px;\r\n      text-align: center;\r\n      padding: 20px;\r\n      border: 20px solid #dc3545;\r\n      box-sizing: border-box;\r\n      background-size: 80px 80px;\r\n      background-image: linear-gradient(\r\n        45deg, \r\n        #dc3545 25%, \r\n        #ffc107 25%, \r\n        #ffc107 50%, \r\n        #dc3545 50%, \r\n        #dc3545 75%, \r\n        #ffc107 75%, \r\n        #ffc107);\r\n      animation: zeu-pole 1s linear infinite;\r\n    `;\r\n\r\n    let innerPanel = document.createElement('div');\r\n\r\n    innerPanel.style.cssText = `\r\n      margin: 0 auto;\r\n    `;\r\n    let warning = document.createElement('div');\r\n\r\n    warning.innerHTML = 'WARNING';\r\n    warning.style.cssText = `\r\n      height: 100px; \r\n      background-color: #dc3545;\r\n      line-height: 100px;\r\n      font-size: 50px;\r\n      font-weight: bold;\r\n      color: #fff;\r\n    `;\r\n\r\n    this._reason = document.createElement('div');\r\n    this._reason.innerHTML = this._reasonText;\r\n    this._reason.style.cssText = `\r\n      height: 180px;\r\n      background-color: rgb(220, 53, 69, 0.9);\r\n      font-size: 30px;\r\n      color: #fff;\r\n      padding: 10px;\r\n      border-left: 20px solid #dc3545;\r\n      border-right: 20px solid #dc3545;\r\n      border-bottom: 20px solid #dc3545;\r\n    `;\r\n\r\n    innerPanel.appendChild(warning);\r\n    innerPanel.appendChild(this._reason);\r\n\r\n    panel.appendChild(innerPanel);\r\n\r\n    dailog.appendChild(panel);\r\n\r\n    this._dialog = dailog;\r\n\r\n    // Append dialog div to body\r\n    let body = document.body || document.getElementsByTagName('body')[0];\r\n\r\n    body.appendChild(this._dialog);\r\n\r\n    // Append style to head\r\n    let zeuPole = `\r\n    @keyframes zeu-pole {\r\n      from { background-position: 0 0; }\r\n      to { background-position: 160px 80px; }\r\n    }\r\n    `;\r\n\r\n    let head = document.head || document.getElementsByTagName('head')[0];\r\n\r\n    let style = document.createElement('style');\r\n\r\n    style.type = 'text/css';\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = zeuPole;\r\n    } else {\r\n      style.appendChild(document.createTextNode(zeuPole));\r\n    }\r\n\r\n    head.appendChild(style);\r\n\r\n    this._blinkTimer = null;\r\n  }\r\n\r\n  blink() {\r\n    this._dialog.style.display = 'block';\r\n\r\n    if (this._blinkTimer == null) {\r\n      this._blinkTimer = setInterval(() => {\r\n        if (this._dialog.style.display !== 'block') {\r\n          this._dialog.style.display = 'block';\r\n        } else {\r\n          this._dialog.style.display = 'none';\r\n        }\r\n      }, this._interval);\r\n    }\r\n  }\r\n\r\n  unblink() {\r\n    this._dialog.style.display = 'none';\r\n    if (this._blinkTimer != null) {\r\n      clearInterval(this._blinkTimer);\r\n      this._blinkTimer = null;\r\n    }\r\n  }\r\n\r\n  set reason(reason) {\r\n    this._reasonText = reason;\r\n    this._reason.innerHTML = this._reasonText;\r\n  }\r\n\r\n  get reason() {\r\n    return this._reason;\r\n  }\r\n\r\n  set interval(interval) {\r\n    this._interval = interval;\r\n    if (this._blinkTimer != null) {\r\n      this.unblink();\r\n      this.blink();\r\n    }\r\n  }\r\n\r\n  get interval() {\r\n    return this._interval;\r\n  }\r\n}\r\n","\nimport Utility from './utility';\nimport BaseComponent from './base-component';\nimport { COLOR } from './color';\n\n/**\n * Allow override width\n * default view height 100\n */\nexport default class TextBox extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewWidth = options.viewWidth || 200;\n\n    super(canvas, options, 0, 0, viewWidth, 100);\n\n    this._borderWidth = 8;\n    this._borderHeight = 30;\n    this._space = 10;\n    this._waveY = 0;\n    this._waveSpeed = 1;\n    this._isWaveOn = false;\n  }\n\n  setOptions(options = {}) {\n    const text = options.text || {};\n\n    this._textValue = text.value || '';\n    this._textColor = text.fontColor || COLOR.white;\n    this._textBgColor = text.bgColor || COLOR.blue;\n\n    this._bgColor = options.bgColor || 'rgba(0, 0, 0, 0.01)';\n    this._borderColor = options.borderColor || COLOR.blue;\n    this._waveColor = options.waveColor || COLOR.blue;\n  }\n\n  drawObject() {\n    this._ctx.textAlign = 'center';\n\n    this._ctx.fillStyle = this._bgColor;\n    this._ctx.fillRect(0, 0, this._width, this._height);\n    this._ctx.save();\n    this.scale();\n\n    // Draw wave line\n    if (this._isWaveOn) {\n      const waveWidth = 1;\n\n      if (this._waveY >= ((this._viewHeight / 2) + waveWidth)) {\n        this._waveY = 0;\n        this._isWaveOn = false;\n      } else {\n        this._ctx.fillStyle = this._waveColor;\n        this._ctx.beginPath();\n        this._ctx.fillRect(0, this._waveY, this._viewWidth + waveWidth, waveWidth);\n        this._ctx.closePath();\n\n        this._ctx.beginPath();\n        this._ctx.fillRect(0, this._viewHeight - this._waveY - waveWidth, this._viewWidth, waveWidth);\n        this._ctx.closePath();\n        this._waveY = Utility.getNextPos(this._waveY, this._viewHeight / 2 + waveWidth, this._waveSpeed);\n      }\n    }\n\n    // Draw the border.\n    // Top left\n    this._ctx.fillStyle = this._borderColor;\n    this._ctx.fillRect(0, 0, this._borderHeight, this._borderWidth);\n    this._ctx.fillRect(0, 0, this._borderWidth, this._borderHeight);\n    // Bottom left\n    this._ctx.fillRect(0, this._viewHeight - this._borderHeight, this._borderWidth, this._borderHeight);\n    this._ctx.fillRect(0, this._viewHeight - this._borderWidth, this._borderHeight, this._borderWidth);\n    // Top right\n    this._ctx.fillRect(this._viewWidth - this._borderHeight, 0, this._borderHeight, this._borderWidth);\n    this._ctx.fillRect(this._viewWidth - this._borderWidth, 0, this._borderWidth, this._borderHeight);\n\n    // Bottom right\n    this._ctx.fillRect(this._viewWidth - this._borderHeight, this._viewHeight - this._borderWidth,\n      this._borderHeight, this._borderWidth);\n    this._ctx.fillRect(this._viewWidth - this._borderWidth, this._viewHeight - this._borderHeight,\n      this._borderWidth, this._borderHeight);\n\n    // Draw background rect.\n    this._ctx.fillStyle = this._textBgColor;\n    this._ctx.fillRect(this._borderWidth + this._space, this._borderWidth + this._space,\n      this._viewWidth - 2 * (this._borderWidth + this._space),\n      this._viewHeight - 2 * (this._borderWidth + this._space));\n\n    // Draw text.\n    this._ctx.fillStyle = this._textColor;\n    this._ctx.beginPath();\n    this._ctx.textAlign = 'center';\n    this._ctx.font = '40px Arial';\n    this._ctx.fillText(this._textValue, this._viewWidth / 2, this._viewHeight - 35);\n    this._ctx.closePath();\n\n    this._ctx.restore();\n  }\n\n  set textValue(s) {\n    this._textValue = s;\n    this._isWaveOn = true;\n  }\n\n  set textColor(s) {\n    this._textColor = s;\n  }\n\n  set textBgColor(s) {\n    this._textBgColor = s;\n  }\n\n  set bgColor(s) {\n    this._bgColor = s;\n  }\n\n  set borderColor(s) {\n    this._borderColor = s;\n  }\n\n  set waveColor(s) {\n    this._waveColor = s;\n  }\n}\n","\nimport Utility from './utility';\nimport BaseComponent from './base-component';\nimport { COLOR } from './color';\n\nexport default class SpeedCircle extends BaseComponent {\n\n  constructor(canvas, options) {\n    super(canvas, options, 0, 0, 200, 200);\n\n    this._font = '25px Arial';\n    this._degree1 = 0;\n    this._degree2 = 0;\n    this._degree3 = 0;\n    this._degree4 = 0;\n  }\n\n  setOptions(options = {}) {\n    const c1 = options.circle1 || {};\n    const c2 = options.circle2 || {};\n    const c3 = options.circle3 || {};\n    const c4 = options.circle4 || {};\n    const text = options.text || {};\n\n    this._speed1 = c1.speed || 0.5;\n    this._color1 = c1.color || COLOR.red;\n\n    this._speed2 = c2.speed || -0.5;\n    this._color2 = c2.color || COLOR.yellow;\n\n    this._speed3 = c3.speed || 0.5;\n    this._color3 = c3.color || COLOR.blue;\n\n    this._speed4 = c4.speed || -0.5;\n    this._color4 = c4.color || COLOR.grey;\n\n    this._textColor = text.color || COLOR.green;\n    this._textValue = text.value || '';\n  }\n\n  drawObject() {\n    this._degree1 = Utility.getNextAngleByDegree(this._degree1, this._speed1);\n    this._degree2 = Utility.getNextAngleByDegree(this._degree2, this._speed2);\n    this._degree3 = Utility.getNextAngleByDegree(this._degree3, this._speed3);\n    this._degree4 = Utility.getNextAngleByDegree(this._degree4, this._speed4);\n\n    const a1 = Utility.getAngleByDegree(this._degree1);\n    const a2 = Utility.getAngleByDegree(this._degree2);\n    const a3 = Utility.getAngleByDegree(this._degree3);\n    const a4 = Utility.getAngleByDegree(this._degree4);\n\n    this.clear();\n    this._ctx.save();\n    this.scale();\n    this._ctx.translate(100, 100);\n    this._ctx.rotate(a1);\n    // Draw bar circle 1.\n    this._ctx.strokeStyle = this._color1;\n    this._ctx.lineWidth = 8;\n    let space = 0.02;\n    let len = 0.5;\n    let start = 0;\n    let end = len;\n\n    for (let i = 0; i < 6; i++) {\n      this._ctx.beginPath();\n      this._ctx.arc(0, 0, 90, Math.PI * start, Math.PI * end);\n      this._ctx.stroke();\n      this._ctx.closePath();\n\n      start = end + space;\n      len /= 1.7;\n      end = start + len;\n    }\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    this._ctx.translate(100, 100);\n    this._ctx.rotate(a3);\n\n    // Draw dot circle 3.\n    this._ctx.fillStyle = this._color3;\n    for (let i = 0; i < 360; i = i + 9) {\n      let a = Utility.getAngleByDegree(i);\n\n      let x = 64 * Math.cos(a);\n      let y = 64 * Math.sin(a);\n\n      this._ctx.beginPath();\n      this._ctx.arc(x, y, 3, 0, Math.PI * 2);\n      this._ctx.closePath();\n      this._ctx.fill();\n    }\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    this._ctx.translate(100, 100);\n    this._ctx.rotate(a2);\n\n    // Draw bar circle 2.\n    this._ctx.lineWidth = 6;\n    this._ctx.strokeStyle = this._color2;\n    for (let i = 0; i < 360; i = i + 8) {\n      let a = Utility.getAngleByDegree(i);\n\n      const x1 = 70 * Math.cos(a);\n      const y1 = 70 * Math.sin(a);\n\n      let x2 = 83 * Math.cos(a);\n      let y2 = 83 * Math.sin(a);\n\n      this._ctx.beginPath();\n      this._ctx.moveTo(x1, y1);\n      this._ctx.lineTo(x2, y2);\n      this._ctx.closePath();\n      this._ctx.stroke();\n    }\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    this._ctx.translate(100, 100);\n    this._ctx.rotate(a4);\n\n    // Draw bar circle 4.\n    this._ctx.lineWidth = 5;\n    this._ctx.strokeStyle = this._color4;\n    len = (2 - (12 * space)) / 12;\n    start = 0;\n    end = len;\n    for (let i = 0; i < 12; i++) {\n      this._ctx.beginPath();\n      this._ctx.arc(0, 0, 56, Math.PI * start, Math.PI * end);\n      this._ctx.stroke();\n      this._ctx.closePath();\n      start = end + space;\n      end = start + len;\n    }\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    // Draw the text in the middle.\n    this._ctx.font = this._font;\n    this._ctx.textAlign = 'center';\n    this._ctx.fillStyle = this._textColor;\n    this._ctx.fillText(this._textValue, 100, 110);\n    this._ctx.restore();\n  }\n\n  set speed(n) {\n    this._speed = n;\n  }\n\n  set color1(s) {\n    this._color1 = s;\n  }\n\n  set color2(s) {\n    this._color2 = s;\n  }\n\n  set color3(s) {\n    this._color3 = s;\n  }\n\n  set color4(s) {\n    this._color4 = s;\n  }\n\n  set textColor(s) {\n    this._textColor = s;\n  }\n\n  set textValue(s) {\n    this._textValue = s;\n  }\n}\n","\nimport { COLOR } from './color';\nimport Utility from './utility';\nimport BaseComponent from './base-component';\n\n/**\n * Allow override width\n * default view height 100\n */\nexport default class TextMeter extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewWidth = options.viewWidth || 200;\n\n    super(canvas, options, 0, 0, viewWidth, 100);\n\n    this._lineWidth = 5;\n    this._arrowWidth = 30;\n    this._pctHeight = 30;\n    this._actualPctHeight = this._pctHeight - this._lineWidth / 2;\n    this._meterWidth = this._viewWidth - 2 * this._arrowWidth;\n    this._meterHeight = 100 - this._pctHeight - this._lineWidth / 2;\n    this._middleBarHeight = this._meterHeight / 2 + this._pctHeight;\n\n    this._barX = (this._percentageValue / 100) * this._meterWidth + this._arrowWidth;\n    this._nextBarX = this._barX;\n\n    this._arrow = null;\n    this._arrowSpeed = 0.6;\n    this._leftArrowX = -5;\n    this._rightArrowX = this._viewWidth + 5;\n  }\n\n  setOptions(options = {}) {\n    const bar = options.bar || {};\n    const marker = options.marker || {};\n\n    this._percentageValue = marker.value || 0;\n    this._displayValue = marker.displayValue || '';\n    this._percentageBgColor = marker.bgColor || COLOR.black;\n    this._markerFontColor = marker.fontColor || COLOR.white;\n\n    this._speed = bar.speed || 5;\n    this._fillColor = bar.fillColor || COLOR.red;\n    this._bgColor = bar.bgColor || COLOR.lightGrey;\n    this._lineColor = bar.borderColor || COLOR.lightGreen;\n\n    this._arrowColor = options.arrowColor || COLOR.blue;\n  }\n\n  drawObject() {\n    this._ctx.textAlign = 'center';\n\n    this.clear();\n    this._ctx.save();\n    this.scale();\n    this._ctx.globalCompositeOperation = 'destination-over';\n\n    // Draw left half text\n    this._ctx.beginPath();\n    this._ctx.rect(this._arrowWidth, this._pctHeight, this._barX - this._arrowWidth, this._meterHeight);\n    this._ctx.clip();\n\n    this._ctx.fillStyle = this._bgColor;\n    this._ctx.font = '50px Arial';\n    this._ctx.fillText(this._displayValue, this._viewWidth / 2, 80);\n\n    this._ctx.fillStyle = this._fillColor;\n    this._ctx.fillRect(this._arrowWidth, this._pctHeight, this._barX - this._arrowWidth, this._meterHeight);\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    this._ctx.globalCompositeOperation = 'destination-over';\n\n    // Draw right half text\n    this._ctx.beginPath();\n    this._ctx.rect(this._barX, this._pctHeight, this._viewWidth - this._barX - this._arrowWidth, this._meterHeight);\n    this._ctx.clip();\n\n    this._ctx.fillStyle = this._fillColor;\n    this._ctx.font = '50px Arial';\n    this._ctx.fillText(this._displayValue, this._viewWidth / 2, 80);\n\n    this._ctx.fillStyle = this._bgColor;\n    this._ctx.fillRect(this._barX, this._pctHeight, this._viewWidth - this._barX - this._arrowWidth, this._meterHeight);\n\n    this._ctx.restore();\n    this._ctx.save();\n    this.scale();\n    this._ctx.globalCompositeOperation = 'source-over';\n\n    // Draw the border.\n    this._ctx.lineWidth = this._lineWidth;\n    this._ctx.strokeStyle = this._lineColor;\n    this._ctx.beginPath();\n    this._ctx.rect(this._arrowWidth, this._pctHeight, this._meterWidth, this._meterHeight);\n    this._ctx.stroke();\n    this._ctx.closePath();\n\n    // Draw percentage value\n    this._ctx.fillStyle = this._percentageBgColor;\n\n    this._ctx.fillRect(this._barX - 25, 0, 50, this._actualPctHeight);\n    this._ctx.fillStyle = this._markerFontColor;\n    this._ctx.font = '16px Arial';\n    this._ctx.fillText(this._percentageValue + '%', this._barX, 20);\n\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._percentageBgColor;\n    this._ctx.moveTo(this._barX - 8, this._actualPctHeight - this._lineWidth / 2);\n    this._ctx.lineTo(this._barX, this._pctHeight + this._lineWidth / 2);\n    this._ctx.lineTo(this._barX + 8, this._actualPctHeight - this._lineWidth / 2);\n    this._ctx.fill();\n    this._ctx.closePath();\n\n    // Draw arrow.\n    if (this._arrow === null) {\n      this.drawLeftArrow();\n      this.drawRightArrow();\n    } else if (this._arrow === 'left') {\n      this.drawLeftArrow();\n    } else {\n      // right\n      this.drawRightArrow();\n    }\n\n    this._ctx.restore();\n\n    // Calculate next position barX\n    this._barX = Utility.getNextPos(this._barX, this._nextBarX, this._speed);\n  }\n\n  drawLeftArrow() {\n    if (this._leftArrowX <= 0) {\n      this._leftArrowX = this._arrowWidth - 3;\n    } else {\n      this._leftArrowX = Utility.getNextPos(this._leftArrowX, 0, -this._arrowSpeed);\n    }\n\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._arrowColor;\n    this._ctx.moveTo(this._leftArrowX, this._actualPctHeight + 10);\n    this._ctx.lineTo(this._leftArrowX - 20, this._middleBarHeight);\n    this._ctx.lineTo(this._leftArrowX, 90);\n    this._ctx.fill();\n    this._ctx.closePath();\n  }\n\n  drawRightArrow() {\n    if (this._rightArrowX >= this._viewWidth) {\n      this._rightArrowX = this._arrowWidth + 3 + this._meterWidth;\n    } else {\n      this._rightArrowX = Utility.getNextPos(this._rightArrowX, this._viewWidth, this._arrowSpeed);\n    }\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._arrowColor;\n    this._ctx.moveTo(this._rightArrowX, this._actualPctHeight + 10);\n    this._ctx.lineTo(this._rightArrowX + 20, this._middleBarHeight);\n    this._ctx.lineTo(this._rightArrowX, 90);\n    this._ctx.fill();\n    this._ctx.closePath();\n  }\n\n  set percentageValue(value) {\n    if (value >= 0 || value <= 100) {\n      if (value < this._percentageValue) {\n        this._speed = -Math.abs(this._speed);\n        this._arrow = 'left';\n      } else if (value > this._percentageValue) {\n        this._speed = Math.abs(this._speed);\n        this._arrow = 'right';\n      } else {\n        this._arrow = null;\n      }\n      this._percentageValue = Math.floor(value);\n      this._nextBarX = (this._percentageValue / 100) * this._meterWidth + this._arrowWidth;\n    }\n  }\n\n  set displayValue(s) {\n    this._displayValue = s;\n  }\n\n  set speed(n) {\n    this._speed = n;\n  }\n\n  set fillColor(s) {\n    this._fillColor = s;\n  }\n\n  set bgColor(s) {\n    this._bgColor = s;\n  }\n\n  set lineColor(s) {\n    this._lineColor = s;\n  }\n\n  set arrowColor(s) {\n    this._arrowColor = s;\n  }\n\n  set percentageBgColor(s) {\n    this._percentageBgColor = s;\n  }\n}\n","\nexport default class DigitalNumber {\n\n  constructor(canvasCtx, barWidth, numberWidth, numberHeight, dashColor, numberColor) {\n    this._ctx = canvasCtx;\n    this._barWidth = barWidth;\n    this._verBarHeight = (numberHeight - 3 * barWidth) / 2;\n    this._horBarHeight = numberWidth - 2 * barWidth;\n    this._dashColor = dashColor;\n    this._numberColor = numberColor;\n  }\n\n  drawEmpty() {\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._dashColor;\n    this._ctx.moveTo(0, 0);\n    this.topLeft();\n    this.bottomLeft();\n    this.topRight();\n    this.bottomRight();\n    this.top();\n    this.middle();\n    this.bottom();\n    this._ctx.closePath();\n  }\n\n  // Vertical: top left\n  topLeft() {\n    this._ctx.fillRect(0, this._barWidth, this._barWidth, this._verBarHeight);\n  }\n\n  // Vertical: bottom left\n  bottomLeft() {\n    this._ctx.fillRect(0, this._barWidth * 2 + this._verBarHeight, this._barWidth, this._verBarHeight);\n  }\n\n  // Vertial: top right\n  topRight() {\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth, this._barWidth, this._verBarHeight);\n  }\n\n  // Vertial: bottom right\n  bottomRight() {\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth * 2 + this._verBarHeight,\n      this._barWidth, this._verBarHeight);\n  }\n\n  // Horizontal: top\n  top() {\n    this._ctx.fillRect(this._barWidth, 0, this._horBarHeight, this._barWidth);\n  }\n  // Horizontal: middle\n  middle() {\n    this._ctx.fillRect(this._barWidth, this._barWidth + this._verBarHeight, this._horBarHeight, this._barWidth);\n  }\n\n  // Horizontal: bottom\n  bottom() {\n    this._ctx.fillRect(this._barWidth, this._barWidth * 2 + this._verBarHeight * 2, this._horBarHeight, this._barWidth);\n  }\n\n  drawNumber(number) {\n    this.drawEmpty();\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._numberColor;\n\n    switch (number) {\n      case 0:\n        this.top();\n        this.bottom();\n        this.topLeft();\n        this.topRight();\n        this.bottomLeft();\n        this.bottomRight();\n        break;\n      case 1:\n        this.topRight();\n        this.bottomRight();\n        break;\n      case 2:\n        this.top();\n        this.topRight();\n        this.middle();\n        this.bottomLeft();\n        this.bottom();\n        break;\n      case 3:\n        this.top();\n        this.middle();\n        this.bottom();\n        this.topRight();\n        this.bottomRight();\n        break;\n      case 4:\n        this.middle();\n        this.topLeft();\n        this.topRight();\n        this.bottomRight();\n        break;\n      case 5:\n        this.top();\n        this.middle();\n        this.bottom();\n        this.topLeft();\n        this.bottomRight();\n        break;\n      case 6:\n        this.top();\n        this.middle();\n        this.bottom();\n        this.topLeft();\n        this.bottomLeft();\n        this.bottomRight();\n        break;\n      case 7:\n        this.top();\n        this.topRight();\n        this.bottomRight();\n        break;\n      case 8:\n        this.topLeft();\n        this.bottomLeft();\n        this.topRight();\n        this.bottomRight();\n        this.top();\n        this.middle();\n        this.bottom();\n        break;\n      case 9:\n        this.top();\n        this.middle();\n        this.topLeft();\n        this.topRight();\n        this.bottomRight();\n        break;\n    }\n    this._ctx.closePath();\n  }\n}\n","import BaseCanvas from './base-canvas';\nimport DigitalNumber from './digital-number';\n\nexport default class StopWatch extends BaseCanvas {\n\n  constructor(baseDiv, options) {\n    super(baseDiv, 500, 100);\n\n    this._digitalNumber = new DigitalNumber(this._ctx, 8, 50, 100, 'white', 'green');\n    this._millisNumber = new DigitalNumber(this._ctx, 4, 25, 50, 'white', 'red');\n\n    this._lastTime = Date.now();\n    this._elapsedTime = 0;\n  }\n\n  postConstructor() {\n  }\n\n  start() {\n    this._lastTime = Date.now();\n    this._elapsedTime = 0;\n    this._state = 'START';\n    this.startAnimation();\n  }\n\n  stop() {\n    this._state = 'STOP';\n    this.stopAnimation();\n  }\n\n  resume() {\n    this._state = 'RESUME';\n    this.startAnimation();\n  }\n\n  reset() {\n    this._state = 'RESET';\n    this.stopAnimation();\n    // Draw one frame to reset everything to 0.\n    this.drawFrame();\n    this._lastTime = Date.now();\n    this._elapsedTime = 0;\n  }\n\n  drawFrame() {\n    let now = Date.now();\n\n    if (this._state === 'RESUME') {\n      this._state = 'START';\n    } else {\n      this._elapsedTime += (Date.now() - this._lastTime);\n    }\n    this._lastTime = now;\n\n    let second = 0;\n    let millis = 0;\n    let sec = 0;\n    let min = 0;\n    let hour = 0;\n\n    if (this._state !== 'RESET') {\n      second = Math.floor(this._elapsedTime / 1000);\n      millis = parseInt(this._elapsedTime.toString().slice(-2), 10);\n      sec = Math.floor(second % 60);\n      min = Math.floor((second % 3600) / 60);\n      hour = Math.floor(second / 3600);\n    }\n\n    this.clearAll();\n    this._ctx.save();\n    this.scale();\n\n    this.drawTwoDigits(this._digitalNumber, hour, 60);\n    this.drawTwoDigits(this._digitalNumber, min, 60);\n    this.drawTwoDigits(this._digitalNumber, sec, 60);\n\n    this._ctx.translate(0, 50);\n    this.drawTwoDigits(this._millisNumber, millis, 30);\n\n    this._ctx.restore();\n  }\n\n  drawTwoDigits(digitalNumber, time, space) {\n    if (time < 10) {\n      digitalNumber.drawNumber(0);\n      this._ctx.translate(space, 0);\n      digitalNumber.drawNumber(time);\n      this._ctx.translate(space, 0);\n    } else {\n      let left = Math.floor(time / 10);\n      let right = time % 10;\n\n      digitalNumber.drawNumber(left);\n      this._ctx.translate(space, 0);\n      digitalNumber.drawNumber(right);\n      this._ctx.translate(space, 0);\n    }\n  }\n}\n","import BaseCanvas from './base-canvas';\nimport { COLOR } from './color';\nimport Utility from './utility';\n\nexport default class RoundGauge extends BaseCanvas {\n\n  constructor(baseDiv, options) {\n    super(baseDiv, 200, 200);\n\n    this._startValue = Utility.has(options, 'startValue') ? options.startValue : 0;\n    this._endValue = Utility.has(options, 'endValue') ? options.endValue : 100;\n    this._startDegree = Utility.has(options, 'startDegree') ? options.startDegree : 180;\n    this._endDegree = Utility.has(options, 'endDegree') ? options.endDegree : 360;\n    this._isHandArrow = Utility.has(options, 'isHandArrow') ? options.isHandArrow : false;\n    this._isPercentage = Utility.has(options, 'isPercentage') ? options.isPercentage : false;\n    this._value = Utility.has(options, 'value') ? options.value : 0;\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : COLOR.green;\n    this._handColor = Utility.has(options, 'handColor') ? options.handColor : COLOR.red;\n    this._fontColor = Utility.has(options, 'fontColor') ? options.fontColor : COLOR.balck;\n    this._valueFont = Utility.has(options, 'valueFont') ? options.valueFont : '20px Arial';\n\n    this._value = this._isPercentage ? Math.floor(this._value / (this._endValue - this._startValue)) +\n      '%' : this._value;\n    this._scaleFont = '12px Arial';\n    this._startAngle = Utility.getAngleByDegree(this._startDegree);\n    this._endAngle = Utility.getAngleByDegree(this._endDegree);\n    this._speed = 3;\n    this._currDegree = 0;\n    this._targetDegree = this.valueToDegree(this._value);\n  }\n\n  set value(value) {\n    this._targetDegree = this.valueToDegree(value);\n    let speed = Math.abs(this._speed);\n\n    this._speed = this._targetDegree > this._currDegree ? speed : -speed;\n    this._value = this._isPercentage ? this.valueToPct(value) + '%' : value;\n  }\n\n  valueToPct(value) {\n    return Math.floor(value / (this._endValue - this._startValue) * 100);\n  }\n\n  valueToDegree(value) {\n    return (value / (this._endValue - this._startValue) * (this._endDegree - this._startDegree)) + this._startDegree;\n  }\n\n  degreeToValue(degree) {\n    return Math.floor((degree - this._startDegree) / (this._endDegree - this._startDegree) *\n      (this._endValue - this._startValue));\n  }\n\n  drawFrame() {\n    this._ctx.textAlign = 'center';\n\n    if ((this._speed > 0 && this._currDegree < this._targetDegree) ||\n        (this._speed < 0 && this._currDegree > this._targetDegree)) {\n      this._currDegree += this._speed;\n    } else if ((this._speed > 0 && this._currDegree >= this._targetDegree) ||\n        (this._speed < 0 && this._currDegree <= this._targetDegree)) {\n      this._currDegree = this._targetDegree;\n    }\n\n    let angle = Utility.getAngleByDegree(this._currDegree);\n\n    this.clearAll();\n    this._ctx.save();\n    this.scale();\n\n    this._ctx.fillStyle = this._fontColor;\n    this._ctx.font = this._valueFont;\n    this._ctx.fillText(this._value, 100, 100);\n\n    this._ctx.translate(100, 100);\n\n    // Draw scales\n    this._ctx.strokeStyle = this._lineColor;\n    this._ctx.lineWidth = 1;\n    for (let i = this._startDegree; i <= this._endDegree; i = i + 6) {\n      let a = Utility.getAngleByDegree(i);\n\n      let r = 66;\n\n      if (i % 30 === 0) {\n        r = 61;\n        let x = 90 * Math.cos(a);\n        let y = 90 * Math.sin(a) + 3;\n        let scaleValue = this._isPercentage ? this.valueToPct(this.degreeToValue(i)) : this.degreeToValue(i);\n\n        this._ctx.fillStyle = this._lineColor;\n        this._ctx.font = this._scaleFont;\n        this._ctx.fillText(scaleValue, x, y);\n      }\n\n      let x1 = r * Math.cos(a);\n      let y1 = r * Math.sin(a);\n\n      let x2 = 78 * Math.cos(a);\n      let y2 = 78 * Math.sin(a);\n\n      this._ctx.beginPath();\n      this._ctx.moveTo(x1, y1);\n      this._ctx.lineTo(x2, y2);\n      this._ctx.closePath();\n      this._ctx.stroke();\n    }\n\n    // Draw the circle\n    this._ctx.beginPath();\n    this._ctx.lineWidth = 8;\n    this._ctx.arc(0, 0, 75, this._startAngle, this._endAngle);\n    this._ctx.stroke();\n\n    // Draw the hand\n    this._ctx.rotate(angle);\n\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._handColor;\n    if (this._isHandArrow) {\n      this._ctx.moveTo(51, -10);\n      this._ctx.lineTo(71, 0);\n      this._ctx.lineTo(51, 10);\n      this._ctx.fill();\n    } else {\n      this._ctx.fillRect(51, -4, 20, 6);\n    }\n\n    this._ctx.closePath();\n\n    this._ctx.restore();\n  }\n}\n\n","import BaseCanvas from './base-canvas';\nimport Utility from './utility';\n\nexport default class RoundRadar extends BaseCanvas {\n\n  constructor(baseDiv, options) {\n    super(baseDiv, 200, 200);\n\n    this._speed = Utility.has(options, 'speed') ? options.speed : 2;\n    this._bgColor = Utility.has(options, 'bgColor') ? options.bgColor : 'rgba(0, 0, 0, 0.03)';\n    this._gridColor = Utility.has(options, 'gridColor') ? options.gridColor : 'rgba(0, 255, 0, 0.02)';\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : 'rgba(0, 255, 0, 1)';\n    this._targetColor = Utility.has(options, 'targetColor') ? options.targetColor : 'rgba(255, 0, 0, 0.5)';\n\n    this._hasGrid = true;\n    this._lastTime = 0;\n    this._targets = [];\n  }\n\n  addTarget(id, x, y, radius) {\n    let t = {\n      id: id,\n      x: Utility.isDefined(x) ? x : Utility.getRandomInt(0, 50),\n      y: Utility.isDefined(y) ? y : Utility.getRandomInt(0, 50),\n      radius: Utility.isDefined(radius) ? radius : 5\n    };\n\n    this._targets.push(t);\n  }\n\n  removeTarget(id) {\n    let index = -1;\n\n    for (let i = 0; i < this._targets.length; i++) {\n      let t = this._targets[i];\n\n      if (t.id === id) {\n        index = i;\n        break;\n      }\n    }\n\n    if (index !== -1) {\n      this._targets.splice(index, 1);\n    }\n  }\n\n  clearAllTargets() {\n    this._targets = [];\n  }\n\n  drawFrame() {\n    let now = new Date();\n    let angle = Utility.getAngleByDate(this._speed, now);\n\n    this._ctx.fillStyle = this._bgColor;\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\n    this._ctx.save();\n    this.scale();\n\n    // Draw grid\n    if (this._hasGrid) {\n      this._ctx.strokeStyle = this._gridColor;\n      this._ctx.lineWidth = 1;\n      for (let i = 0; i <= 20; i++) {\n        this._ctx.beginPath();\n        this._ctx.moveTo(i * 10, 0);\n        this._ctx.lineTo(i * 10, 200);\n        this._ctx.closePath();\n        this._ctx.stroke();\n      }\n\n      for (let i = 0; i <= 20; i++) {\n        this._ctx.beginPath();\n        this._ctx.moveTo(0, i * 10);\n        this._ctx.lineTo(200, i * 10);\n        this._ctx.closePath();\n        this._ctx.stroke();\n      }\n    }\n\n    this._ctx.translate(100, 100);\n\n    // Draw circles\n    this._ctx.lineWidth = 1;\n    this._ctx.strokeStyle = this._lineColor;\n    for (let i = 1; i <= 4; i++) {\n      if (i === 4) {\n        this._ctx.lineWidth = 2;\n      }\n      this._ctx.beginPath();\n      this._ctx.arc(0, 0, i * 20, 0, Math.PI * 2);\n      this._ctx.closePath();\n      this._ctx.stroke();\n    }\n\n    // Draw lines\n    this._ctx.lineWidth = 1;\n    this._ctx.beginPath();\n    this._ctx.moveTo(-80, 0);\n    this._ctx.lineTo(80, 0);\n    this._ctx.closePath();\n    this._ctx.stroke();\n\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, -80);\n    this._ctx.lineTo(0, 80);\n    this._ctx.closePath();\n    this._ctx.stroke();\n\n    // Draw scales\n    this._ctx.lineWidth = 1;\n    for (let i = 0; i < 360; i = i + 6) {\n      let a = Utility.getAngleByDegree(i);\n\n      let r = 77;\n\n      if (i % 30 === 0) {\n        r = 74;\n      }\n\n      let x1 = r * Math.cos(a);\n      let y1 = r * Math.sin(a);\n\n      let x2 = 80 * Math.cos(a);\n      let y2 = 80 * Math.sin(a);\n\n      this._ctx.beginPath();\n      this._ctx.moveTo(x1, y1);\n      this._ctx.lineTo(x2, y2);\n      this._ctx.closePath();\n      this._ctx.stroke();\n    }\n\n    // Draw Targets\n    if (now.getTime() - this._lastTime < 500) {\n      this._ctx.fillStyle = this._targetColor;\n      for (let i = 0; i < this._targets.length; i++) {\n        let t = this._targets[i];\n\n        this._ctx.beginPath();\n        this._ctx.arc(t.x, t.y, t.radius, 0, Math.PI * 2);\n        this._ctx.closePath();\n        this._ctx.fill();\n      }\n    } else if (now.getTime() - this._lastTime < 1000) {\n      // Don't display\n    } else {\n      this._lastTime = now.getTime();\n    }\n\n    // Draw the radar wave\n    this._ctx.rotate(angle);\n    this._ctx.fillStyle = this._lineColor;\n\n    this._ctx.beginPath();\n    this._ctx.fillRect(0, -1, 80, 2);\n    this._ctx.closePath();\n\n    this._ctx.restore();\n  }\n}\n\n","import { COLOR } from './color';\nimport BaseComponent from './base-component';\n\n/**\n * flexiable width, height\n */\nexport default class MessageQueue extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewWidth = options.viewWidth || 100;\n    const viewHeight = options.viewHeight || 200;\n\n    super(canvas, options, 0, 0, viewWidth, viewHeight);\n\n    this._queue = [];\n    this._arcWidth = 10;\n  }\n\n  setOptions(options = {}) {\n    this._barHeight = options.barHeight || 20;\n    this._speed = options.speed || 5;\n    this._space = options.space || 5;\n    this._maxQueueCapacity = options.maxQueueCapacity || 20;\n  }\n\n  drawObject() {\n    this.clear();\n    this._ctx.save();\n    this.scale();\n\n    // Bars can be seen in the view\n    const bars = Math.floor(this._viewHeight / (this._barHeight + this._space));\n    const drawQueueSize = Math.min(this._queue.length, bars);\n\n    for (let i = 0; i < drawQueueSize; i++) {\n      let q = this._queue[i];\n\n      let currY = (this._barHeight + this._space) * i + this._space;\n\n      // Move up\n      if (currY < q.y) {\n        q.y -= this._speed;\n      } else {\n        q.y = currY;\n      }\n\n      this._ctx.beginPath();\n      this._ctx.fillStyle = q.color;\n      this._ctx.fillRect(q.x, q.y, this._viewWidth - 2 * (this._arcWidth + q.space), this._barHeight);\n      this._ctx.closePath();\n      this._ctx.beginPath();\n      this._ctx.moveTo(q.x, q.y);\n      this._ctx.quadraticCurveTo(q.x - this._arcWidth, q.y + this._barHeight / 2, q.x, q.y + this._barHeight);\n      this._ctx.fill();\n      this._ctx.closePath();\n      this._ctx.beginPath();\n      this._ctx.moveTo(this._viewWidth - this._arcWidth - q.space, q.y);\n      this._ctx.quadraticCurveTo(this._viewWidth - q.space, q.y + this._barHeight / 2,\n        this._viewWidth - this._arcWidth - q.space, q.y + this._barHeight);\n      this._ctx.fill();\n      this._ctx.closePath();\n    }\n\n    this._ctx.restore();\n  }\n\n  push(param = {}) {\n    const barColor = param.color || COLOR.blue;\n    const barSpace = param.space || 0;\n\n    if (this._queue.length >= this._maxQueueCapacity) {\n      this.pop();\n    }\n\n    this._queue.push({\n      x: this._arcWidth + barSpace,\n      y: this._viewHeight + this._barHeight,\n      color: barColor,\n      space: barSpace\n    });\n  }\n\n  pop() {\n    if (this._queue.length > 0) {\n      this._queue.shift();\n    }\n  }\n\n  get queueSize() {\n    return this._queue.length;\n  }\n}\n\n","import Utility from './utility';\nimport { COLOR } from './color';\nimport BaseComponent from './base-component';\n\n/**\n * Allow override width\n * view height: 100\n */\nexport default class Heartbeat extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewWidth = options.viewWidth || 200;\n\n    super(canvas, options, 0, 0, viewWidth, 100);\n\n    this._queue = [];\n    this._lastSec = 0;\n    this._timer = null;\n  }\n\n  setOptions(options = {}) {\n    this._speed = options.speed || 2;\n    this._fontColor = options.fontColor || COLOR.black;\n    this._maxQueueCapacity = options.maxQueueCapacity || 30;\n  }\n\n  postConstructor() {\n    super.postConstructor();\n    // Start drawing the seconds\n    this.drawSeconds();\n  }\n\n  destroy() {\n    if (this._timer != null) {\n      clearInterval(this._timer);\n    }\n    super.destroy();\n  }\n\n  beat(params = {}) {\n    const beatColor = params.color || COLOR.green;\n    const beatSpace = params.space || 0;\n\n    if (this._queue.length >= this._maxQueueCapacity) {\n      this._queue.shift();\n    }\n    this._queue.push({\n      time: null,\n      x: -30,\n      color: beatColor,\n      space: beatSpace\n    });\n  }\n\n  drawSeconds() {\n    this._timer = setInterval(() => {\n      if (this._queue.length >= this._maxQueueCapacity) {\n        this._queue.shift();\n      }\n\n      let now = new Date();\n      let currSec = Utility.leftPadZero(now.getMinutes()) + ':' + Utility.leftPadZero(now.getSeconds());\n\n      if (currSec !== this._lastSec) {\n        this._queue.push({ time: currSec, x: -30});\n        this._lastSec = currSec;\n      }\n    }, 1000);\n  }\n\n  drawObject() {\n    this._ctx.textAlign = 'center';\n    this._ctx.font = '12px Arial';\n\n    this.clear();\n    this._ctx.save();\n    this.scale();\n\n    // Draw the horizontal line\n    this._ctx.fillStyle = this._fontColor;\n    this._ctx.fillRect(0, 50, this._viewWidth, 2);\n\n    // Draw the pulse\n    for (let i = 0; i < this._queue.length; i++) {\n      let q = this._queue[i];\n\n      if (q.time != null) {\n        this._ctx.fillStyle = this._fontColor;\n        this._ctx.fillText(q.time, q.x, 90);\n        this._ctx.beginPath();\n        this._ctx.fillStyle = this._fontColor;\n        this._ctx.fillRect(q.x - 1, 45, 2, 12);\n        this._ctx.closePath();\n      } else {\n        this._ctx.fillStyle = q.color;\n        this._ctx.beginPath();\n        this._ctx.moveTo(q.x - 10, 50);\n        this._ctx.quadraticCurveTo(q.x - 5, -20 + q.space * 2, q.x, 50);\n        this._ctx.quadraticCurveTo(q.x + 5, 100 - q.space * 1, q.x + 10, 50);\n        this._ctx.closePath();\n        this._ctx.fill();\n      }\n      q.x += this._speed;\n    }\n\n    this._ctx.restore();\n  }\n\n  set fontColor(s) {\n    this._fontColor = s;\n  }\n\n  set maxQueueCapacity(n) {\n    this._maxQueueCapacity = n;\n  }\n\n  get maxQueueCapacity() {\n    return this._maxQueueCapacity;\n  }\n}\n\n","\nimport BaseComponent from './base-component';\nimport { COLOR } from './color';\nimport Utility from './utility';\n\nexport default class VolumeMeter extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewHeight = options.viewWidth || 200;\n\n    super(canvas, options, 0, 0, 100, viewHeight);\n\n    this._lineWidth = 3;\n    this._numberHeight = 20;\n    this._minMax = 'min';\n    this._meterWidth = this._viewWidth / 2;\n    this._meterHeight = this._viewHeight - 2 * this._numberHeight;\n    this._numberStart = (this._viewWidth - this._meterWidth - this._lineWidth) / 2;\n    // Used only if the value is out of range.\n    this._actualValue = 0;\n\n    this._barY = this._viewHeight - (((this._value - this._minValue) /\n      (this._maxValue - this._minValue)) * this._meterHeight) - this._numberHeight;\n    this._nextBarY = this._barY;\n\n    // TODO: move this blink function to base component?\n    this._lastBlink = 0;\n    this.drawMarker = this.drawMarker.bind(this);\n    this.drawMin = this.drawMin.bind(this);\n    this.drawMax = this.drawMax.bind(this);\n  }\n\n  /**\n   * @param {*} options\n   */\n  setOptions(options = {}) {\n    const min = options.min || {};\n    const max = options.max || {};\n    const bar = options.bar || {};\n    const marker = options.markder || {};\n\n    this._minFontColor = min.fontColor || COLOR.white;\n    this._minValue = min.value || 0;\n    this._minBgColor = min.bgColor || COLOR.red;\n\n    this._maxFontColor = max.fontColor || COLOR.white;\n    this._maxValue = max.value || 100;\n    this._maxBgColor = max.bgColor || COLOR.blue;\n\n    this._barBorderColor = bar.borderColor || COLOR.black;\n    this._barFillColor = bar.fillColor || COLOR.green;\n    this._isGraident = bar.graident || false;\n    this._speed = bar.speed || 5;\n\n    this._markerBgColor = marker.bgColor || COLOR.yellow;\n    this._markerFontColor = marker.fontColor || COLOR.white;\n\n    this._value = options.value || 0;\n  }\n\n  drawObject() {\n    this.clear();\n    this._ctx.save();\n    this.scale();\n\n    // Handle graident fill color.\n    if (this._isGraident) {\n      const graident = this._ctx.createLinearGradient(this._viewWidth / 2, this._barY,\n        this._viewWidth / 2, this._meterHeight + this._numberHeight);\n\n      graident.addColorStop(0, this._barFillColor);\n      graident.addColorStop(1, 'white');\n      this._ctx.fillStyle = graident;\n    } else {\n      this._ctx.fillStyle = this._barFillColor;\n    }\n\n    // Draw the filled part.\n    this._ctx.beginPath();\n    this._ctx.fillRect((this._viewWidth - this._meterWidth) / 2, this._barY, this._meterWidth,\n      this._viewHeight - this._barY - this._numberHeight);\n    // this._ctx.fillRect(0, this._barY, 10, 10);\n    this._ctx.closePath();\n\n    // Draw the border.\n    this._ctx.beginPath();\n    this._ctx.lineWidth = this._lineWidth;\n    this._ctx.strokeStyle = this._barBorderColor;\n    this._ctx.rect((this._viewWidth - this._meterWidth) / 2, this._numberHeight, this._meterWidth, this._meterHeight);\n    this._ctx.stroke();\n    this._ctx.closePath();\n\n    // Draw value.\n    if (this._minMax === 'max') {\n      this.drawMin();\n      this.drawMarker();\n      this._lastBlink = this.blink(this.drawMax, this._lastBlink, 500);\n    } else if (this._minMax === 'min') {\n      this.drawMax();\n      this.drawMarker();\n      this._lastBlink = this.blink(this.drawMin, this._lastBlink, 500);\n    } else if (this._minMax === 'more' || this._minMax === 'less') {\n      this.drawMin();\n      this.drawMax();\n      this._lastBlink = this.blink(this.drawMarker, this._lastBlink, 500);\n    } else {\n      this.drawMin();\n      this.drawMax();\n      this.drawMarker();\n    }\n\n    this._ctx.restore();\n    // Calculate the Y value.\n    this._barY = Utility.getNextPos(this._barY, this._nextBarY, this._speed);\n  }\n\n  blink(blinkFunc, lastBlink, duration) {\n    const now = Date.now();\n\n    if (now - lastBlink < duration) {\n      blinkFunc.call();\n      return lastBlink;\n    } else if (now - lastBlink < (duration * 2)) {\n      return lastBlink;\n    }\n    return now;\n  }\n\n  drawMin() {\n    this._ctx.textAlign = 'center';\n    this._ctx.font = '15px Arial';\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._minBgColor;\n    this._ctx.fillRect(this._numberStart, this._viewHeight - this._numberHeight - this._lineWidth / 2,\n      this._meterWidth + this._lineWidth, this._numberHeight + this._lineWidth / 2);\n    this._ctx.fillStyle = this._minFontColor;\n    this._ctx.fillText(this._minValue, this._meterWidth,\n      this._meterHeight + this._numberHeight + 15);\n    this._ctx.closePath();\n  }\n\n  drawMax() {\n    this._ctx.textAlign = 'center';\n    this._ctx.font = '15px Arial';\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._maxBgColor;\n    this._ctx.fillRect(this._numberStart, 0, this._meterWidth + this._lineWidth,\n      this._numberHeight + this._lineWidth / 2);\n    this._ctx.fillStyle = this._maxFontColor;\n    this._ctx.fillText(this._maxValue, this._meterWidth, this._numberHeight - 4);\n    this._ctx.closePath();\n  }\n\n  drawMarker() {\n    this._ctx.beginPath();\n    this._ctx.font = '10px Arial';\n    this._ctx.fillStyle = this._markerBgColor;\n    // Draw value rect.\n    this._ctx.fillRect(this._numberStart + this._meterWidth + this._lineWidth,\n      this._barY - 8, (this._viewWidth - (this._numberStart + this._meterWidth + this._lineWidth)), 16);\n    // Draw value line.\n    this._ctx.fillRect(0, this._barY - this._lineWidth / 2,\n      this._numberStart + this._meterWidth + this._lineWidth, this._lineWidth);\n    this._ctx.fillStyle = this._markerFontColor;\n    const text = (this._minMax === 'more' || this._minMax === 'less') ? this._actualValue : this._value;\n\n    this._ctx.fillText(text, (this._viewWidth - this._meterWidth) / 4 * 3 + this._meterWidth, this._barY + 4);\n    this._ctx.stroke();\n    this._ctx.closePath();\n  }\n\n  set value(value) {\n    let n = value;\n\n    this._actualValue = n;\n\n    if (n > this._maxValue) {\n      this._minMax = 'more';\n      n = this._maxValue;\n    } else if (n < this._minValue) {\n      this._minMax = 'less';\n      n = this._minValue;\n    } else {\n      if (n === this._minValue) {\n        this._minMax = 'min';\n      } else if (n === this._maxValue) {\n        this._minMax = 'max';\n      } else {\n        this._minMax = 'normal';\n      }\n    }\n\n    this._speed = n < this._value ? Math.abs(this._speed) : -Math.abs(this._speed);\n    this._nextBarY = this._viewHeight - (((n - this._minValue) /\n      (this._maxValue - this._minValue)) * this._meterHeight) -\n      this._numberHeight;\n    this._value = n;\n  }\n}\n","import { COLOR } from './color';\nimport Utility from './utility';\nimport BaseComponent from './base-component';\n\nexport default class RoundFan extends BaseComponent {\n\n  constructor(canvas, options) {\n    super(canvas, options, 0, 0, 200, 200);\n\n    this._degree = 0;\n  }\n\n  setOptions(options = {}) {\n    const center = options.center || {};\n\n    this._fanColor = options.fanColor || COLOR.green;\n\n    this._centerColor = center.color || COLOR.blue;\n    this._centerBgColor = center.bgColor || COLOR.white;\n\n    this._speed = options.speed || 1;\n  }\n\n  drawObject() {\n    this._degree = Utility.getNextAngleByDegree(this._degree, this._speed);\n    const angle = Utility.getAngleByDegree(this._degree);\n\n    this.clear();\n    this._ctx.save();\n    this.scale();\n    this._ctx.translate(100, 100);\n    this._ctx.rotate(angle);\n\n    this._ctx.beginPath();\n    this._ctx.moveTo(0, 0);\n\n    // Up\n    this._ctx.quadraticCurveTo(-60, -80, 0, -90);\n    this._ctx.quadraticCurveTo(80, -100, 0, 0);\n\n    // Right\n    this._ctx.quadraticCurveTo(80, -60, 90, 0);\n    this._ctx.quadraticCurveTo(100, 80, 0, 0);\n\n    // Down\n    this._ctx.quadraticCurveTo(60, 80, 0, 90);\n    this._ctx.quadraticCurveTo(-80, 100, 0, 0);\n\n    // Left\n    this._ctx.quadraticCurveTo(-80, 60, -90, 0);\n    this._ctx.quadraticCurveTo(-100, -80, 0, 0);\n\n    this._ctx.fillStyle = this._fanColor;\n    this._ctx.fill();\n    this._ctx.closePath();\n\n    this._ctx.beginPath();\n    this._ctx.arc(0, 0, 35, 0, 2 * Math.PI);\n    this._ctx.fillStyle = this._centerBgColor;\n    this._ctx.fill();\n    this._ctx.closePath();\n\n    this._ctx.beginPath();\n    this._ctx.arc(0, 0, 30, 0, 2 * Math.PI);\n    this._ctx.fillStyle = this._centerColor;\n    this._ctx.fill();\n    this._ctx.closePath();\n\n    this._ctx.strokeStyle = this._centerColor;\n    this._ctx.beginPath();\n    this._ctx.arc(0, 0, 10, 0, 2 * Math.PI);\n    this._ctx.fillStyle = this._centerBgColor;\n    this._ctx.fill();\n    this._ctx.closePath();\n\n    this._ctx.restore();\n  }\n\n  set fanColor(s) {\n    this._fanColor = s;\n  }\n\n  set centerColor(s) {\n    this._centerColor = s;\n  }\n\n  set speed(n) {\n    this._speed = n;\n  }\n}\n","import BaseCanvas from './base-canvas';\nimport Utility from './utility';\nimport { COLOR } from './color';\n\nexport default class DigitalClock extends BaseCanvas {\n\n  constructor(baseDiv, options) {\n    super(baseDiv, 370, 100);\n\n    // Options\n    // Bar width\n    this._bw = Utility.has(options, 'barWidth') ? options.barWidth : 4;\n\n    // Bar height\n    this._bh = Utility.has(options, 'barHeight') ? options.barHeight : 20;\n\n    // Space between numbers\n    this._space = Utility.has(options, 'space') ? options.space : 10;\n    this._numberColor = Utility.has(options, 'numberColor') ? options.numberColor : COLOR.green;\n    this._dashColor = Utility.has(options, 'dashColor') ? options.dashColor : COLOR.grey;\n    this._hourOffset = Utility.has(options, 'hourOffset') ? options.hourOffset : 0;\n\n    this._timer = null;\n  }\n\n  postConstructor() {\n    this.tick();\n  }\n\n  destroy() {\n    this.stopTick();\n    super.destroy();\n  }\n\n  tick() {\n    if (this._timer == null) {\n      this._timer = setInterval(() => {\n        let now = Utility.addHour(this._hourOffset);\n\n        this.clearAll();\n        this._ctx.save();\n        this.scale();\n\n        this._ctx.translate(this._space, this._space);\n\n        // Draw hour.\n        this.drawTime(now.getHours());\n        this.drawInterpoint();\n\n        // Draw minute.\n        this.drawTime(now.getMinutes());\n        this.drawInterpoint();\n\n        // Draw second.\n        this.drawTime(now.getSeconds());\n\n        this._ctx.restore();\n      }, 1000);\n    }\n  }\n\n  stopTick() {\n    if (this._timer != null) {\n      clearInterval(this._timer);\n      this._timer = null;\n    }\n  }\n\n  drawInterpoint() {\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._numberColor;\n    this._ctx.fillRect(0, (this._bh * 2 + this._bw) / 3, this._bw, this._bw);\n    this._ctx.fillRect(0, (this._bh * 2 + this._bw) / 3 * 2 + this._bw, this._bw, this._bw);\n    this._ctx.translate(this._bw + this._space, 0);\n    this._ctx.closePath();\n  }\n\n  drawTime(t) {\n    if (t < 10) {\n      this.drawNumber(0);\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\n      this.drawNumber(t);\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\n    } else {\n      let d = Math.floor(t / 10);\n      let r = t % 10;\n\n      this.drawNumber(d);\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\n      this.drawNumber(r);\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\n    }\n  }\n\n  drawEmpty() {\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._dashColor;\n    this._ctx.moveTo(0, 0);\n    this.vTopLeft();\n    this.vBottomLeft();\n    this.vBottomRight();\n    this.vTopRight();\n    this.hTop();\n    this.hMiddle();\n    this.hBottom();\n    this._ctx.closePath();\n  }\n\n  // Vertical: top left\n  vTopLeft() {\n    this._ctx.fillRect(0, this._bw, this._bw, this._bh);\n  }\n\n  // Vertical: bottom left\n  vBottomLeft() {\n    this._ctx.fillRect(0, this._bw * 2 + this._bh, this._bw, this._bh);\n  }\n\n  // Vertial: top right\n  vTopRight() {\n    this._ctx.fillRect(this._bw + this._bh, this._bw, this._bw, this._bh);\n  }\n\n  // Vertial: bottom right\n  vBottomRight() {\n    this._ctx.fillRect(this._bw + this._bh, this._bw * 2 + this._bh, this._bw, this._bh);\n  }\n\n  // Horizontal: top\n  hTop() {\n    this._ctx.fillRect(this._bw, 0, this._bh, this._bw);\n  }\n  // Horizontal: middle\n  hMiddle() {\n    this._ctx.fillRect(this._bw, this._bw + this._bh, this._bh, this._bw);\n  }\n\n  // Horizontal: bottom\n  hBottom() {\n    this._ctx.fillRect(this._bw, this._bw * 2 + this._bh * 2, this._bh, this._bw);\n  }\n\n  drawNumber(n) {\n    this.drawEmpty();\n    this._ctx.beginPath();\n    this._ctx.fillStyle = this._numberColor;\n\n    switch (n) {\n      case 0:\n        this.hTop();\n        this.hBottom();\n        this.vTopLeft();\n        this.vTopRight();\n        this.vBottomLeft();\n        this.vBottomRight();\n        break;\n      case 1:\n        this.vTopRight();\n        this.vBottomRight();\n        break;\n      case 2:\n        this.hTop();\n        this.vTopRight();\n        this.hMiddle();\n        this.vBottomLeft();\n        this.hBottom();\n        break;\n      case 3:\n        this.hTop();\n        this.hMiddle();\n        this.hBottom();\n        this.vTopRight();\n        this.vBottomRight();\n        break;\n      case 4:\n        this.hMiddle();\n        this.vTopLeft();\n        this.vTopRight();\n        this.vBottomRight();\n        break;\n      case 5:\n        this.hTop();\n        this.hMiddle();\n        this.hBottom();\n        this.vTopLeft();\n        this.vBottomRight();\n        break;\n      case 6:\n        this.hTop();\n        this.hMiddle();\n        this.hBottom();\n        this.vTopLeft();\n        this.vBottomLeft();\n        this.vBottomRight();\n        break;\n      case 7:\n        this.hTop();\n        this.vTopRight();\n        this.vBottomRight();\n        break;\n      case 8:\n        this.vTopLeft();\n        this.vBottomLeft();\n        this.vTopRight();\n        this.vBottomRight();\n        this.hTop();\n        this.hMiddle();\n        this.hBottom();\n        break;\n      case 9:\n        this.hTop();\n        this.hMiddle();\n        this.vTopLeft();\n        this.vTopRight();\n        this.vBottomRight();\n        break;\n    }\n    this._ctx.closePath();\n  }\n\n  set numberColor(numberColor) {\n    this._numberColor = numberColor;\n  }\n\n  get numberColor() {\n    return this._numberColor;\n  }\n\n  set dashColor(dashColor) {\n    this._dashColor = dashColor;\n  }\n\n  get dashColor() {\n    return this._dashColor;\n  }\n}\n","import { COLOR } from './color';\nimport Utility from './utility';\nimport BaseComponent from './base-component';\n\nexport default class BarMeter extends BaseComponent {\n\n  constructor(canvas, options = {}) {\n    const viewWidth = options.viewWidth || 100;\n\n    super(canvas, options, 0, 0, viewWidth, 200);\n\n    this._space = 20;\n    this._barWidth = this._viewWidth - 2 * this._space;\n    this._barHeight = 15;\n    this._currBar = 0;\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\n    this._barMax = this._numberOfBars * 100;\n  }\n\n  setOptions(options = {}) {\n    this._min = options.min || 0;\n    this._max = options.max || 100;\n    this._value = options.value || 0;\n    this._dashColor = options.dashColor || COLOR.grey;\n    this._barColor = options.barColor || COLOR.green;\n    this._speed = options.speed || 5;\n    this._isGradient = options.gradient || false;\n  }\n\n  drawObject() {\n    this.clear();\n    this._ctx.save();\n    this.scale();\n\n    // Draw the dash.\n    this._ctx.fillStyle = this._dashColor;\n    for (let i = 0; i < 10; i++) {\n      let y = 5 + i * 20;\n\n      this._ctx.beginPath();\n      this._ctx.fillRect(this._space, y, this._barWidth, this._barHeight);\n      this._ctx.closePath();\n    }\n\n    // Draw bars.\n    if (this._currBar >= this._barMax) {\n      this._currBar = -100;\n    } else {\n      let bar = this._currBar / 100;\n\n      let colors = [];\n\n      if (this._isGradient) {\n        colors = Utility.generateGradientColor(COLOR.white, this._barColor, bar);\n      } else {\n        this._ctx.fillStyle = this._barColor;\n      }\n\n      for (let i = 0; i < bar; i++) {\n        let y = this._viewHeight - (15 + i * 20);\n\n        if (this._isGradient) {\n          this._ctx.fillStyle = '#' + colors[i];\n        }\n\n        this._ctx.beginPath();\n        this._ctx.fillRect(this._space, y, this._barWidth, this._barHeight);\n        this._ctx.closePath();\n      }\n\n      this._currBar += this._speed;\n    }\n\n    this._ctx.restore();\n  }\n\n  set value(value) {\n    this._value = value;\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\n    this._barMax = this._numberOfBars * 100;\n  }\n\n  get valuePct() {\n    return Math.floor((this._value - this._min) / (this._max - this._min) * 100);\n  }\n\n  set dashColor(dashColor) {\n    this._dashColor = dashColor;\n  }\n\n  set barColor(barColor) {\n    this._barColor = barColor;\n  }\n}\n\n","import BarMeter from './bar-meter';\nimport DigitalClcok from './digital-clock';\nimport RoundFan from './round-fan';\nimport VolumeMeter from './volume-meter';\nimport Heartbeat from './heartbeat';\nimport MessageQueue from './message-queue';\nimport RoundRadar from './round-radar';\nimport RoundGauge from './round-gauge';\nimport StopWatch from './stop-watch';\nimport TextMeter from './text-meter';\nimport AnimationTimer from './animation-timer';\nimport Settings from './settings';\nimport SpeedCircle from './speed-circle';\nimport TextBox from './text-box';\n\nimport WarningDialog from './div/warning-dialog';\nimport BlinkText from './div/blink-text';\nimport ScrollPanel from './div/scroll-panel';\n\nexport {\n  BarMeter,\n  DigitalClcok,\n  VolumeMeter,\n  Heartbeat,\n  MessageQueue,\n  WarningDialog,\n  BlinkText,\n  RoundRadar,\n  RoundGauge,\n  StopWatch,\n  ScrollPanel,\n  Settings,\n  // v1.0.0\n  SpeedCircle,\n  TextMeter,\n  RoundFan,\n  TextBox\n};\n\n// Fire up window.requestAnimationFrame()\nAnimationTimer.render();\n"],"sourceRoot":""}