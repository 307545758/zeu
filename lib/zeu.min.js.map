{"version":3,"sources":["webpack://zeu/webpack/universalModuleDefinition","webpack://zeu/webpack/bootstrap","webpack://zeu/./src/utility.js","webpack://zeu/./src/color.js","webpack://zeu/./src/base-canvas.js","webpack://zeu/./src/settings.js","webpack://zeu/./src/animation-timer.js","webpack://zeu/./src/global.js","webpack://zeu/./src/text-meter.js","webpack://zeu/./src/digital-number.js","webpack://zeu/./src/stop-watch.js","webpack://zeu/./src/round-gauge.js","webpack://zeu/./src/round-radar.js","webpack://zeu/./src/double-circle.js","webpack://zeu/./src/message-queue.js","webpack://zeu/./src/scroll-panel.js","webpack://zeu/./src/blink-text.js","webpack://zeu/./src/warning-dialog.js","webpack://zeu/./src/heartbeat.js","webpack://zeu/./src/volume-meter.js","webpack://zeu/./src/round-fan.js","webpack://zeu/./src/digital-clock.js","webpack://zeu/./src/bar-meter.js","webpack://zeu/./src/index.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Utility","_classCallCheck","this","min","max","Math","floor","random","toString","h","now","Date","setHours","getHours","speed","date","PI","getSeconds","getMilliseconds","degree","hex","opacity","replace","parseInt","substring","undefined","curr","dest","green","grey","black","white","red","_global","_color","BaseCanvas","baseDiv","width","height","_div","_defaultWidth","_defaultHeight","_canvas","document","createElement","setAttribute","clientWidth","clientHeight","appendChild","_ctx","getContext","drawFrame","_fontColor","COLOR","_lineColor","_fillColor","_heightScale","_scaledWidth","postConstructor","stopAnimation","removeChild","startAnimation","scale","clearRect","getAnimationFrameArrayPos","GLOBAL","requestAnimationFrameArray","push","drawFrameObj","index","splice","func","self","length","id","_animationTimer","_interopRequireDefault","Settings","_fps","fps","default","_settings","AnimationTimer","render","_fpsInterval","_lastFrame","requestAnimationFrame","requestAnimFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","elapsed","_baseCanvas","_utility","TextMeter","options","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","_percentageValue","has","percentageValue","fillColor","_bgColor","bgColor","lineColor","_lineWidth","lineWidth","_speed","_space","_meterWidth","_meterHeight","_x","_nextX","_barX","globalCompositeOperation","font","textAlign","clearAll","save","beginPath","rect","strokeStyle","stroke","closePath","pct","restore","clip","fillStyle","fillText","fillRect","getNextPos","abs","fontColor","DigitalNumber","canvasCtx","barWidth","numberWidth","numberHeight","dashColor","numberColor","_barWidth","_verBarHeight","_horBarHeight","_dashColor","_numberColor","moveTo","topLeft","bottomLeft","topRight","bottomRight","top","middle","bottom","number","drawEmpty","_digitalNumber","StopWatch","_millisNumber","_lastTime","_elapsedTime","_state","second","millis","sec","hour","slice","drawTwoDigits","translate","digitalNumber","time","space","drawNumber","left","right","RoundGauge","_startValue","startValue","_endValue","endValue","_startDegree","startDegree","_endDegree","endDegree","_isHandArrow","isHandArrow","_isPercentage","isPercentage","_value","_handColor","handColor","balck","_valueFont","valueFont","_scaleFont","_startAngle","getAngleByDegree","_endAngle","_currDegree","_targetDegree","valueToDegree","angle","a","x","cos","y","sin","scaleValue","valueToPct","degreeToValue","x1","y1","x2","y2","lineTo","arc","rotate","fill","RoundRadar","_gridColor","gridColor","_targetColor","targetColor","_hasGrid","_targets","radius","isDefined","getRandomInt","getAngleByDate","getTime","DoubleCircle","outer","_outerColor","color","_outerSpeed","_outerRadius","inner","_innerColor","_innerSpeed","_innerRadius","_text","text","_font","_isDot","isDot","_dots","dots","_interval","outerAngle","innerAngle","MessageQueue","_barColor","barColor","_maxQueueCapacity","maxQueueCapacity","_queue","_barHeight","pop","shift","q","currY","ScrollPanel","defaultCss","_defaultCss","_isUp","isUp","boxDiv","insertBefore","firstChild","scrollBottom","scrollHeight","scrollTop","toBeRemoved","css","innerHTML","style","cssText","capacity","BlinkText","_blinkTimer","interval","_blinkCss","blinkCss","message","setInterval","currCss","clearInterval","unblink","blink","WarningDialog","_reasonText","reason","dailog","panel","innerPanel","warning","_reason","_dialog","body","getElementsByTagName","zeuPole","head","type","styleSheet","createTextNode","display","Heartbeat","_lastSec","_timer","_get","drawSeconds","_this2","currSec","leftPadZero","getMinutes","quadraticCurveTo","VolumeMeter","_min","_max","_y","_nextY","RoundFan","_fanColor","fanColor","_centerColor","centerColor","DigitalClock","_bw","_bh","barHeight","_hourOffset","hourOffset","tick","stopTick","addHour","drawTime","drawInterpoint","vTopLeft","vBottomLeft","vBottomRight","vTopRight","hTop","hMiddle","hBottom","BarMeter","canvas","_currBar","_numberOfBars","_barMax","bar","_barMeter","_digitalClock","_roundFan","_volumeMeter","_heartbeat","_warningDialog","_blinkText","_scrollPanel","_messageQueue","_doubleCircle","_roundRadar","_roundGauge","_stopWatch","_textMeter"],"mappings":"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","file":"zeu.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"zeu\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"zeu\"] = factory();\n\telse\n\t\troot[\"zeu\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 21);\n","\r\nexport default class Utility {\r\n\r\n  constructor() {}\r\n\r\n  static getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n  }\r\n\r\n  static getRandomColor() {\r\n    return '#' + ((1 << 24) * Math.random() | 0).toString(16);\r\n  }\r\n\r\n  static has(object, key) {\r\n    return object ? hasOwnProperty.call(object, key) : false;\r\n  }\r\n\r\n  static addHour(h) {\r\n    let now = new Date();\r\n\r\n    now.setHours(now.getHours() + h);\r\n    return now;\r\n  }\r\n\r\n  static getAngleByDate(speed, date) {\r\n    return ((speed * Math.PI) / 6) * date.getSeconds() + ((speed * Math.PI) / 6000) * date.getMilliseconds();\r\n  }\r\n\r\n  static getAngleByDegree(degree) {\r\n    return degree * Math.PI / 180;\r\n  }\r\n\r\n  static hexToRgba(hex, opacity) {\r\n    hex = hex.replace('#', '');\r\n    let r = parseInt(hex.substring(0, 2), 16);\r\n    let g = parseInt(hex.substring(2, 4), 16);\r\n    let b = parseInt(hex.substring(4, 6), 16);\r\n\r\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + opacity / 100 + ')';\r\n  }\r\n\r\n  static isDefined(o) {\r\n    return o !== undefined && o !== null;\r\n  }\r\n\r\n  static leftPadZero(n) {\r\n    if (n < 10) {\r\n      return '0' + n;\r\n    }\r\n    return n;\r\n  }\r\n\r\n  static getNextPos(curr, dest, speed) {\r\n    if ((speed > 0 && curr < dest) || (speed < 0 && curr > dest)) {\r\n      return curr + speed;\r\n    }\r\n    return dest;\r\n  }\r\n}\r\n\r\n","\r\nlet COLOR = {\r\n  green: '#00d7af',\r\n  grey: '#F8F8FF',\r\n  black: '#000',\r\n  white: '#fff',\r\n  red: '#dc3545'\r\n};\r\n\r\nexport { COLOR };\r\n","import { GLOBAL } from './global';\r\nimport { COLOR } from './color';\r\n\r\nexport default class BaseCanvas {\r\n\r\n  constructor(baseDiv, width, height) {\r\n    this._div = baseDiv;\r\n    this._defaultWidth = width;\r\n    this._defaultHeight = height;\r\n    this._canvas = document.createElement('canvas');\r\n    this._canvas.setAttribute('width', baseDiv.clientWidth);\r\n    this._canvas.setAttribute('height', baseDiv.clientHeight);\r\n    this._div.appendChild(this._canvas);\r\n    this._ctx = this._canvas.getContext('2d');\r\n\r\n    // Base scale on the height. Use CSS transform instead of scale()\r\n    // let heightScale = baseDiv.clientHeight / height;\r\n    // this._canvas.style.transformOrigin = '0 0'; // scale from top left\r\n    // this._canvas.style.transform = 'scale(' + heightScale + ')';\r\n\r\n    // Bind the drawFrame function.\r\n    this.drawFrame = this.drawFrame.bind(this);\r\n\r\n    // Default color\r\n    this._fontColor = COLOR.black;\r\n    this._lineColor = COLOR.grey;\r\n    this._fillColor = COLOR.green;\r\n\r\n    // Base scale on the height.\r\n    this._heightScale = this._div.clientHeight / this._defaultHeight;\r\n\r\n    // Width after being scaled.\r\n    this._scaledWidth = this._defaultWidth / this._heightScale;\r\n\r\n    this.postConstructor();\r\n  }\r\n\r\n  destroy() {\r\n    this.stopAnimation();\r\n    this._div.removeChild(this._canvas);\r\n  }\r\n\r\n  postConstructor() {\r\n    this.startAnimation();\r\n  }\r\n\r\n  scale() {\r\n    this._ctx.scale(this._heightScale, this._heightScale);\r\n  }\r\n\r\n  clearAll() {\r\n    this._ctx.clearRect(0, 0, this._canvas.width, this._canvas.height);\r\n  }\r\n\r\n  startAnimation() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index === -1) {\r\n      GLOBAL.requestAnimationFrameArray.push(this.drawFrameObj());\r\n    }\r\n  }\r\n\r\n  stopAnimation() {\r\n    let index = this.getAnimationFrameArrayPos();\r\n\r\n    if (index !== -1) {\r\n      GLOBAL.requestAnimationFrameArray.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  drawFrameObj() {\r\n    return {\r\n      func: this.drawFrame,\r\n      self: this\r\n    };\r\n  }\r\n\r\n  get isAnimationOn() {\r\n    return this.getAnimationFrameArrayPos() !== -1;\r\n  }\r\n\r\n  getAnimationFrameArrayPos() {\r\n    let index = -1;\r\n\r\n    for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\r\n      let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\r\n\r\n      if (drawFrameObj.self._div.id === this._div.id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n    return index;\r\n  }\r\n\r\n  drawFrame() {}\r\n\r\n}\r\n\r\n","import AnimationTimer from './animation-timer';\r\n\r\nclass Settings {\r\n  constructor() {\r\n    this._fps = 60;\r\n  }\r\n\r\n  set fps(fps) {\r\n    this._fps = fps;\r\n    AnimationTimer._fps = fps;\r\n  }\r\n}\r\n\r\nexport default new Settings();\r\n","import { GLOBAL } from './global';\r\nimport Settings from './settings';\r\n\r\nclass AnimationTimer {\r\n\r\n  constructor() {\r\n    // Bind the render function.\r\n    this.render = this.render.bind(this);\r\n\r\n    // Animation parameters.\r\n    this._fps = Settings._fps;\r\n    this._fpsInterval = 1000 / this._fps;\r\n    this._lastFrame = Date.now();\r\n\r\n    // Cross browser.\r\n    if (!window.requestAnimationFrame) {\r\n      window.requestAnimFrame = () => {\r\n        return window.webkitRequestAnimationFrame ||\r\n                window.mozRequestAnimationFrame ||\r\n                window.oRequestAnimationFrame ||\r\n                window.msRequestAnimationFrame;\r\n      };\r\n    }\r\n  }\r\n\r\n  render() {\r\n    window.requestAnimationFrame(this.render);\r\n\r\n    // FPS control\r\n    let now = Date.now();\r\n    let elapsed = now - this._lastFrame;\r\n\r\n    if (elapsed > this._fpsInterval) {\r\n      this._lastFrame = now - (elapsed % this._fpsInterval);\r\n\r\n      // Draw\r\n      for (let i = 0; i < GLOBAL.requestAnimationFrameArray.length; i++) {\r\n        let drawFrameObj = GLOBAL.requestAnimationFrameArray[i];\r\n\r\n        // Buy me some time.\r\n        /*\r\n        setTimeout(() => {\r\n          drawFrameObj.func.call(drawFrameObj.self);\r\n        }, 0);\r\n        */\r\n\r\n        drawFrameObj.func.call(drawFrameObj.self);\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n}\r\n\r\nexport default new AnimationTimer();\r\n\r\n","\r\nlet GLOBAL = {\r\n  requestAnimationFrameArray: []\r\n};\r\n\r\nexport { GLOBAL };\r\n","\r\nimport BaseCanvas from './base-canvas';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class TextMeter extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, baseDiv.clientWidth, 100);\r\n\r\n    // Options\r\n    this._percentageValue = Utility.has(options, 'percentageValue') ? options.percentageValue : 50;\r\n    this._fillColor = Utility.has(options, 'fillColor') ? options.fillColor : COLOR.red;\r\n    this._bgColor = Utility.has(options, 'bgColor') ? options.bgColor : COLOR.grey;\r\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : COLOR.black;\r\n    this._lineWidth = Utility.has(options, 'lineWidth') ? options.lineWidth : 10;\r\n\r\n    this._speed = 3;\r\n    this._space = 0;\r\n    this._meterWidth = this._scaledWidth - this._space * 2;\r\n    this._meterHeight = 100 - this._space * 2;\r\n\r\n    this._x = this._meterWidth - ((this._percentageValue / 100) * this._meterWidth) + this._space;\r\n    this._nextX = this._x;\r\n    this._barX = this._scaledWidth - this._space - this._x;\r\n  }\r\n\r\n  set percentageValue(n) {\r\n    if (n >= 0 || n <= 100) {\r\n      this._speed = n < this._percentageValue ? Math.abs(this._speed) : -Math.abs(this._speed);\r\n      this._nextX = this._meterWidth - ((n / 100) * this._meterWidth) + this._space;\r\n      this._percentageValue = n;\r\n    }\r\n  }\r\n\r\n  get percentageValue() {\r\n    return this._percentageValue;\r\n  }\r\n\r\n  drawFrame() {\r\n    this._ctx.globalCompositeOperation = 'destination-over';\r\n    this._ctx.font = '50px Arial';\r\n    this._ctx.textAlign = 'center';\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    // Draw the border.\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._space, this._space, this._meterWidth, this._meterHeight);\r\n    this._ctx.lineWidth = this._lineWidth;\r\n    this._ctx.strokeStyle = this._lineColor;\r\n\r\n    this._ctx.stroke();\r\n    this._ctx.closePath();\r\n\r\n    const pct = this._percentageValue + '%';\r\n\r\n    this._ctx.restore();\r\n    this._ctx.save();\r\n    this.scale();\r\n    // Draw left half text\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._space, this._space, this._barX, this._meterHeight);\r\n    this._ctx.clip();\r\n\r\n    this._ctx.fillStyle = this._bgColor;\r\n    this._ctx.fillText(pct, this._scaledWidth / 2, 67);\r\n\r\n    this._ctx.fillStyle = this._fillColor;\r\n    this._ctx.fillRect(this._space, this._space, this._barX, this._meterHeight);\r\n\r\n    this._ctx.restore();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    // Draw right half text\r\n    this._ctx.beginPath();\r\n    this._ctx.rect(this._barX, this._space, this._x, this._meterHeight);\r\n    this._ctx.clip();\r\n\r\n    this._ctx.fillStyle = this._fillColor;\r\n    this._ctx.fillText(pct, this._scaledWidth / 2, 67);\r\n\r\n    this._ctx.fillStyle = this._bgColor;\r\n    this._ctx.fillRect(this._barX, this._space, this._x, this._meterHeight);\r\n\r\n    this._ctx.restore();\r\n\r\n    // Calculate x and barX.\r\n    this._x = Utility.getNextPos(this._x, this._nextX, this._speed);\r\n    this._barX = this._scaledWidth - this._space - this._x;\r\n  }\r\n\r\n  set fillColor(fillColor) {\r\n    this._fillColor = fillColor;\r\n  }\r\n\r\n  set fontColor(fontColor) {\r\n    this._bgColor = fontColor;\r\n  }\r\n}\r\n","\r\nexport default class DigitalNumber {\r\n\r\n  constructor(canvasCtx, barWidth, numberWidth, numberHeight, dashColor, numberColor) {\r\n    this._ctx = canvasCtx;\r\n    this._barWidth = barWidth;\r\n    this._verBarHeight = (numberHeight - 3 * barWidth) / 2;\r\n    this._horBarHeight = numberWidth - 2 * barWidth;\r\n    this._dashColor = dashColor;\r\n    this._numberColor = numberColor;\r\n  }\r\n\r\n  drawEmpty() {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._dashColor;\r\n    this._ctx.moveTo(0, 0);\r\n    this.topLeft();\r\n    this.bottomLeft();\r\n    this.topRight();\r\n    this.bottomRight();\r\n    this.top();\r\n    this.middle();\r\n    this.bottom();\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  // Vertical: top left\r\n  topLeft() {\r\n    this._ctx.fillRect(0, this._barWidth, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertical: bottom left\r\n  bottomLeft() {\r\n    this._ctx.fillRect(0, this._barWidth * 2 + this._verBarHeight, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertial: top right\r\n  topRight() {\r\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth, this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Vertial: bottom right\r\n  bottomRight() {\r\n    this._ctx.fillRect(this._barWidth + this._horBarHeight, this._barWidth * 2 + this._verBarHeight,\r\n      this._barWidth, this._verBarHeight);\r\n  }\r\n\r\n  // Horizontal: top\r\n  top() {\r\n    this._ctx.fillRect(this._barWidth, 0, this._horBarHeight, this._barWidth);\r\n  }\r\n  // Horizontal: middle\r\n  middle() {\r\n    this._ctx.fillRect(this._barWidth, this._barWidth + this._verBarHeight, this._horBarHeight, this._barWidth);\r\n  }\r\n\r\n  // Horizontal: bottom\r\n  bottom() {\r\n    this._ctx.fillRect(this._barWidth, this._barWidth * 2 + this._verBarHeight * 2, this._horBarHeight, this._barWidth);\r\n  }\r\n\r\n  drawNumber(number) {\r\n    this.drawEmpty();\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._numberColor;\r\n\r\n    switch (number) {\r\n      case 0:\r\n        this.top();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 1:\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 2:\r\n        this.top();\r\n        this.topRight();\r\n        this.middle();\r\n        this.bottomLeft();\r\n        this.bottom();\r\n        break;\r\n      case 3:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 4:\r\n        this.middle();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 5:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 6:\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        this.topLeft();\r\n        this.bottomLeft();\r\n        this.bottomRight();\r\n        break;\r\n      case 7:\r\n        this.top();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n      case 8:\r\n        this.topLeft();\r\n        this.bottomLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        this.top();\r\n        this.middle();\r\n        this.bottom();\r\n        break;\r\n      case 9:\r\n        this.top();\r\n        this.middle();\r\n        this.topLeft();\r\n        this.topRight();\r\n        this.bottomRight();\r\n        break;\r\n    }\r\n    this._ctx.closePath();\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport DigitalNumber from './digital-number';\r\n\r\nexport default class StopWatch extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 500, 100);\r\n\r\n    this._digitalNumber = new DigitalNumber(this._ctx, 8, 50, 100, 'white', 'green');\r\n    this._millisNumber = new DigitalNumber(this._ctx, 4, 25, 50, 'white', 'red');\r\n\r\n    this._lastTime = Date.now();\r\n    this._elapsedTime = 0;\r\n  }\r\n\r\n  postConstructor() {\r\n  }\r\n\r\n  start() {\r\n    this._lastTime = Date.now();\r\n    this._elapsedTime = 0;\r\n    this._state = 'START';\r\n    this.startAnimation();\r\n  }\r\n\r\n  stop() {\r\n    this._state = 'STOP';\r\n    this.stopAnimation();\r\n  }\r\n\r\n  resume() {\r\n    this._state = 'RESUME';\r\n    this.startAnimation();\r\n  }\r\n\r\n  reset() {\r\n    this._state = 'RESET';\r\n    this.stopAnimation();\r\n    // Draw one frame to reset everything to 0.\r\n    this.drawFrame();\r\n    this._lastTime = Date.now();\r\n    this._elapsedTime = 0;\r\n  }\r\n\r\n  drawFrame() {\r\n    let now = Date.now();\r\n\r\n    if (this._state === 'RESUME') {\r\n      this._state = 'START';\r\n    } else {\r\n      this._elapsedTime += (Date.now() - this._lastTime);\r\n    }\r\n    this._lastTime = now;\r\n\r\n    let second = 0;\r\n    let millis = 0;\r\n    let sec = 0;\r\n    let min = 0;\r\n    let hour = 0;\r\n\r\n    if (this._state !== 'RESET') {\r\n      second = Math.floor(this._elapsedTime / 1000);\r\n      millis = parseInt(this._elapsedTime.toString().slice(-2), 10);\r\n      sec = Math.floor(second % 60);\r\n      min = Math.floor((second % 3600) / 60);\r\n      hour = Math.floor(second / 3600);\r\n    }\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this.drawTwoDigits(this._digitalNumber, hour, 60);\r\n    this.drawTwoDigits(this._digitalNumber, min, 60);\r\n    this.drawTwoDigits(this._digitalNumber, sec, 60);\r\n\r\n    this._ctx.translate(0, 50);\r\n    this.drawTwoDigits(this._millisNumber, millis, 30);\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  drawTwoDigits(digitalNumber, time, space) {\r\n    if (time < 10) {\r\n      digitalNumber.drawNumber(0);\r\n      this._ctx.translate(space, 0);\r\n      digitalNumber.drawNumber(time);\r\n      this._ctx.translate(space, 0);\r\n    } else {\r\n      let left = Math.floor(time / 10);\r\n      let right = time % 10;\r\n\r\n      digitalNumber.drawNumber(left);\r\n      this._ctx.translate(space, 0);\r\n      digitalNumber.drawNumber(right);\r\n      this._ctx.translate(space, 0);\r\n    }\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class RoundGauge extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 200, 200);\r\n\r\n    this._startValue = Utility.has(options, 'startValue') ? options.startValue : 0;\r\n    this._endValue = Utility.has(options, 'endValue') ? options.endValue : 100;\r\n    this._startDegree = Utility.has(options, 'startDegree') ? options.startDegree : 180;\r\n    this._endDegree = Utility.has(options, 'endDegree') ? options.endDegree : 360;\r\n    this._isHandArrow = Utility.has(options, 'isHandArrow') ? options.isHandArrow : false;\r\n    this._isPercentage = Utility.has(options, 'isPercentage') ? options.isPercentage : false;\r\n    this._value = Utility.has(options, 'value') ? options.value : 0;\r\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : COLOR.green;\r\n    this._handColor = Utility.has(options, 'handColor') ? options.handColor : COLOR.red;\r\n    this._fontColor = Utility.has(options, 'fontColor') ? options.fontColor : COLOR.balck;\r\n    this._valueFont = Utility.has(options, 'valueFont') ? options.valueFont : '20px Arial';\r\n\r\n    this._value = this._isPercentage ? Math.floor(this._value / (this._endValue - this._startValue)) +\r\n      '%' : this._value;\r\n    this._scaleFont = '12px Arial';\r\n    this._startAngle = Utility.getAngleByDegree(this._startDegree);\r\n    this._endAngle = Utility.getAngleByDegree(this._endDegree);\r\n    this._speed = 3;\r\n    this._currDegree = 0;\r\n    this._targetDegree = this.valueToDegree(this._value);\r\n  }\r\n\r\n  set value(value) {\r\n    this._targetDegree = this.valueToDegree(value);\r\n    let speed = Math.abs(this._speed);\r\n\r\n    this._speed = this._targetDegree > this._currDegree ? speed : -speed;\r\n    this._value = this._isPercentage ? this.valueToPct(value) + '%' : value;\r\n  }\r\n\r\n  valueToPct(value) {\r\n    return Math.floor(value / (this._endValue - this._startValue) * 100);\r\n  }\r\n\r\n  valueToDegree(value) {\r\n    return (value / (this._endValue - this._startValue) * (this._endDegree - this._startDegree)) + this._startDegree;\r\n  }\r\n\r\n  degreeToValue(degree) {\r\n    return Math.floor((degree - this._startDegree) / (this._endDegree - this._startDegree) *\r\n      (this._endValue - this._startValue));\r\n  }\r\n\r\n  drawFrame() {\r\n    this._ctx.textAlign = 'center';\r\n\r\n    if ((this._speed > 0 && this._currDegree < this._targetDegree) ||\r\n        (this._speed < 0 && this._currDegree > this._targetDegree)) {\r\n      this._currDegree += this._speed;\r\n    } else if ((this._speed > 0 && this._currDegree >= this._targetDegree) ||\r\n        (this._speed < 0 && this._currDegree <= this._targetDegree)) {\r\n      this._currDegree = this._targetDegree;\r\n    }\r\n\r\n    let angle = Utility.getAngleByDegree(this._currDegree);\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this._ctx.fillStyle = this._fontColor;\r\n    this._ctx.font = this._valueFont;\r\n    this._ctx.fillText(this._value, 100, 100);\r\n\r\n    this._ctx.translate(100, 100);\r\n\r\n    // Draw scales\r\n    this._ctx.strokeStyle = this._lineColor;\r\n    this._ctx.lineWidth = 1;\r\n    for (let i = this._startDegree; i <= this._endDegree; i = i + 6) {\r\n      let a = Utility.getAngleByDegree(i);\r\n\r\n      let r = 66;\r\n\r\n      if (i % 30 === 0) {\r\n        r = 61;\r\n        let x = 90 * Math.cos(a);\r\n        let y = 90 * Math.sin(a) + 3;\r\n        let scaleValue = this._isPercentage ? this.valueToPct(this.degreeToValue(i)) : this.degreeToValue(i);\r\n\r\n        this._ctx.fillStyle = this._lineColor;\r\n        this._ctx.font = this._scaleFont;\r\n        this._ctx.fillText(scaleValue, x, y);\r\n      }\r\n\r\n      let x1 = r * Math.cos(a);\r\n      let y1 = r * Math.sin(a);\r\n\r\n      let x2 = 78 * Math.cos(a);\r\n      let y2 = 78 * Math.sin(a);\r\n\r\n      this._ctx.beginPath();\r\n      this._ctx.moveTo(x1, y1);\r\n      this._ctx.lineTo(x2, y2);\r\n      this._ctx.closePath();\r\n      this._ctx.stroke();\r\n    }\r\n\r\n    // Draw the circle\r\n    this._ctx.beginPath();\r\n    this._ctx.lineWidth = 8;\r\n    this._ctx.arc(0, 0, 75, this._startAngle, this._endAngle);\r\n    this._ctx.stroke();\r\n\r\n    // Draw the hand\r\n    this._ctx.rotate(angle);\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._handColor;\r\n    if (this._isHandArrow) {\r\n      this._ctx.moveTo(51, -10);\r\n      this._ctx.lineTo(71, 0);\r\n      this._ctx.lineTo(51, 10);\r\n      this._ctx.fill();\r\n    } else {\r\n      this._ctx.fillRect(51, -4, 20, 6);\r\n    }\r\n\r\n    this._ctx.closePath();\r\n\r\n    this._ctx.restore();\r\n  }\r\n}\r\n\r\n","import BaseCanvas from './base-canvas';\r\nimport Utility from './utility';\r\n\r\nexport default class RoundRadar extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 200, 200);\r\n\r\n    this._speed = Utility.has(options, 'speed') ? options.speed : 2;\r\n    this._bgColor = Utility.has(options, 'bgColor') ? options.bgColor : 'rgba(0, 0, 0, 0.03)';\r\n    this._gridColor = Utility.has(options, 'gridColor') ? options.gridColor : 'rgba(0, 255, 0, 0.02)';\r\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : 'rgba(0, 255, 0, 1)';\r\n    this._targetColor = Utility.has(options, 'targetColor') ? options.targetColor : 'rgba(255, 0, 0, 0.5)';\r\n\r\n    this._hasGrid = true;\r\n    this._lastTime = 0;\r\n    this._targets = [];\r\n  }\r\n\r\n  addTarget(id, x, y, radius) {\r\n    let t = {\r\n      id: id,\r\n      x: Utility.isDefined(x) ? x : Utility.getRandomInt(0, 50),\r\n      y: Utility.isDefined(y) ? y : Utility.getRandomInt(0, 50),\r\n      radius: Utility.isDefined(radius) ? radius : 5\r\n    };\r\n\r\n    this._targets.push(t);\r\n  }\r\n\r\n  removeTarget(id) {\r\n    let index = -1;\r\n\r\n    for (let i = 0; i < this._targets.length; i++) {\r\n      let t = this._targets[i];\r\n\r\n      if (t.id === id) {\r\n        index = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (index !== -1) {\r\n      this._targets.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  clearAllTargets() {\r\n    this._targets = [];\r\n  }\r\n\r\n  drawFrame() {\r\n    let now = new Date();\r\n    let angle = Utility.getAngleByDate(this._speed, now);\r\n\r\n    this._ctx.fillStyle = this._bgColor;\r\n    this._ctx.fillRect(0, 0, this._canvas.width, this._canvas.height);\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    // Draw grid\r\n    if (this._hasGrid) {\r\n      this._ctx.strokeStyle = this._gridColor;\r\n      this._ctx.lineWidth = 1;\r\n      for (let i = 0; i <= 20; i++) {\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(i * 10, 0);\r\n        this._ctx.lineTo(i * 10, 200);\r\n        this._ctx.closePath();\r\n        this._ctx.stroke();\r\n      }\r\n\r\n      for (let i = 0; i <= 20; i++) {\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(0, i * 10);\r\n        this._ctx.lineTo(200, i * 10);\r\n        this._ctx.closePath();\r\n        this._ctx.stroke();\r\n      }\r\n    }\r\n\r\n    this._ctx.translate(100, 100);\r\n\r\n    // Draw circles\r\n    this._ctx.lineWidth = 1;\r\n    this._ctx.strokeStyle = this._lineColor;\r\n    for (let i = 1; i <= 4; i++) {\r\n      if (i === 4) {\r\n        this._ctx.lineWidth = 2;\r\n      }\r\n      this._ctx.beginPath();\r\n      this._ctx.arc(0, 0, i * 20, 0, Math.PI * 2);\r\n      this._ctx.closePath();\r\n      this._ctx.stroke();\r\n    }\r\n\r\n    // Draw lines\r\n    this._ctx.lineWidth = 1;\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(-80, 0);\r\n    this._ctx.lineTo(80, 0);\r\n    this._ctx.closePath();\r\n    this._ctx.stroke();\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(0, -80);\r\n    this._ctx.lineTo(0, 80);\r\n    this._ctx.closePath();\r\n    this._ctx.stroke();\r\n\r\n    // Draw scales\r\n    this._ctx.lineWidth = 1;\r\n    for (let i = 0; i < 360; i = i + 6) {\r\n      let a = Utility.getAngleByDegree(i);\r\n\r\n      let r = 77;\r\n\r\n      if (i % 30 === 0) {\r\n        r = 74;\r\n      }\r\n\r\n      let x1 = r * Math.cos(a);\r\n      let y1 = r * Math.sin(a);\r\n\r\n      let x2 = 80 * Math.cos(a);\r\n      let y2 = 80 * Math.sin(a);\r\n\r\n      this._ctx.beginPath();\r\n      this._ctx.moveTo(x1, y1);\r\n      this._ctx.lineTo(x2, y2);\r\n      this._ctx.closePath();\r\n      this._ctx.stroke();\r\n    }\r\n\r\n    // Draw Targets\r\n    if (now.getTime() - this._lastTime < 500) {\r\n      this._ctx.fillStyle = this._targetColor;\r\n      for (let i = 0; i < this._targets.length; i++) {\r\n        let t = this._targets[i];\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.arc(t.x, t.y, t.radius, 0, Math.PI * 2);\r\n        this._ctx.closePath();\r\n        this._ctx.fill();\r\n      }\r\n    } else if (now.getTime() - this._lastTime < 1000) {\r\n      // Don't display\r\n    } else {\r\n      this._lastTime = now.getTime();\r\n    }\r\n\r\n    // Draw the radar wave\r\n    this._ctx.rotate(angle);\r\n    this._ctx.fillStyle = this._lineColor;\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.fillRect(0, -1, 80, 2);\r\n    this._ctx.closePath();\r\n\r\n    this._ctx.restore();\r\n  }\r\n}\r\n\r\n","import BaseCanvas from './base-canvas';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class DoubleCircle extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 200, 200);\r\n\r\n    // Options\r\n    let outer = Utility.has(options, 'outer') ? options.outer : null;\r\n\r\n    this._outerColor = Utility.has(outer, 'color') ? outer.color : COLOR.green;\r\n    this._outerSpeed = Utility.has(outer, 'speed') ? outer.speed : 0.5;\r\n    this._outerRadius = Utility.has(outer, 'radius') ? outer.radius : 90;\r\n\r\n    let inner = Utility.has(options, 'inner') ? options.inner : null;\r\n\r\n    this._innerColor = Utility.has(inner, 'color') ? inner.color : COLOR.red;\r\n    this._innerSpeed = Utility.has(inner, 'speed') ? inner.speed : 0.2;\r\n    this._innerRadius = Utility.has(inner, 'radius') ? inner.radius : 80;\r\n\r\n    this._fontColor = Utility.has(options, 'fontColor') ? options.fontColor : COLOR.green;\r\n    this._text = Utility.has(options, 'text') ? options.text : 'ON';\r\n    this._font = Utility.has(options, 'font') ? options.font : '20px Arial';\r\n\r\n    this._isDot = Utility.has(options, 'isDot') ? options.isDot : true;\r\n    this._dots = Utility.has(options, 'dots') ? options.dots : 30;\r\n    this._lineWidth = Utility.has(options, 'lineWidth') ? options.lineWidth : 10;\r\n\r\n    this._interval = (Math.PI * 2) / this._dots;\r\n  }\r\n\r\n  drawFrame() {\r\n    this._ctx.font = this._font;\r\n    this._ctx.textAlign = 'center';\r\n\r\n    let now = new Date();\r\n    let outerAngle = Utility.getAngleByDate(this._outerSpeed, now);\r\n    let innerAngle = -Utility.getAngleByDate(this._innerSpeed, now);\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this._ctx.fillStyle = this._fontColor;\r\n    this._ctx.fillText(this._text, 100, 100);\r\n\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(outerAngle);\r\n\r\n    // Draw outer circle\r\n    if (this._isDot) {\r\n      this._ctx.fillStyle = this._outerColor;\r\n      for (let i = 0; i < this._dots; i++) {\r\n        let d = this._interval * i;\r\n        let x = this._outerRadius * Math.cos(d);\r\n        let y = this._outerRadius * Math.sin(d);\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.fillRect(x - 3, y - 3, 6, 6);\r\n        this._ctx.closePath();\r\n        this._ctx.fill();\r\n      }\r\n    } else {\r\n      this._ctx.strokeStyle = this._outerColor;\r\n      this._ctx.beginPath();\r\n      this._ctx.lineWidth = this._lineWidth;\r\n      this._ctx.arc(0, 0, this._outerRadius, 0, Math.PI * 1.25);\r\n      this._ctx.stroke();\r\n    }\r\n\r\n    this._ctx.restore();\r\n\r\n    this._ctx.save();\r\n    this.scale();\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(innerAngle);\r\n\r\n    // Draw inner circle\r\n    if (this._isDot) {\r\n      this._ctx.fillStyle = this._innerColor;\r\n      for (let i = 0; i < this._dots; i++) {\r\n        let d = this._interval * i;\r\n        let x = this._innerRadius * Math.cos(d);\r\n        let y = this._innerRadius * Math.sin(d);\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.arc(x, y, 3, 0, Math.PI * 2);\r\n        this._ctx.closePath();\r\n        this._ctx.fill();\r\n      }\r\n    } else {\r\n      this._ctx.strokeStyle = this._innerColor;\r\n      this._ctx.beginPath();\r\n      this._ctx.lineWidth = this._lineWidth;\r\n      this._ctx.arc(0, 0, this._innerRadius, 0, Math.PI * 1.25);\r\n      this._ctx.stroke();\r\n    }\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set fontColor(fontColor) {\r\n    this._fontColor = fontColor;\r\n  }\r\n\r\n  set text(text) {\r\n    this._text = text;\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class MessageQueue extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 100, 200);\r\n\r\n    // Options\r\n    this._barWidth = Utility.has(options, 'barWidth') ? options.barWidth : 80;\r\n    this._space = Utility.has(options, 'space') ? options.space : 5;\r\n    this._barColor = Utility.has(options, 'barColor') ? options.barColor : COLOR.green;\r\n    this._maxQueueCapacity = Utility.has(options, 'maxQueueCapacity') ? options.maxQueueCapacity : 20;\r\n\r\n    this._queue = [];\r\n    this._speed = 5;\r\n    this._barHeight = 20;\r\n  }\r\n\r\n  push() {\r\n    if (this._queue.length >= this._maxQueueCapacity) {\r\n      this.pop();\r\n    }\r\n\r\n    this._queue.push({\r\n      x: (100 - this._barWidth) / 2,\r\n      y: 220\r\n    });\r\n  }\r\n\r\n  pop() {\r\n    if (this._queue.length > 0) {\r\n      this._queue.shift();\r\n    }\r\n  }\r\n\r\n  drawFrame() {\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    for (let i = 0; i < this._queue.length; i++) {\r\n      let q = this._queue[i];\r\n\r\n      let currY = (this._barHeight + this._space) * i + this._space;\r\n\r\n      // Move up\r\n      if (currY < q.y) {\r\n        q.y -= this._speed;\r\n      } else {\r\n        q.y = currY;\r\n      }\r\n\r\n      this._ctx.beginPath();\r\n      this._ctx.fillStyle = this._barColor;\r\n      this._ctx.fillRect(q.x, q.y, this._barWidth, this._barHeight);\r\n      this._ctx.closePath();\r\n    }\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set barColor(barColor) {\r\n    this._barColor = barColor;\r\n  }\r\n\r\n  get barColor() {\r\n    return this._barColor;\r\n  }\r\n\r\n  get queueSize() {\r\n    return this._queue.length;\r\n  }\r\n}\r\n\r\n","import Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class ScrollPanel {\r\n\r\n  constructor(baseDiv, options) {\r\n    this._div = baseDiv;\r\n\r\n    let defaultCss = 'margin: 3px; padding: 3px; color: white; background-color: ' + COLOR.green + ';';\r\n\r\n    // Options\r\n    this._defaultCss = Utility.has(options, 'defaultCss') ? options.defaultCss : defaultCss;\r\n    this._isUp = Utility.has(options, 'isUp') ? options.isUp : true;;\r\n    this._maxQueueCapacity = Utility.has(options, 'maxQueueCapacity') ? options.maxQueueCapacity : 20;\r\n\r\n    this._queue = [];\r\n  }\r\n\r\n  push(boxDiv) {\r\n    if (this._queue.length > this._maxQueueCapacity) {\r\n      this.pop();\r\n    }\r\n\r\n    this._queue.push(boxDiv);\r\n\r\n    if (this._isUp) {\r\n      this._div.insertBefore(boxDiv, this._div.firstChild);\r\n      this._div.scrollBottom = this._div.scrollHeight;\r\n    } else {\r\n      this._div.appendChild(boxDiv);\r\n      this._div.scrollTop = this._div.scrollHeight;\r\n    }\r\n  }\r\n\r\n  pop() {\r\n    if (this._queue.length > 0) {\r\n      let toBeRemoved = this._queue.shift();\r\n\r\n      this._div.removeChild(toBeRemoved);\r\n    }\r\n  }\r\n\r\n  pushText(text, css) {\r\n    let boxDiv = document.createElement('div');\r\n\r\n    boxDiv.innerHTML = text;\r\n    boxDiv.style.cssText = css != null ? css : this._defaultCss;\r\n    this.push(boxDiv);\r\n  }\r\n\r\n  set isUp(isUp) {\r\n    this._isUp = isUp;\r\n  }\r\n\r\n  get isUp() {\r\n    return this._isUp;\r\n  }\r\n\r\n  set maxQueueCapacity(capacity) {\r\n    this._maxQueueCapacity = capacity;\r\n  }\r\n\r\n  get maxQueueCapacity() {\r\n    return this._maxQueueCapacity;\r\n  }\r\n}\r\n","import Utility from './utility';\r\n\r\nexport default class BlinkText {\r\n\r\n  constructor(baseDiv, options) {\r\n    this._div = baseDiv;\r\n    this._defaultCss = baseDiv.style.cssText;\r\n    this._blinkTimer = null;\r\n\r\n    // Options\r\n    this._interval = Utility.has(options, 'interval') ? options.interval : 500;\r\n    this._blinkCss = Utility.has(options, 'blinkCss') ? options.blinkCss : 'color: white; background-color: red;';\r\n  }\r\n\r\n  blink(message) {\r\n    if (message != null) {\r\n      this._div.innerHTML = message;\r\n    }\r\n\r\n    if (this._blinkTimer == null) {\r\n      this._blinkTimer = setInterval(() => {\r\n        let currCss = this._div.style.cssText !== this._defaultCss ? this._defaultCss : this._blinkCss;\r\n\r\n        this._div.style.cssText = currCss;\r\n      }, this._interval);\r\n    }\r\n  }\r\n\r\n  unblink() {\r\n    if (this._blinkTimer != null) {\r\n      clearInterval(this._blinkTimer);\r\n      this._blinkTimer = null;\r\n      this._div.style.cssText = this._defaultCss;\r\n    }\r\n  }\r\n\r\n  set interval(interval) {\r\n    this._interval = interval;\r\n    if (this._blinkTimer != null) {\r\n      this.unblink();\r\n      this.blink();\r\n    }\r\n  }\r\n\r\n  get interval() {\r\n    return this._interval;\r\n  }\r\n\r\n  set blinkCss(blinkCss) {\r\n    this._blinkCss = blinkCss;\r\n  }\r\n\r\n  get blinkCss() {\r\n    return this._blinkCss;\r\n  }\r\n}\r\n","import Utility from './utility';\r\n\r\nexport default class WarningDialog {\r\n\r\n  constructor(options) {\r\n    this._reasonText = Utility.has(options, 'reason') ? options.reason : '';\r\n    this._interval = Utility.has(options, 'interval') ? options.interval : 1000;\r\n\r\n    // Dialog\r\n    let dailog = document.createElement('div');\r\n\r\n    dailog.style.cssText = `\r\n      position: fixed;\r\n      top: 0;\r\n      left: 0;\r\n      margin: 0;\r\n      padding: 0;\r\n      width: 100%;\r\n      height: 100%;\r\n      z-index: 100;\r\n      display: none;\r\n      background-color: rgb(220, 53, 69, 0.8);\r\n    `;\r\n\r\n    let panel = document.createElement('div');\r\n\r\n    panel.style.cssText = `\r\n      width: 600px;\r\n      height: 400px;\r\n      position: relative;\r\n      top: 50%;\r\n      left: 50%;\r\n      margin-top: -200px; \r\n      margin-left: -300px;\r\n      text-align: center;\r\n      padding: 20px;\r\n      border: 20px solid #dc3545;\r\n      box-sizing: border-box;\r\n      background-size: 80px 80px;\r\n      background-image: linear-gradient(\r\n        45deg, \r\n        #dc3545 25%, \r\n        #ffc107 25%, \r\n        #ffc107 50%, \r\n        #dc3545 50%, \r\n        #dc3545 75%, \r\n        #ffc107 75%, \r\n        #ffc107);\r\n      animation: zeu-pole 1s linear infinite;\r\n    `;\r\n\r\n    let innerPanel = document.createElement('div');\r\n\r\n    innerPanel.style.cssText = `\r\n      margin: 0 auto;\r\n    `;\r\n    let warning = document.createElement('div');\r\n\r\n    warning.innerHTML = 'WARNING';\r\n    warning.style.cssText = `\r\n      height: 100px; \r\n      background-color: #dc3545;\r\n      line-height: 100px;\r\n      font-size: 50px;\r\n      font-weight: bold;\r\n      color: #fff;\r\n    `;\r\n\r\n    this._reason = document.createElement('div');\r\n    this._reason.innerHTML = this._reasonText;\r\n    this._reason.style.cssText = `\r\n      height: 180px;\r\n      background-color: rgb(220, 53, 69, 0.9);\r\n      font-size: 30px;\r\n      color: #fff;\r\n      padding: 10px;\r\n      border-left: 20px solid #dc3545;\r\n      border-right: 20px solid #dc3545;\r\n      border-bottom: 20px solid #dc3545;\r\n    `;\r\n\r\n    innerPanel.appendChild(warning);\r\n    innerPanel.appendChild(this._reason);\r\n\r\n    panel.appendChild(innerPanel);\r\n\r\n    dailog.appendChild(panel);\r\n\r\n    this._dialog = dailog;\r\n\r\n    // Append dialog div to body\r\n    let body = document.body || document.getElementsByTagName('body')[0];\r\n\r\n    body.appendChild(this._dialog);\r\n\r\n    // Append style to head\r\n    let zeuPole = `\r\n    @keyframes zeu-pole {\r\n      from { background-position: 0 0; }\r\n      to { background-position: 160px 80px; }\r\n    }\r\n    `;\r\n\r\n    let head = document.head || document.getElementsByTagName('head')[0];\r\n\r\n    let style = document.createElement('style');\r\n\r\n    style.type = 'text/css';\r\n    if (style.styleSheet) {\r\n      style.styleSheet.cssText = zeuPole;\r\n    } else {\r\n      style.appendChild(document.createTextNode(zeuPole));\r\n    }\r\n\r\n    head.appendChild(style);\r\n\r\n    this._blinkTimer = null;\r\n  }\r\n\r\n  blink() {\r\n    this._dialog.style.display = 'block';\r\n\r\n    if (this._blinkTimer == null) {\r\n      this._blinkTimer = setInterval(() => {\r\n        if (this._dialog.style.display !== 'block') {\r\n          this._dialog.style.display = 'block';\r\n        } else {\r\n          this._dialog.style.display = 'none';\r\n        }\r\n      }, this._interval);\r\n    }\r\n  }\r\n\r\n  unblink() {\r\n    this._dialog.style.display = 'none';\r\n    if (this._blinkTimer != null) {\r\n      clearInterval(this._blinkTimer);\r\n      this._blinkTimer = null;\r\n    }\r\n  }\r\n\r\n  set reason(reason) {\r\n    this._reasonText = reason;\r\n    this._reason.innerHTML = this._reasonText;\r\n  }\r\n\r\n  get reason() {\r\n    return this._reason;\r\n  }\r\n\r\n  set interval(interval) {\r\n    this._interval = interval;\r\n    if (this._blinkTimer != null) {\r\n      this.unblink();\r\n      this.blink();\r\n    }\r\n  }\r\n\r\n  get interval() {\r\n    return this._interval;\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class Heartbeat extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, baseDiv.clientWidth, 100);\r\n\r\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : COLOR.green;\r\n    this._fontColor = Utility.has(options, 'fontColor') ? options.fontColor : COLOR.black;\r\n    this._maxQueueCapacity = Utility.has(options, 'maxQueueCapacity') ? options.maxQueueCapacity : 30;\r\n\r\n    this._speed = 2;\r\n    this._queue = [];\r\n    this._lastSec = 0;\r\n    this._timer = null;\r\n  }\r\n\r\n  postConstructor() {\r\n    super.postConstructor();\r\n    // Start drawing the seconds\r\n    this.drawSeconds();\r\n  }\r\n\r\n  destroy() {\r\n    if (this._timer != null) {\r\n      clearInterval(this._timer);\r\n    }\r\n    super.destroy();\r\n  }\r\n\r\n  beat() {\r\n    if (this._queue.length >= this._maxQueueCapacity) {\r\n      this._queue.shift();\r\n    }\r\n    this._queue.push({ time: null, x: -30});\r\n  }\r\n\r\n  drawSeconds() {\r\n    this._timer = setInterval(() => {\r\n      if (this._queue.length >= this._maxQueueCapacity) {\r\n        this._queue.shift();\r\n      }\r\n\r\n      let now = new Date();\r\n      let currSec = Utility.leftPadZero(now.getMinutes()) + ':' + Utility.leftPadZero(now.getSeconds());\r\n\r\n      if (currSec !== this._lastSec) {\r\n        this._queue.push({ time: currSec, x: -30});\r\n        this._lastSec = currSec;\r\n      }\r\n    }, 1000);\r\n  }\r\n\r\n  drawFrame() {\r\n    this._ctx.textAlign = 'center';\r\n    this._ctx.font = '12px Arial';\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    // Draw the pulse\r\n    for (let i = 0; i < this._queue.length; i++) {\r\n      let q = this._queue[i];\r\n\r\n      if (q.time != null) {\r\n        this._ctx.fillStyle = this._fontColor;\r\n        this._ctx.fillText(q.time, q.x, 90);\r\n      } else {\r\n        this._ctx.fillStyle = this._lineColor;\r\n        this._ctx.beginPath();\r\n        this._ctx.moveTo(q.x - 10, 50);\r\n        this._ctx.quadraticCurveTo(q.x - 5, -20, q.x, 50);\r\n        this._ctx.quadraticCurveTo(q.x + 5, 100, q.x + 10, 50);\r\n        this._ctx.closePath();\r\n        this._ctx.fill();\r\n      }\r\n      q.x += this._speed;\r\n    }\r\n\r\n    // Draw the horizontal line\r\n    this._ctx.fillStyle = this._lineColor;\r\n    this._ctx.fillRect(0, 50, this._scaledWidth, 2);\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set lineColor(lineColor) {\r\n    this._lineColor = lineColor;\r\n  }\r\n\r\n  get lineColor() {\r\n    return this._lineColor;\r\n  }\r\n\r\n  set fontColor(fontColor) {\r\n    this._fontColor = fontColor;\r\n  }\r\n\r\n  get fontColor() {\r\n    return this._fontColor;\r\n  }\r\n\r\n  set maxQueueCapacity(maxQueueCapacity) {\r\n    this._maxQueueCapacity = maxQueueCapacity;\r\n  }\r\n\r\n  get maxQueueCapacity() {\r\n    return this._maxQueueCapacity;\r\n  }\r\n}\r\n\r\n","\r\nimport BaseCanvas from './base-canvas';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class VolumeMeter extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 100, 200);\r\n\r\n    // Options\r\n    this._min = Utility.has(options, 'min') ? options.min : 0;\r\n    this._max = Utility.has(options, 'max') ? options.max : 100;\r\n    this._fillColor = Utility.has(options, 'fillColor') ? options.fillColor : COLOR.green;\r\n    this._fontColor = Utility.has(options, 'fontColor') ? options.fontColor : COLOR.black;\r\n    this._lineColor = Utility.has(options, 'lineColor') ? options.lineColor : COLOR.black;\r\n    this._lineWidth = Utility.has(options, 'lineWidth') ? options.lineWidth : 5;\r\n\r\n    this._speed = 3;\r\n    this._value = 50;\r\n    this._meterWidth = 50;\r\n    this._meterHeight = 180;\r\n\r\n    // Ignore line width totally.\r\n    this._y = this._meterHeight - ((this._value / (this._max - this._min)) * this._meterHeight) + 10;\r\n    this._nextY = this._y;\r\n  }\r\n\r\n  postConstructor() {\r\n    super.postConstructor();\r\n    this._ctx.font = '12px Arial';\r\n  }\r\n\r\n  set value(n) {\r\n    if (n >= this._min || n <= this._max) {\r\n      this._speed = n < this._value ? Math.abs(this._speed) : -Math.abs(this._speed);\r\n      this._nextY = this._meterHeight - ((n / (this._max - this._min)) * this._meterHeight) + 10;\r\n      this._value = n;\r\n    }\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  drawFrame() {\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this._ctx.moveTo(0, 0);\r\n    this._ctx.fillStyle = this._fillColor;\r\n    this._ctx.beginPath();\r\n    // Draw the filled part.\r\n    this._ctx.fillRect(25, this._y, this._meterWidth, 190 - this._y);\r\n\r\n    this._y = Utility.getNextPos(this._y, this._nextY, this._speed);\r\n\r\n    // Draw the border.\r\n    this._ctx.rect(25, 10, this._meterWidth, this._meterHeight);\r\n    this._ctx.lineWidth = this._lineWidth;\r\n    this._ctx.strokeStyle = this._lineColor;\r\n\r\n    this._ctx.fillStyle = this._fontColor;\r\n    // Draw max number.\r\n    this._ctx.textAlign = 'right';\r\n    this._ctx.fillText(this._max, 20, 15);\r\n    // Draw min number.\r\n    this._ctx.fillText(this._min, 20, this._meterHeight + 15);\r\n    // Draw value.\r\n    this._ctx.textAlign = 'left';\r\n    this._ctx.fillText(this._value, this._meterWidth + 30, this._y + 15 * 0.5);\r\n    this._ctx.stroke();\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set fillColor(fillColor) {\r\n    this._fillColor = fillColor;\r\n  }\r\n\r\n  get fillColor() {\r\n    return this._fillColor;\r\n  }\r\n\r\n  set fontColor(fontColor) {\r\n    this._fontColor = fontColor;\r\n  }\r\n\r\n  get fontColor() {\r\n    return this._fontColor;\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class RoundFan extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 200, 200);\r\n\r\n    // Options\r\n    this._fanColor = Utility.has(options, 'fanColor') ? options.fanColor : COLOR.green;\r\n    this._centerColor = Utility.has(options, 'centerColor') ? options.centerColor : '#FFFFFF';\r\n    this._speed = Utility.has(options, 'speed') ? options.speed : 1;\r\n  }\r\n\r\n  postConstructor() {\r\n    super.postConstructor();\r\n    this._ctx.globalCompositeOperation = 'destination-over';\r\n  }\r\n\r\n  on() {\r\n    this.startAnimation();\r\n  }\r\n\r\n  off() {\r\n    this.stopAnimation();\r\n  }\r\n\r\n  drawFrame() {\r\n    let now = new Date();\r\n    let angle = Utility.getAngleByDate(this._speed, now);\r\n\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this._ctx.translate(100, 100);\r\n    this._ctx.rotate(angle);\r\n\r\n    this._ctx.strokeStyle = this._centerColor;\r\n    this._ctx.beginPath();\r\n    this._ctx.arc(0, 0, 10, 0, 2 * Math.PI);\r\n    this._ctx.fillStyle = this._centerColor;\r\n    this._ctx.fill();\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.arc(0, 0, 30, 0, 2 * Math.PI);\r\n    this._ctx.fillStyle = this._fanColor;\r\n    this._ctx.fill();\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.arc(0, 0, 35, 0, 2 * Math.PI);\r\n    this._ctx.fillStyle = this._centerColor;\r\n    this._ctx.fill();\r\n\r\n    this._ctx.beginPath();\r\n    this._ctx.moveTo(0, 0);\r\n\r\n    // Up\r\n    this._ctx.quadraticCurveTo(-60, -80, 0, -90);\r\n    this._ctx.quadraticCurveTo(80, -100, 0, 0);\r\n\r\n    // Right\r\n    this._ctx.quadraticCurveTo(80, -60, 90, 0);\r\n    this._ctx.quadraticCurveTo(100, 80, 0, 0);\r\n\r\n    // Down\r\n    this._ctx.quadraticCurveTo(60, 80, 0, 90);\r\n    this._ctx.quadraticCurveTo(-80, 100, 0, 0);\r\n\r\n    // Left\r\n    this._ctx.quadraticCurveTo(-80, 60, -90, 0);\r\n    this._ctx.quadraticCurveTo(-100, -80, 0, 0);\r\n\r\n    this._ctx.fillStyle = this._fanColor;\r\n    this._ctx.fill();\r\n    this._ctx.stroke();\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set speed(speed) {\r\n    this._speed = speed;\r\n  }\r\n\r\n  get speed() {\r\n    return this._speed;\r\n  }\r\n\r\n  set centerColor(color) {\r\n    this._centerColor = color;\r\n  }\r\n\r\n  get centerColor() {\r\n    this._centerColor;\r\n  }\r\n\r\n  set fanColor(color) {\r\n    this._fanColor = color;\r\n  }\r\n\r\n  get fanColor() {\r\n    this._fanColor;\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport Utility from './utility';\r\nimport { COLOR } from './color';\r\n\r\nexport default class DigitalClock extends BaseCanvas {\r\n\r\n  constructor(baseDiv, options) {\r\n    super(baseDiv, 370, 100);\r\n\r\n    // Options\r\n    // Bar width\r\n    this._bw = Utility.has(options, 'barWidth') ? options.barWidth : 4;\r\n\r\n    // Bar height\r\n    this._bh = Utility.has(options, 'barHeight') ? options.barHeight : 20;\r\n\r\n    // Space between numbers\r\n    this._space = Utility.has(options, 'space') ? options.space : 10;\r\n    this._numberColor = Utility.has(options, 'numberColor') ? options.numberColor : COLOR.green;\r\n    this._dashColor = Utility.has(options, 'dashColor') ? options.dashColor : COLOR.grey;\r\n    this._hourOffset = Utility.has(options, 'hourOffset') ? options.hourOffset : 0;\r\n\r\n    this._timer = null;\r\n  }\r\n\r\n  postConstructor() {\r\n    this.tick();\r\n  }\r\n\r\n  destroy() {\r\n    this.stopTick();\r\n    super.destroy();\r\n  }\r\n\r\n  tick() {\r\n    if (this._timer == null) {\r\n      this._timer = setInterval(() => {\r\n        let now = Utility.addHour(this._hourOffset);\r\n\r\n        this.clearAll();\r\n        this._ctx.save();\r\n        this.scale();\r\n\r\n        this._ctx.translate(this._space, this._space);\r\n\r\n        // Draw hour.\r\n        this.drawTime(now.getHours());\r\n        this.drawInterpoint();\r\n\r\n        // Draw minute.\r\n        this.drawTime(now.getMinutes());\r\n        this.drawInterpoint();\r\n\r\n        // Draw second.\r\n        this.drawTime(now.getSeconds());\r\n\r\n        this._ctx.restore();\r\n      }, 1000);\r\n    }\r\n  }\r\n\r\n  stopTick() {\r\n    if (this._timer != null) {\r\n      clearInterval(this._timer);\r\n      this._timer = null;\r\n    }\r\n  }\r\n\r\n  drawInterpoint() {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._numberColor;\r\n    this._ctx.fillRect(0, (this._bh * 2 + this._bw) / 3, this._bw, this._bw);\r\n    this._ctx.fillRect(0, (this._bh * 2 + this._bw) / 3 * 2 + this._bw, this._bw, this._bw);\r\n    this._ctx.translate(this._bw + this._space, 0);\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  drawTime(t) {\r\n    if (t < 10) {\r\n      this.drawNumber(0);\r\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\r\n      this.drawNumber(t);\r\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\r\n    } else {\r\n      let d = Math.floor(t / 10);\r\n      let r = t % 10;\r\n\r\n      this.drawNumber(d);\r\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\r\n      this.drawNumber(r);\r\n      this._ctx.translate(this._bw * 2 + this._bh + this._space, 0);\r\n    }\r\n  }\r\n\r\n  drawEmpty() {\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._dashColor;\r\n    this._ctx.moveTo(0, 0);\r\n    this.vTopLeft();\r\n    this.vBottomLeft();\r\n    this.vBottomRight();\r\n    this.vTopRight();\r\n    this.hTop();\r\n    this.hMiddle();\r\n    this.hBottom();\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  // Vertical: top left\r\n  vTopLeft() {\r\n    this._ctx.fillRect(0, this._bw, this._bw, this._bh);\r\n  }\r\n\r\n  // Vertical: bottom left\r\n  vBottomLeft() {\r\n    this._ctx.fillRect(0, this._bw * 2 + this._bh, this._bw, this._bh);\r\n  }\r\n\r\n  // Vertial: top right\r\n  vTopRight() {\r\n    this._ctx.fillRect(this._bw + this._bh, this._bw, this._bw, this._bh);\r\n  }\r\n\r\n  // Vertial: bottom right\r\n  vBottomRight() {\r\n    this._ctx.fillRect(this._bw + this._bh, this._bw * 2 + this._bh, this._bw, this._bh);\r\n  }\r\n\r\n  // Horizontal: top\r\n  hTop() {\r\n    this._ctx.fillRect(this._bw, 0, this._bh, this._bw);\r\n  }\r\n  // Horizontal: middle\r\n  hMiddle() {\r\n    this._ctx.fillRect(this._bw, this._bw + this._bh, this._bh, this._bw);\r\n  }\r\n\r\n  // Horizontal: bottom\r\n  hBottom() {\r\n    this._ctx.fillRect(this._bw, this._bw * 2 + this._bh * 2, this._bh, this._bw);\r\n  }\r\n\r\n  drawNumber(n) {\r\n    this.drawEmpty();\r\n    this._ctx.beginPath();\r\n    this._ctx.fillStyle = this._numberColor;\r\n\r\n    switch (n) {\r\n      case 0:\r\n        this.hTop();\r\n        this.hBottom();\r\n        this.vTopLeft();\r\n        this.vTopRight();\r\n        this.vBottomLeft();\r\n        this.vBottomRight();\r\n        break;\r\n      case 1:\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        break;\r\n      case 2:\r\n        this.hTop();\r\n        this.vTopRight();\r\n        this.hMiddle();\r\n        this.vBottomLeft();\r\n        this.hBottom();\r\n        break;\r\n      case 3:\r\n        this.hTop();\r\n        this.hMiddle();\r\n        this.hBottom();\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        break;\r\n      case 4:\r\n        this.hMiddle();\r\n        this.vTopLeft();\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        break;\r\n      case 5:\r\n        this.hTop();\r\n        this.hMiddle();\r\n        this.hBottom();\r\n        this.vTopLeft();\r\n        this.vBottomRight();\r\n        break;\r\n      case 6:\r\n        this.hTop();\r\n        this.hMiddle();\r\n        this.hBottom();\r\n        this.vTopLeft();\r\n        this.vBottomLeft();\r\n        this.vBottomRight();\r\n        break;\r\n      case 7:\r\n        this.hTop();\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        break;\r\n      case 8:\r\n        this.vTopLeft();\r\n        this.vBottomLeft();\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        this.hTop();\r\n        this.hMiddle();\r\n        this.hBottom();\r\n        break;\r\n      case 9:\r\n        this.hTop();\r\n        this.hMiddle();\r\n        this.vTopLeft();\r\n        this.vTopRight();\r\n        this.vBottomRight();\r\n        break;\r\n    }\r\n    this._ctx.closePath();\r\n  }\r\n\r\n  set numberColor(numberColor) {\r\n    this._numberColor = numberColor;\r\n  }\r\n\r\n  get numberColor() {\r\n    return this._numberColor;\r\n  }\r\n\r\n  set dashColor(dashColor) {\r\n    this._dashColor = dashColor;\r\n  }\r\n\r\n  get dashColor() {\r\n    return this._dashColor;\r\n  }\r\n}\r\n","import BaseCanvas from './base-canvas';\r\nimport { COLOR } from './color';\r\nimport Utility from './utility';\r\n\r\nexport default class BarMeter extends BaseCanvas {\r\n\r\n  constructor(canvas, options) {\r\n    super(canvas, 100, 200);\r\n\r\n    // Options\r\n    this._min = Utility.has(options, 'min') ? options.min : 0;\r\n    this._max = Utility.has(options, 'max') ? options.max : 100;\r\n    this._value = Utility.has(options, 'value') ? options.value : 50;\r\n    this._dashColor = Utility.has(options, 'dashColor') ? options.dashColor : COLOR.grey;\r\n    this._barColor = Utility.has(options, 'barColor') ? options.barColor : COLOR.green;\r\n    this._speed = Utility.has(options, 'speed') ? options.speed : 5;\r\n\r\n    this._barWidth = 80;\r\n    this._barHeight = 15;\r\n    this._space = (100 - this._barWidth) / 2;\r\n    this._currBar = 0;\r\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\r\n    this._barMax = this._numberOfBars * 100;\r\n  }\r\n\r\n  postConstructor() {\r\n    super.postConstructor();\r\n    this._ctx.globalCompositeOperation = 'source-over';\r\n  }\r\n\r\n  drawFrame() {\r\n    this.clearAll();\r\n    this._ctx.save();\r\n    this.scale();\r\n\r\n    this._ctx.fillStyle = this._dashColor;\r\n    for (let i = 0; i < 10; i++) {\r\n      let y = 5 + i * 20;\r\n\r\n      this._ctx.beginPath();\r\n      this._ctx.fillRect(this._space, y, this._barWidth, this._barHeight);\r\n      this._ctx.closePath();\r\n    }\r\n\r\n    this._ctx.fillStyle = this._barColor;\r\n\r\n    if (this._currBar >= this._barMax) {\r\n      this._currBar = -100;\r\n    } else {\r\n      let bar = this._currBar / 100;\r\n\r\n      for (let i = 0; i < bar; i++) {\r\n        let y = 200 - (15 + i * 20);\r\n\r\n        this._ctx.beginPath();\r\n        this._ctx.fillRect(this._space, y, this._barWidth, this._barHeight);\r\n        this._ctx.closePath();\r\n      }\r\n\r\n      this._currBar += this._speed;\r\n    }\r\n\r\n    this._ctx.restore();\r\n  }\r\n\r\n  set value(value) {\r\n    this._value = value;\r\n    this._numberOfBars = Math.floor((this._value - this._min) / (this._max - this._min) * 10);\r\n    this._barMax = this._numberOfBars * 100;\r\n  }\r\n\r\n  get value() {\r\n    return this._value;\r\n  }\r\n\r\n  get valuePct() {\r\n    return Math.floor(this._value / (this._max - this._min) * 100);\r\n  }\r\n\r\n  set dashColor(dashColor) {\r\n    this._dashColor = dashColor;\r\n  }\r\n\r\n  get dashColor() {\r\n    return this._dashColor;\r\n  }\r\n\r\n  set barColor(barColor) {\r\n    this._barColor = barColor;\r\n  }\r\n\r\n  get barColor() {\r\n    return this._barColor;\r\n  }\r\n}\r\n\r\n","import BarMeter from './bar-meter';\r\nimport DigitalClcok from './digital-clock';\r\nimport RoundFan from './round-fan';\r\nimport VolumeMeter from './volume-meter';\r\nimport Heartbeat from './heartbeat';\r\nimport WarningDialog from './warning-dialog';\r\nimport BlinkText from './blink-text';\r\nimport ScrollPanel from './scroll-panel';\r\nimport MessageQueue from './message-queue';\r\nimport DoubleCircle from './double-circle';\r\nimport RoundRadar from './round-radar';\r\nimport RoundGauge from './round-gauge';\r\nimport StopWatch from './stop-watch';\r\nimport TextMeter from './text-meter';\r\nimport AnimationTimer from './animation-timer';\r\nimport Settings from './settings';\r\n\r\nexport {\r\n  BarMeter,\r\n  DigitalClcok,\r\n  RoundFan,\r\n  VolumeMeter,\r\n  Heartbeat,\r\n  MessageQueue,\r\n  DoubleCircle,\r\n  WarningDialog,\r\n  BlinkText,\r\n  RoundRadar,\r\n  RoundGauge,\r\n  StopWatch,\r\n  TextMeter,\r\n  ScrollPanel,\r\n  Settings\r\n};\r\n\r\n// Fire up window.requestAnimationFrame()\r\nAnimationTimer.render();\r\n"],"sourceRoot":""}